schema @link(url: "https://specs.apollo.dev/link/v1.0") @link(url: "https://specs.apollo.dev/join/v0.3", for: EXECUTION) @link(url: "https://the-guild.dev/graphql/mesh/spec/v1.0", import: ["@resolveRoot", "@statusCodeTypeName", "@length", "@enum", "@regexp", "@typescript", "@discriminator", "@httpOperation", "@transport", "@hidden", "@source", "@extraSchemaDefinitionDirective", "@graphinx", "@rateLimit"]) {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

directive @join__enumValue(graph: join__Graph!) repeatable on ENUM_VALUE

directive @join__field(graph: join__Graph, requires: join__FieldSet, provides: join__FieldSet, type: String, external: Boolean, override: String, usedOverridden: Boolean) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__implements(graph: join__Graph!, interface: String!) repeatable on OBJECT | INTERFACE

directive @join__type(graph: join__Graph!, key: join__FieldSet, extension: Boolean! = false, resolvable: Boolean! = true, isInterfaceObject: Boolean! = false) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR

directive @join__unionMember(graph: join__Graph!, member: String!) repeatable on UNION

directive @link(url: String, as: String, for: link__Purpose, import: [link__Import]) repeatable on SCHEMA

directive @resolveRoot(subgraph: String) repeatable on FIELD_DEFINITION

directive @statusCodeTypeName(subgraph: String, typeName: String, statusCode: String) repeatable on UNION

directive @length(subgraph: String, min: Int, max: Int) repeatable on SCALAR

directive @enum(subgraph: String, value: String) repeatable on ENUM_VALUE

directive @regexp(subgraph: String, pattern: String) repeatable on SCALAR

directive @typescript(subgraph: String, type: String) repeatable on SCALAR | ENUM

directive @discriminator(subgraph: String, field: String, mapping: [[String]]) repeatable on INTERFACE | UNION

directive @httpOperation(subgraph: String, path: String, operationSpecificHeaders: [[String]], httpMethod: HttpMethod, isBinary: Boolean, requestBaseBody: ObjMap, queryParamArgMap: ObjMap, queryStringOptionsByParam: ObjMap, jsonApiFields: Boolean, queryStringOptions: ObjMap) repeatable on FIELD_DEFINITION

directive @transport(subgraph: String!, kind: String!, location: String!, headers: [[String]], queryStringOptions: ObjMap, queryParams: [[String]], options: ChurrosTransportOptions) repeatable on SCHEMA

directive @hidden on FIELD_DEFINITION | OBJECT | INTERFACE | INPUT_FIELD_DEFINITION | ARGUMENT_DEFINITION | INPUT_OBJECT

directive @source(name: String!, type: String, subgraph: String!) repeatable on SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @extraSchemaDefinitionDirective(directives: _DirectiveExtensions) repeatable on OBJECT

directive @graphinx(module: String) on OBJECT | FIELD_DEFINITION | SCALAR | ENUM | UNION | INTERFACE | INPUT_OBJECT

directive @rateLimit(limit: Int!, duration: Int!) on OBJECT | FIELD_DEFINITION

directive @additionalField on FIELD_DEFINITION

scalar join__FieldSet

scalar link__Import

enum link__Purpose {
  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY
  """
  `EXECUTION` features provide metadata necessary for operation execution.
  """
  EXECUTION
}

enum join__Graph {
  AUTHENTIK @join__graph(name: "Authentik", url: "https://auth.inpt.fr/api/v3/")
  CHURROS @join__graph(name: "Churros", url: "https://churros.inpt.fr/graphql")
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @join__type(graph: AUTHENTIK) @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
"""
scalar BigInt @join__type(graph: AUTHENTIK)

"""Integers that will have a value greater than 0."""
scalar PositiveInt @join__type(graph: AUTHENTIK)

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime @join__type(graph: AUTHENTIK)

"""The human-readable name of this device."""
scalar QueryAuthenticatorsAdminDuoListOneOf_0ResultsItemsName @length(subgraph: "Authentik", max: 64) @source(name: "query_authenticators_admin_duo_list_oneOf_0_results_items_name", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""
A field whose value is a generic Universally Unique Identifier: https://en.wikipedia.org/wiki/Universally_unique_identifier.
"""
scalar UUID @join__type(graph: AUTHENTIK)

"""The human-readable name of this device."""
scalar QueryAuthenticatorsAdminEndpointListOneOf_0ResultsItemsName @length(subgraph: "Authentik", max: 64) @source(name: "query_authenticators_admin_endpoint_list_oneOf_0_results_items_name", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""The human-readable name of this device."""
scalar QueryAuthenticatorsAdminSmsListOneOf_0ResultsItemsName @length(subgraph: "Authentik", max: 64) @source(name: "query_authenticators_admin_sms_list_oneOf_0_results_items_name", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""The human-readable name of this device."""
scalar QueryAuthenticatorsAdminStaticListOneOf_0ResultsItemsName @length(subgraph: "Authentik", max: 64) @source(name: "query_authenticators_admin_static_list_oneOf_0_results_items_name", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar QueryAuthenticatorsAdminStaticListOneOf_0ResultsItemsTokenSetItemsToken @length(subgraph: "Authentik", max: 16) @source(name: "query_authenticators_admin_static_list_oneOf_0_results_items_token_set_items_token", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""The human-readable name of this device."""
scalar QueryAuthenticatorsAdminTotpListOneOf_0ResultsItemsName @length(subgraph: "Authentik", max: 64) @source(name: "query_authenticators_admin_totp_list_oneOf_0_results_items_name", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar QueryAuthenticatorsAdminWebauthnListOneOf_0ResultsItemsName @length(subgraph: "Authentik", max: 200) @source(name: "query_authenticators_admin_webauthn_list_oneOf_0_results_items_name", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar QueryCoreApplicationsListOneOf_0ResultsItemsSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "query_core_applications_list_oneOf_0_results_items_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""
A field whose value conforms to the standard URL format as specified in RFC3986: https://www.ietf.org/rfc/rfc3986.txt.
"""
scalar URL @join__type(graph: AUTHENTIK)

scalar QueryCoreGroupsListOneOf_0ResultsItemsUsersObjItemsUsername @regexp(subgraph: "Authentik", pattern: "^[\\w.@+-]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "query_core_groups_list_oneOf_0_results_items_users_obj_items_username", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""
A field whose value conforms to the standard internet email address format as specified in HTML Spec: https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address.
"""
scalar EmailAddress @join__type(graph: AUTHENTIK) @specifiedBy(url: "https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address")

scalar QueryCoreGroupsListOneOf_0ResultsItemsRolesObjItemsName @length(subgraph: "Authentik", max: 150) @source(name: "query_core_groups_list_oneOf_0_results_items_roles_obj_items_name", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar QueryCoreTokensListOneOf_0ResultsItemsIdentifier @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "query_core_tokens_list_oneOf_0_results_items_identifier", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar QueryCoreTokensListOneOf_0ResultsItemsUserObjUsername @length(subgraph: "Authentik", max: 150) @source(name: "query_core_tokens_list_oneOf_0_results_items_user_obj_username", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""Represents empty values"""
scalar Void @join__type(graph: AUTHENTIK)

scalar QueryCoreUsersMeRetrieveOneOf_0UserUsername @regexp(subgraph: "Authentik", pattern: "^[\\w.@+-]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "query_core_users_me_retrieve_oneOf_0_user_username", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar QueryFlowsBindingsListOneOf_0ResultsItemsStageObjFlowSetItemsSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "query_flows_bindings_list_oneOf_0_results_items_stage_obj_flow_set_items_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar QueryFlowsInstancesListOneOf_0ResultsItemsSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "query_flows_instances_list_oneOf_0_results_items_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""The `File` scalar type represents a file upload."""
scalar File @join__type(graph: AUTHENTIK)

scalar QueryOauth2AccessTokensListOneOf_0ResultsItemsProviderClientId @length(subgraph: "Authentik", max: 255) @source(name: "query_oauth2_access_tokens_list_oneOf_0_results_items_provider_client_id", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar QueryOauth2AccessTokensListOneOf_0ResultsItemsProviderClientSecret @length(subgraph: "Authentik", max: 255) @source(name: "query_oauth2_access_tokens_list_oneOf_0_results_items_provider_client_secret", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar QueryOutpostsProxyListOneOf_0ResultsItemsClientId @length(subgraph: "Authentik", max: 255) @source(name: "query_outposts_proxy_list_oneOf_0_results_items_client_id", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar QueryOutpostsProxyListOneOf_0ResultsItemsClientSecret @length(subgraph: "Authentik", max: 255) @source(name: "query_outposts_proxy_list_oneOf_0_results_items_client_secret", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""Integers that will have a value of 0 or more."""
scalar NonNegativeInt @join__type(graph: AUTHENTIK)

scalar QueryRbacPermissionsListOneOf_0ResultsItemsName @length(subgraph: "Authentik", max: 255) @source(name: "query_rbac_permissions_list_oneOf_0_results_items_name", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar QueryRbacPermissionsListOneOf_0ResultsItemsCodename @length(subgraph: "Authentik", max: 100) @source(name: "query_rbac_permissions_list_oneOf_0_results_items_codename", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar QueryRbacPermissionsAssignedByUsersListOneOf_0ResultsItemsUsername @regexp(subgraph: "Authentik", pattern: "^[\\w.@+-]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "query_rbac_permissions_assigned_by_users_list_oneOf_0_results_items_username", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar QuerySourcesAllListOneOf_0ResultsItemsSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "query_sources_all_list_oneOf_0_results_items_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar QuerySourcesKerberosListOneOf_0ResultsItemsSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "query_sources_kerberos_list_oneOf_0_results_items_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar QuerySourcesLdapListOneOf_0ResultsItemsSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "query_sources_ldap_list_oneOf_0_results_items_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar QuerySourcesOauthListOneOf_0ResultsItemsSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "query_sources_oauth_list_oneOf_0_results_items_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""
URL used to request the initial token. This URL is only required for OAuth 1.
"""
scalar QuerySourcesOauthListOneOf_0ResultsItemsRequestTokenUrl @length(subgraph: "Authentik", max: 255) @source(name: "query_sources_oauth_list_oneOf_0_results_items_request_token_url", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""URL the user is redirect to to conest the flow."""
scalar QuerySourcesOauthListOneOf_0ResultsItemsAuthorizationUrl @length(subgraph: "Authentik", max: 255) @source(name: "query_sources_oauth_list_oneOf_0_results_items_authorization_url", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""URL used by authentik to retrieve tokens."""
scalar QuerySourcesOauthListOneOf_0ResultsItemsAccessTokenUrl @length(subgraph: "Authentik", max: 255) @source(name: "query_sources_oauth_list_oneOf_0_results_items_access_token_url", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""URL used by authentik to get user information."""
scalar QuerySourcesOauthListOneOf_0ResultsItemsProfileUrl @length(subgraph: "Authentik", max: 255) @source(name: "query_sources_oauth_list_oneOf_0_results_items_profile_url", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar QuerySourcesPlexListOneOf_0ResultsItemsSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "query_sources_plex_list_oneOf_0_results_items_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar QuerySourcesSamlListOneOf_0ResultsItemsSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "query_sources_saml_list_oneOf_0_results_items_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar QuerySourcesScimListOneOf_0ResultsItemsSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "query_sources_scim_list_oneOf_0_results_items_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar QuerySourcesUserConnectionsOauthListOneOf_0ResultsItemsIdentifier @length(subgraph: "Authentik", max: 255) @source(name: "query_sources_user_connections_oauth_list_oneOf_0_results_items_identifier", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar QueryStagesInvitationInvitationsListOneOf_0ResultsItemsName @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "query_stages_invitation_invitations_list_oneOf_0_results_items_name", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""A string that cannot be passed as an empty value"""
scalar NonEmptyString @join__type(graph: AUTHENTIK)

"""The human-readable name of this device."""
scalar MutationInputAuthenticatorsAdminDuoCreateInputName @length(subgraph: "Authentik", min: 1, max: 64) @source(name: "mutationInput_authenticators_admin_duo_create_input_name", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""The human-readable name of this device."""
scalar MutationInputAuthenticatorsAdminDuoPartialUpdateInputName @length(subgraph: "Authentik", min: 1, max: 64) @source(name: "mutationInput_authenticators_admin_duo_partial_update_input_name", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""The human-readable name of this device."""
scalar MutationInputAuthenticatorsAdminEndpointCreateInputName @length(subgraph: "Authentik", min: 1, max: 64) @source(name: "mutationInput_authenticators_admin_endpoint_create_input_name", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""The human-readable name of this device."""
scalar MutationInputAuthenticatorsAdminEndpointPartialUpdateInputName @length(subgraph: "Authentik", min: 1, max: 64) @source(name: "mutationInput_authenticators_admin_endpoint_partial_update_input_name", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""The human-readable name of this device."""
scalar MutationInputAuthenticatorsAdminSmsCreateInputName @length(subgraph: "Authentik", min: 1, max: 64) @source(name: "mutationInput_authenticators_admin_sms_create_input_name", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""The human-readable name of this device."""
scalar MutationInputAuthenticatorsAdminSmsPartialUpdateInputName @length(subgraph: "Authentik", min: 1, max: 64) @source(name: "mutationInput_authenticators_admin_sms_partial_update_input_name", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""The human-readable name of this device."""
scalar MutationInputAuthenticatorsAdminStaticCreateInputName @length(subgraph: "Authentik", min: 1, max: 64) @source(name: "mutationInput_authenticators_admin_static_create_input_name", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""The human-readable name of this device."""
scalar MutationInputAuthenticatorsAdminStaticPartialUpdateInputName @length(subgraph: "Authentik", min: 1, max: 64) @source(name: "mutationInput_authenticators_admin_static_partial_update_input_name", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""The human-readable name of this device."""
scalar MutationInputAuthenticatorsAdminTotpCreateInputName @length(subgraph: "Authentik", min: 1, max: 64) @source(name: "mutationInput_authenticators_admin_totp_create_input_name", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""The human-readable name of this device."""
scalar MutationInputAuthenticatorsAdminTotpPartialUpdateInputName @length(subgraph: "Authentik", min: 1, max: 64) @source(name: "mutationInput_authenticators_admin_totp_partial_update_input_name", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputAuthenticatorsAdminWebauthnCreateInputName @length(subgraph: "Authentik", min: 1, max: 200) @source(name: "mutationInput_authenticators_admin_webauthn_create_input_name", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputAuthenticatorsAdminWebauthnPartialUpdateInputName @length(subgraph: "Authentik", min: 1, max: 200) @source(name: "mutationInput_authenticators_admin_webauthn_partial_update_input_name", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputCoreApplicationsCreateInputSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "mutationInput_core_applications_create_input_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputCoreApplicationsPartialUpdateInputSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "mutationInput_core_applications_partial_update_input_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputCoreTokensCreateInputIdentifier @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "mutationInput_core_tokens_create_input_identifier", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputCoreTokensPartialUpdateInputIdentifier @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "mutationInput_core_tokens_partial_update_input_identifier", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputCoreTransactionalApplicationsUpdateInputProviderOneOf_3ClientId @length(subgraph: "Authentik", min: 1, max: 255) @source(name: "mutationInput_core_transactional_applications_update_input_provider_oneOf_3_client_id", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputCoreTransactionalApplicationsUpdateInputProviderOneOf_3ClientSecret @length(subgraph: "Authentik", max: 255) @source(name: "mutationInput_core_transactional_applications_update_input_provider_oneOf_3_client_secret", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputCoreUsersCreateInputUsername @length(subgraph: "Authentik", min: 1, max: 150) @source(name: "mutationInput_core_users_create_input_username", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputCoreUsersPartialUpdateInputUsername @length(subgraph: "Authentik", min: 1, max: 150) @source(name: "mutationInput_core_users_partial_update_input_username", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputFlowsInstancesCreateInputSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "mutationInput_flows_instances_create_input_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputFlowsInstancesPartialUpdateInputSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "mutationInput_flows_instances_partial_update_input_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputProvidersOauth2PartialUpdateInputClientId @length(subgraph: "Authentik", min: 1, max: 255) @source(name: "mutationInput_providers_oauth2_partial_update_input_client_id", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputProvidersOauth2PartialUpdateInputClientSecret @length(subgraph: "Authentik", max: 255) @source(name: "mutationInput_providers_oauth2_partial_update_input_client_secret", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputRbacRolesCreateInputName @length(subgraph: "Authentik", min: 1, max: 150) @source(name: "mutationInput_rbac_roles_create_input_name", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputRbacRolesPartialUpdateInputName @length(subgraph: "Authentik", min: 1, max: 150) @source(name: "mutationInput_rbac_roles_partial_update_input_name", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputSourcesKerberosCreateInputSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "mutationInput_sources_kerberos_create_input_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputSourcesKerberosPartialUpdateInputSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "mutationInput_sources_kerberos_partial_update_input_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputSourcesLdapCreateInputSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "mutationInput_sources_ldap_create_input_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputSourcesLdapPartialUpdateInputSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "mutationInput_sources_ldap_partial_update_input_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputSourcesOauthCreateInputSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "mutationInput_sources_oauth_create_input_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""
URL used to request the initial token. This URL is only required for OAuth 1.
"""
scalar MutationInputSourcesOauthCreateInputRequestTokenUrl @length(subgraph: "Authentik", max: 255) @source(name: "mutationInput_sources_oauth_create_input_request_token_url", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""URL the user is redirect to to conest the flow."""
scalar MutationInputSourcesOauthCreateInputAuthorizationUrl @length(subgraph: "Authentik", max: 255) @source(name: "mutationInput_sources_oauth_create_input_authorization_url", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""URL used by authentik to retrieve tokens."""
scalar MutationInputSourcesOauthCreateInputAccessTokenUrl @length(subgraph: "Authentik", max: 255) @source(name: "mutationInput_sources_oauth_create_input_access_token_url", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""URL used by authentik to get user information."""
scalar MutationInputSourcesOauthCreateInputProfileUrl @length(subgraph: "Authentik", max: 255) @source(name: "mutationInput_sources_oauth_create_input_profile_url", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputSourcesOauthPartialUpdateInputSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "mutationInput_sources_oauth_partial_update_input_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""
URL used to request the initial token. This URL is only required for OAuth 1.
"""
scalar MutationInputSourcesOauthPartialUpdateInputRequestTokenUrl @length(subgraph: "Authentik", max: 255) @source(name: "mutationInput_sources_oauth_partial_update_input_request_token_url", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""URL the user is redirect to to conest the flow."""
scalar MutationInputSourcesOauthPartialUpdateInputAuthorizationUrl @length(subgraph: "Authentik", max: 255) @source(name: "mutationInput_sources_oauth_partial_update_input_authorization_url", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""URL used by authentik to retrieve tokens."""
scalar MutationInputSourcesOauthPartialUpdateInputAccessTokenUrl @length(subgraph: "Authentik", max: 255) @source(name: "mutationInput_sources_oauth_partial_update_input_access_token_url", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

"""URL used by authentik to get user information."""
scalar MutationInputSourcesOauthPartialUpdateInputProfileUrl @length(subgraph: "Authentik", max: 255) @source(name: "mutationInput_sources_oauth_partial_update_input_profile_url", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputSourcesPlexCreateInputSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "mutationInput_sources_plex_create_input_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputSourcesPlexPartialUpdateInputSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "mutationInput_sources_plex_partial_update_input_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputSourcesSamlCreateInputSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "mutationInput_sources_saml_create_input_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputSourcesSamlPartialUpdateInputSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "mutationInput_sources_saml_partial_update_input_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputSourcesScimCreateInputSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "mutationInput_sources_scim_create_input_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputSourcesScimPartialUpdateInputSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "mutationInput_sources_scim_partial_update_input_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputSourcesUserConnectionsOauthCreateInputIdentifier @length(subgraph: "Authentik", min: 1, max: 255) @source(name: "mutationInput_sources_user_connections_oauth_create_input_identifier", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputSourcesUserConnectionsOauthPartialUpdateInputIdentifier @length(subgraph: "Authentik", min: 1, max: 255) @source(name: "mutationInput_sources_user_connections_oauth_partial_update_input_identifier", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputStagesAuthenticatorDuoCreateInputFlowSetItemsSlug @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "mutationInput_stages_authenticator_duo_create_input_flow_set_items_slug", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputStagesInvitationInvitationsCreateInputName @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "mutationInput_stages_invitation_invitations_create_input_name", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar MutationInputStagesInvitationInvitationsPartialUpdateInputName @regexp(subgraph: "Authentik", pattern: "^[-a-zA-Z0-9_]+$") @typescript(subgraph: "Authentik", type: "string") @source(name: "mutationInput_stages_invitation_invitations_partial_update_input_name", subgraph: "Authentik") @join__type(graph: AUTHENTIK)

scalar ObjMap @join__type(graph: AUTHENTIK)

scalar _DirectiveExtensions @join__type(graph: AUTHENTIK) @join__type(graph: CHURROS)

scalar ChurrosBooleanMap @source(name: "BooleanMap", subgraph: "Churros") @join__type(graph: CHURROS)

"""Un entier positif ou 'Unlimited' pour une capacité sans limite"""
scalar ChurrosCapacity @source(name: "Capacity", subgraph: "Churros") @join__type(graph: CHURROS)

"""
Une couleur. En entrée, un code héxadécimal avec '#', ou un nom de couleur CSS. En sortie, un code héxadécimal avec '#' présent. La transparence n'est pas supportée.
"""
scalar ChurrosColor @source(name: "Color", subgraph: "Churros") @join__type(graph: CHURROS)

scalar ChurrosCounts @source(name: "Counts", subgraph: "Churros") @join__type(graph: CHURROS)

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar ChurrosDateTime @source(name: "DateTime", subgraph: "Churros") @join__type(graph: CHURROS)

"""Adresse e-mail"""
scalar ChurrosEmail @source(name: "Email", subgraph: "Churros") @join__type(graph: CHURROS)

scalar ChurrosFile @source(name: "File", subgraph: "Churros") @join__type(graph: CHURROS)

scalar ChurrosHTML @source(name: "HTML", subgraph: "Churros") @join__type(graph: CHURROS)

"""
Un identifiant, dont le préfixe (par exemple, `a:` dans `a:627dgfd87ccc`) est optionnel.
"""
scalar ChurrosLocalID @source(name: "LocalID", subgraph: "Churros") @join__type(graph: CHURROS)

"""
Une adresse internet (URL). Si le protocole n'est pas spécifié, https:// sera ajouté (par exemple, net7.dev est valide en entrée et est interprété comme https://net7.dev). Les éventuels espaces autours de l'URL sont ignorés. Les protocoles autorisés sont: http:, https:, mailto:, tel:
"""
scalar ChurrosLooseURL @source(name: "LooseURL", subgraph: "Churros") @join__type(graph: CHURROS)

"""Du texte au format Markdown. (https://commonmark.org/help/)"""
scalar ChurrosMarkdown @source(name: "Markdown", subgraph: "Churros") @join__type(graph: CHURROS)

"""
Numéro de téléphone, au format international (E.164, avec préfixes “+”), ou au format local français (10 chiffres, sans préfixe).
"""
scalar ChurrosPhoneNumber @source(name: "PhoneNumber", subgraph: "Churros") @join__type(graph: CHURROS)

"""Entier positif"""
scalar ChurrosPositiveInt @source(name: "PositiveInt", subgraph: "Churros") @join__type(graph: CHURROS)

"""Du texte de 200 caractères maximum"""
scalar ChurrosShortString @source(name: "ShortString", subgraph: "Churros") @join__type(graph: CHURROS)

"""A field whose value matches /^[\w-]{2,255}$/."""
scalar ChurrosUID @source(name: "UID", subgraph: "Churros") @join__type(graph: CHURROS)

"""
Une adresse internet (URL). Les protocoles autorisés sont: http:, https:, mailto:, tel:
"""
scalar ChurrosURL @source(name: "URL", subgraph: "Churros") @join__type(graph: CHURROS)

scalar ChurrosTransportOptions @source(name: "TransportOptions", subgraph: "Churros") @join__type(graph: CHURROS)

type Query @extraSchemaDefinitionDirective(directives: {transport: [{subgraph: "Authentik", kind: "rest", location: "https://auth.inpt.fr/api/v3/", headers: [["x-feur", "qferzjofjer"], ["Authorization", "Bearer {context.headers[\"x-token\"]}"]]}]}) @extraSchemaDefinitionDirective(directives: {transport: [{kind: "http", subgraph: "Churros", location: "https://churros.inpt.fr/graphql", headers: [["Authorization", "{context.headers.Authorization}"]], options: {}}]}) @source(name: "Query", subgraph: "Churros") @join__type(graph: AUTHENTIK) @join__type(graph: CHURROS) {
  """Read-only view list all installed apps"""
  adminAppsList: [AdminAppsListResponse] @httpOperation(subgraph: "Authentik", path: "/admin/apps/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "admin_apps_list", type: "[admin_apps_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Login Metrics per 1h"""
  adminMetricsRetrieve: AdminMetricsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/admin/metrics/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "admin_metrics_retrieve", type: "admin_metrics_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Read-only view list all installed models"""
  adminModelsList: [AdminModelsListResponse] @httpOperation(subgraph: "Authentik", path: "/admin/models/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "admin_models_list", type: "[admin_models_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Settings view"""
  adminSettingsRetrieve: AdminSettingsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/admin/settings/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "admin_settings_retrieve", type: "admin_settings_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get system information."""
  adminSystemRetrieve: AdminSystemRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/admin/system/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "admin_system_retrieve", type: "admin_system_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get running and latest version."""
  adminVersionRetrieve: AdminVersionRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/admin/version/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "admin_version_retrieve", type: "admin_version_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """VersionHistory Viewset"""
  adminVersionHistoryList(
    build: String
    """Which field to use when ordering the results."""
    ordering: String
    """A search term."""
    search: String
    version: String
  ): [AdminVersionHistoryListResponse] @httpOperation(subgraph: "Authentik", path: "/admin/version/history/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"build\":\"build\",\"ordering\":\"ordering\",\"search\":\"search\",\"version\":\"version\"}") @source(name: "admin_version_history_list", type: "[admin_version_history_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """VersionHistory Viewset"""
  adminVersionHistoryRetrieve(
    """A unique integer value identifying this Version history."""
    id: Int!
  ): AdminVersionHistoryRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/admin/version/history/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "admin_version_history_retrieve", type: "admin_version_history_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get currently connected worker count."""
  adminWorkersRetrieve: AdminWorkersRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/admin/workers/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "admin_workers_retrieve", type: "admin_workers_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get all devices for current user"""
  authenticatorsAdminAllList(user: Int): [AuthenticatorsAdminAllListResponse] @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/all/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"user\":\"user\"}") @source(name: "authenticators_admin_all_list", type: "[authenticators_admin_all_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for Duo authenticator devices (for admins)"""
  authenticatorsAdminDuoList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): AuthenticatorsAdminDuoListResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/duo/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "authenticators_admin_duo_list", type: "authenticators_admin_duo_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for Duo authenticator devices (for admins)"""
  authenticatorsAdminDuoRetrieve(
    """A unique integer value identifying this Duo Device."""
    id: Int!
  ): AuthenticatorsAdminDuoRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/duo/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "authenticators_admin_duo_retrieve", type: "authenticators_admin_duo_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for Endpoint authenticator devices (for admins)"""
  authenticatorsAdminEndpointList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): AuthenticatorsAdminEndpointListResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/endpoint/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "authenticators_admin_endpoint_list", type: "authenticators_admin_endpoint_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for Endpoint authenticator devices (for admins)"""
  authenticatorsAdminEndpointRetrieve(
    """A UUID string identifying this Endpoint Device."""
    uuid: UUID!
  ): AuthenticatorsAdminEndpointRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/endpoint/{args.uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "authenticators_admin_endpoint_retrieve", type: "authenticators_admin_endpoint_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for sms authenticator devices (for admins)"""
  authenticatorsAdminSmsList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): AuthenticatorsAdminSmsListResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/sms/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "authenticators_admin_sms_list", type: "authenticators_admin_sms_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for sms authenticator devices (for admins)"""
  authenticatorsAdminSmsRetrieve(
    """A unique integer value identifying this SMS Device."""
    id: Int!
  ): AuthenticatorsAdminSmsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/sms/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "authenticators_admin_sms_retrieve", type: "authenticators_admin_sms_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for static authenticator devices (for admins)"""
  authenticatorsAdminStaticList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): AuthenticatorsAdminStaticListResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/static/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "authenticators_admin_static_list", type: "authenticators_admin_static_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for static authenticator devices (for admins)"""
  authenticatorsAdminStaticRetrieve(
    """A unique integer value identifying this Static Device."""
    id: Int!
  ): AuthenticatorsAdminStaticRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/static/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "authenticators_admin_static_retrieve", type: "authenticators_admin_static_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for totp authenticator devices (for admins)"""
  authenticatorsAdminTotpList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): AuthenticatorsAdminTotpListResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/totp/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "authenticators_admin_totp_list", type: "authenticators_admin_totp_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for totp authenticator devices (for admins)"""
  authenticatorsAdminTotpRetrieve(
    """A unique integer value identifying this TOTP Device."""
    id: Int!
  ): AuthenticatorsAdminTotpRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/totp/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "authenticators_admin_totp_retrieve", type: "authenticators_admin_totp_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for WebAuthn authenticator devices (for admins)"""
  authenticatorsAdminWebauthnList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): AuthenticatorsAdminWebauthnListResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/webauthn/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "authenticators_admin_webauthn_list", type: "authenticators_admin_webauthn_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for WebAuthn authenticator devices (for admins)"""
  authenticatorsAdminWebauthnRetrieve(
    """A unique integer value identifying this WebAuthn Device."""
    id: Int!
  ): AuthenticatorsAdminWebauthnRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/webauthn/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "authenticators_admin_webauthn_retrieve", type: "authenticators_admin_webauthn_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get all devices for current user"""
  authenticatorsAllList: [AuthenticatorsAllListResponse] @httpOperation(subgraph: "Authentik", path: "/authenticators/all/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "authenticators_all_list", type: "[authenticators_all_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for Duo authenticator devices"""
  authenticatorsDuoList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): AuthenticatorsDuoListResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/duo/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "authenticators_duo_list", type: "authenticators_duo_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for Duo authenticator devices"""
  authenticatorsDuoRetrieve(
    """A unique integer value identifying this Duo Device."""
    id: Int!
  ): AuthenticatorsDuoRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/duo/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "authenticators_duo_retrieve", type: "authenticators_duo_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  authenticatorsDuoUsedByList(
    """A unique integer value identifying this Duo Device."""
    id: Int!
  ): [AuthenticatorsDuoUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/authenticators/duo/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "authenticators_duo_used_by_list", type: "[authenticators_duo_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for Endpoint authenticator devices"""
  authenticatorsEndpointList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): AuthenticatorsEndpointListResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/endpoint/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "authenticators_endpoint_list", type: "authenticators_endpoint_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for Endpoint authenticator devices"""
  authenticatorsEndpointRetrieve(
    """A UUID string identifying this Endpoint Device."""
    uuid: UUID!
  ): AuthenticatorsEndpointRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/endpoint/{args.uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "authenticators_endpoint_retrieve", type: "authenticators_endpoint_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  authenticatorsEndpointUsedByList(
    """A UUID string identifying this Endpoint Device."""
    uuid: UUID!
  ): [AuthenticatorsEndpointUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/authenticators/endpoint/{args.uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "authenticators_endpoint_used_by_list", type: "[authenticators_endpoint_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for sms authenticator devices"""
  authenticatorsSmsList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): AuthenticatorsSmsListResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/sms/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "authenticators_sms_list", type: "authenticators_sms_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for sms authenticator devices"""
  authenticatorsSmsRetrieve(
    """A unique integer value identifying this SMS Device."""
    id: Int!
  ): AuthenticatorsSmsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/sms/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "authenticators_sms_retrieve", type: "authenticators_sms_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  authenticatorsSmsUsedByList(
    """A unique integer value identifying this SMS Device."""
    id: Int!
  ): [AuthenticatorsSmsUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/authenticators/sms/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "authenticators_sms_used_by_list", type: "[authenticators_sms_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for static authenticator devices"""
  authenticatorsStaticList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): AuthenticatorsStaticListResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/static/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "authenticators_static_list", type: "authenticators_static_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for static authenticator devices"""
  authenticatorsStaticRetrieve(
    """A unique integer value identifying this Static Device."""
    id: Int!
  ): AuthenticatorsStaticRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/static/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "authenticators_static_retrieve", type: "authenticators_static_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  authenticatorsStaticUsedByList(
    """A unique integer value identifying this Static Device."""
    id: Int!
  ): [AuthenticatorsStaticUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/authenticators/static/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "authenticators_static_used_by_list", type: "[authenticators_static_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for totp authenticator devices"""
  authenticatorsTotpList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): AuthenticatorsTotpListResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/totp/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "authenticators_totp_list", type: "authenticators_totp_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for totp authenticator devices"""
  authenticatorsTotpRetrieve(
    """A unique integer value identifying this TOTP Device."""
    id: Int!
  ): AuthenticatorsTotpRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/totp/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "authenticators_totp_retrieve", type: "authenticators_totp_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  authenticatorsTotpUsedByList(
    """A unique integer value identifying this TOTP Device."""
    id: Int!
  ): [AuthenticatorsTotpUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/authenticators/totp/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "authenticators_totp_used_by_list", type: "[authenticators_totp_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for WebAuthn authenticator devices"""
  authenticatorsWebauthnList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): AuthenticatorsWebauthnListResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/webauthn/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "authenticators_webauthn_list", type: "authenticators_webauthn_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for WebAuthn authenticator devices"""
  authenticatorsWebauthnRetrieve(
    """A unique integer value identifying this WebAuthn Device."""
    id: Int!
  ): AuthenticatorsWebauthnRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/webauthn/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "authenticators_webauthn_retrieve", type: "authenticators_webauthn_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  authenticatorsWebauthnUsedByList(
    """A unique integer value identifying this WebAuthn Device."""
    id: Int!
  ): [AuthenticatorsWebauthnUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/authenticators/webauthn/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "authenticators_webauthn_used_by_list", type: "[authenticators_webauthn_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Custom list method that checks Policy based access instead of guardian"""
  applications(
    forUser: Int @source(name: "for_user", type: "Int", subgraph: "Authentik")
    group: String
    metaDescription: String @source(name: "meta_description", type: "String", subgraph: "Authentik")
    metaLaunchUrl: String @source(name: "meta_launch_url", type: "String", subgraph: "Authentik")
    metaPublisher: String @source(name: "meta_publisher", type: "String", subgraph: "Authentik")
    name: String
    onlyWithLaunchUrl: Boolean @source(name: "only_with_launch_url", type: "Boolean", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    slug: String
    superuserFullList: Boolean @source(name: "superuser_full_list", type: "Boolean", subgraph: "Authentik")
  ): CoreApplicationsListResponse @httpOperation(subgraph: "Authentik", path: "/core/applications/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"for_user\":\"for_user\",\"group\":\"group\",\"meta_description\":\"meta_description\",\"meta_launch_url\":\"meta_launch_url\",\"meta_publisher\":\"meta_publisher\",\"name\":\"name\",\"only_with_launch_url\":\"only_with_launch_url\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"slug\":\"slug\",\"superuser_full_list\":\"superuser_full_list\"}") @source(name: "core_applications_list", type: "core_applications_list_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Application Viewset"""
  application(
    """Internal application name, used in URLs."""
    slug: String!
  ): CoreApplicationsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/core/applications/{args.slug}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "core_applications_retrieve", type: "core_applications_retrieve_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Check access to a single application by slug"""
  coreApplicationsCheckAccessRetrieve(
    """Internal application name, used in URLs."""
    slug: String!
    forUser: Int @source(name: "for_user", type: "Int", subgraph: "Authentik")
  ): CoreApplicationsCheckAccessRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/core/applications/{args.slug}/check_access/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"for_user\":\"for_user\"}") @source(name: "core_applications_check_access_retrieve", type: "core_applications_check_access_retrieve_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Metrics for application logins"""
  applicationMetrics(
    """Internal application name, used in URLs."""
    slug: String!
  ): [CoreApplicationsMetricsListResponse] @httpOperation(subgraph: "Authentik", path: "/core/applications/{args.slug}/metrics/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "core_applications_metrics_list", type: "[core_applications_metrics_list_response]", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  coreApplicationsUsedByList(
    """Internal application name, used in URLs."""
    slug: String!
  ): [CoreApplicationsUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/core/applications/{args.slug}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "core_applications_used_by_list", type: "[core_applications_used_by_list_response]", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """AuthenticatedSession Viewset"""
  coreAuthenticatedSessionsList(
    lastIp: String @source(name: "last_ip", type: "String", subgraph: "Authentik")
    lastUserAgent: String @source(name: "last_user_agent", type: "String", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    userUsername: String @source(name: "user__username", type: "String", subgraph: "Authentik")
  ): CoreAuthenticatedSessionsListResponse @httpOperation(subgraph: "Authentik", path: "/core/authenticated_sessions/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"last_ip\":\"last_ip\",\"last_user_agent\":\"last_user_agent\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"user__username\":\"user__username\"}") @source(name: "core_authenticated_sessions_list", type: "core_authenticated_sessions_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatedSession Viewset"""
  coreAuthenticatedSessionsRetrieve(
    """A UUID string identifying this Authenticated Session."""
    uuid: UUID!
  ): CoreAuthenticatedSessionsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/core/authenticated_sessions/{args.uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "core_authenticated_sessions_retrieve", type: "core_authenticated_sessions_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  coreAuthenticatedSessionsUsedByList(
    """A UUID string identifying this Authenticated Session."""
    uuid: UUID!
  ): [CoreAuthenticatedSessionsUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/core/authenticated_sessions/{args.uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "core_authenticated_sessions_used_by_list", type: "[core_authenticated_sessions_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Brand Viewset"""
  coreBrandsList(
    brandUuid: UUID @source(name: "brand_uuid", type: "UUID", subgraph: "Authentik")
    brandingFavicon: String @source(name: "branding_favicon", type: "String", subgraph: "Authentik")
    brandingLogo: String @source(name: "branding_logo", type: "String", subgraph: "Authentik")
    brandingTitle: String @source(name: "branding_title", type: "String", subgraph: "Authentik")
    default: Boolean
    domain: String
    flowAuthentication: UUID @source(name: "flow_authentication", type: "UUID", subgraph: "Authentik")
    flowDeviceCode: UUID @source(name: "flow_device_code", type: "UUID", subgraph: "Authentik")
    flowInvalidation: UUID @source(name: "flow_invalidation", type: "UUID", subgraph: "Authentik")
    flowRecovery: UUID @source(name: "flow_recovery", type: "UUID", subgraph: "Authentik")
    flowUnenrollment: UUID @source(name: "flow_unenrollment", type: "UUID", subgraph: "Authentik")
    flowUserSettings: UUID @source(name: "flow_user_settings", type: "UUID", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    webCertificate: UUID @source(name: "web_certificate", type: "UUID", subgraph: "Authentik")
  ): CoreBrandsListResponse @httpOperation(subgraph: "Authentik", path: "/core/brands/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"brand_uuid\":\"brand_uuid\",\"branding_favicon\":\"branding_favicon\",\"branding_logo\":\"branding_logo\",\"branding_title\":\"branding_title\",\"default\":\"default\",\"domain\":\"domain\",\"flow_authentication\":\"flow_authentication\",\"flow_device_code\":\"flow_device_code\",\"flow_invalidation\":\"flow_invalidation\",\"flow_recovery\":\"flow_recovery\",\"flow_unenrollment\":\"flow_unenrollment\",\"flow_user_settings\":\"flow_user_settings\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"web_certificate\":\"web_certificate\"}") @source(name: "core_brands_list", type: "core_brands_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Brand Viewset"""
  coreBrandsRetrieve(
    """A UUID string identifying this Brand."""
    brandUuid: UUID! @source(name: "brand_uuid", type: "UUID!", subgraph: "Authentik")
  ): CoreBrandsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/core/brands/{args.brand_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "core_brands_retrieve", type: "core_brands_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  coreBrandsUsedByList(
    """A UUID string identifying this Brand."""
    brandUuid: UUID! @source(name: "brand_uuid", type: "UUID!", subgraph: "Authentik")
  ): [CoreBrandsUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/core/brands/{args.brand_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "core_brands_used_by_list", type: "[core_brands_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get current brand"""
  coreBrandsCurrentRetrieve: CoreBrandsCurrentRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/core/brands/current/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "core_brands_current_retrieve", type: "core_brands_current_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Group Viewset"""
  authentikGroups(
    """Attributes"""
    attributes: String
    includeUsers: Boolean = true @source(name: "include_users", type: "Boolean", subgraph: "Authentik")
    isSuperuser: Boolean @source(name: "is_superuser", type: "Boolean", subgraph: "Authentik")
    membersByPk: [Int] @source(name: "members_by_pk", type: "[Int]", subgraph: "Authentik")
    """Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."""
    membersByUsername: [String] @source(name: "members_by_username", type: "[String]", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): CoreGroupsListResponse @httpOperation(subgraph: "Authentik", path: "/core/groups/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"attributes\":\"attributes\",\"include_users\":\"include_users\",\"is_superuser\":\"is_superuser\",\"members_by_pk\":\"members_by_pk\",\"members_by_username\":\"members_by_username\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}", queryStringOptionsByParam: "{\"members_by_pk\":{\"arrayFormat\":\"repeat\",\"destructObject\":true},\"members_by_username\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "core_groups_list", type: "core_groups_list_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Group Viewset"""
  coreGroupsRetrieve(
    """A UUID string identifying this Group."""
    groupUuid: UUID! @source(name: "group_uuid", type: "UUID!", subgraph: "Authentik")
    includeUsers: Boolean = true @source(name: "include_users", type: "Boolean", subgraph: "Authentik")
  ): CoreGroupsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/core/groups/{args.group_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"include_users\":\"include_users\"}") @source(name: "core_groups_retrieve", type: "core_groups_retrieve_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  coreGroupsUsedByList(
    """A UUID string identifying this Group."""
    groupUuid: UUID! @source(name: "group_uuid", type: "UUID!", subgraph: "Authentik")
  ): [CoreGroupsUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/core/groups/{args.group_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "core_groups_used_by_list", type: "[core_groups_used_by_list_response]", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Token Viewset"""
  coreTokensList(
    description: String
    expires: DateTime
    expiring: Boolean
    identifier: String
    intent: QueryInputCoreTokensListIntent @source(name: "intent", type: "queryInput_core_tokens_list_intent", subgraph: "Authentik")
    managed: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    userUsername: String @source(name: "user__username", type: "String", subgraph: "Authentik")
  ): CoreTokensListResponse @httpOperation(subgraph: "Authentik", path: "/core/tokens/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"description\":\"description\",\"expires\":\"expires\",\"expiring\":\"expiring\",\"identifier\":\"identifier\",\"intent\":\"intent\",\"managed\":\"managed\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"user__username\":\"user__username\"}") @source(name: "core_tokens_list", type: "core_tokens_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Token Viewset"""
  coreTokensRetrieve(identifier: String!): CoreTokensRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/core/tokens/{args.identifier}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "core_tokens_retrieve", type: "core_tokens_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  coreTokensUsedByList(identifier: String!): [CoreTokensUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/core/tokens/{args.identifier}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "core_tokens_used_by_list", type: "[core_tokens_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Return token key and log access"""
  coreTokensViewKeyRetrieve(identifier: String!): CoreTokensViewKeyRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/core/tokens/{args.identifier}/view_key/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "core_tokens_view_key_retrieve", type: "core_tokens_view_key_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserConsent Viewset"""
  coreUserConsentList(
    application: UUID
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    user: Int
  ): CoreUserConsentListResponse @httpOperation(subgraph: "Authentik", path: "/core/user_consent/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"application\":\"application\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"user\":\"user\"}") @source(name: "core_user_consent_list", type: "core_user_consent_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserConsent Viewset"""
  coreUserConsentRetrieve(
    """A unique integer value identifying this User Consent."""
    id: Int!
  ): CoreUserConsentRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/core/user_consent/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "core_user_consent_retrieve", type: "core_user_consent_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  coreUserConsentUsedByList(
    """A unique integer value identifying this User Consent."""
    id: Int!
  ): [CoreUserConsentUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/core/user_consent/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "core_user_consent_used_by_list", type: "[core_user_consent_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """User Viewset"""
  coreUsersList(
    """Attributes"""
    attributes: String
    email: String
    groupsByName: [String] @source(name: "groups_by_name", type: "[String]", subgraph: "Authentik")
    groupsByPk: [UUID] @source(name: "groups_by_pk", type: "[UUID]", subgraph: "Authentik")
    includeGroups: Boolean = true @source(name: "include_groups", type: "Boolean", subgraph: "Authentik")
    isActive: Boolean @source(name: "is_active", type: "Boolean", subgraph: "Authentik")
    isSuperuser: Boolean @source(name: "is_superuser", type: "Boolean", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    path: String
    pathStartswith: String @source(name: "path_startswith", type: "String", subgraph: "Authentik")
    """A search term."""
    search: String
    type: [QueryInputCoreUsersListTypeItems] @source(name: "type", type: "[queryInput_core_users_list_type_items]", subgraph: "Authentik")
    username: String
    uuid: UUID
  ): CoreUsersListResponse @httpOperation(subgraph: "Authentik", path: "/core/users/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"attributes\":\"attributes\",\"email\":\"email\",\"groups_by_name\":\"groups_by_name\",\"groups_by_pk\":\"groups_by_pk\",\"include_groups\":\"include_groups\",\"is_active\":\"is_active\",\"is_superuser\":\"is_superuser\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"path\":\"path\",\"path_startswith\":\"path_startswith\",\"search\":\"search\",\"type\":\"type\",\"username\":\"username\",\"uuid\":\"uuid\"}", queryStringOptionsByParam: "{\"groups_by_name\":{\"arrayFormat\":\"repeat\",\"destructObject\":true},\"groups_by_pk\":{\"arrayFormat\":\"repeat\",\"destructObject\":true},\"type\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "core_users_list", type: "core_users_list_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """User Viewset"""
  coreUsersRetrieve(
    """A unique integer value identifying this User."""
    id: Int!
  ): CoreUsersRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/core/users/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "core_users_retrieve", type: "core_users_retrieve_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """User metrics per 1h"""
  coreUsersMetricsRetrieve(
    """A unique integer value identifying this User."""
    id: Int!
  ): CoreUsersMetricsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/core/users/{args.id}/metrics/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "core_users_metrics_retrieve", type: "core_users_metrics_retrieve_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  coreUsersUsedByList(
    """A unique integer value identifying this User."""
    id: Int!
  ): [CoreUsersUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/core/users/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "core_users_used_by_list", type: "[core_users_used_by_list_response]", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """End Impersonation a user"""
  coreUsersImpersonateEndRetrieve: CoreUsersImpersonateEndRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/core/users/impersonate_end/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "core_users_impersonate_end_retrieve", type: "core_users_impersonate_end_retrieve_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get information about current user"""
  coreUsersMeRetrieve: CoreUsersMeRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/core/users/me/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "core_users_me_retrieve", type: "core_users_me_retrieve_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get all user paths"""
  coreUsersPathsRetrieve(search: String): CoreUsersPathsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/core/users/paths/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"search\":\"search\"}") @source(name: "core_users_paths_retrieve", type: "core_users_paths_retrieve_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """CertificateKeyPair Viewset"""
  cryptoCertificatekeypairsList(
    """Only return certificate-key pairs with keys"""
    hasKey: Boolean @source(name: "has_key", type: "Boolean", subgraph: "Authentik")
    includeDetails: Boolean = true @source(name: "include_details", type: "Boolean", subgraph: "Authentik")
    managed: String
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): CryptoCertificatekeypairsListResponse @httpOperation(subgraph: "Authentik", path: "/crypto/certificatekeypairs/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"has_key\":\"has_key\",\"include_details\":\"include_details\",\"managed\":\"managed\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "crypto_certificatekeypairs_list", type: "crypto_certificatekeypairs_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """CertificateKeyPair Viewset"""
  cryptoCertificatekeypairsRetrieve(
    """A UUID string identifying this Certificate-Key Pair."""
    kpUuid: UUID! @source(name: "kp_uuid", type: "UUID!", subgraph: "Authentik")
  ): CryptoCertificatekeypairsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/crypto/certificatekeypairs/{args.kp_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "crypto_certificatekeypairs_retrieve", type: "crypto_certificatekeypairs_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  cryptoCertificatekeypairsUsedByList(
    """A UUID string identifying this Certificate-Key Pair."""
    kpUuid: UUID! @source(name: "kp_uuid", type: "UUID!", subgraph: "Authentik")
  ): [CryptoCertificatekeypairsUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/crypto/certificatekeypairs/{args.kp_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "crypto_certificatekeypairs_used_by_list", type: "[crypto_certificatekeypairs_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Return certificate-key pairs certificate and log access"""
  cryptoCertificatekeypairsViewCertificateRetrieve(
    """A UUID string identifying this Certificate-Key Pair."""
    kpUuid: UUID! @source(name: "kp_uuid", type: "UUID!", subgraph: "Authentik")
    download: Boolean
  ): CryptoCertificatekeypairsViewCertificateRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/crypto/certificatekeypairs/{args.kp_uuid}/view_certificate/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"download\":\"download\"}") @source(name: "crypto_certificatekeypairs_view_certificate_retrieve", type: "crypto_certificatekeypairs_view_certificate_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Return certificate-key pairs private key and log access"""
  cryptoCertificatekeypairsViewPrivateKeyRetrieve(
    """A UUID string identifying this Certificate-Key Pair."""
    kpUuid: UUID! @source(name: "kp_uuid", type: "UUID!", subgraph: "Authentik")
    download: Boolean
  ): CryptoCertificatekeypairsViewPrivateKeyRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/crypto/certificatekeypairs/{args.kp_uuid}/view_private_key/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"download\":\"download\"}") @source(name: "crypto_certificatekeypairs_view_private_key_retrieve", type: "crypto_certificatekeypairs_view_private_key_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """License Viewset"""
  enterpriseLicenseList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): EnterpriseLicenseListResponse @httpOperation(subgraph: "Authentik", path: "/enterprise/license/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "enterprise_license_list", type: "enterprise_license_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """License Viewset"""
  enterpriseLicenseRetrieve(
    """A UUID string identifying this License."""
    licenseUuid: UUID! @source(name: "license_uuid", type: "UUID!", subgraph: "Authentik")
  ): EnterpriseLicenseRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/enterprise/license/{args.license_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "enterprise_license_retrieve", type: "enterprise_license_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  enterpriseLicenseUsedByList(
    """A UUID string identifying this License."""
    licenseUuid: UUID! @source(name: "license_uuid", type: "UUID!", subgraph: "Authentik")
  ): [EnterpriseLicenseUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/enterprise/license/{args.license_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "enterprise_license_used_by_list", type: "[enterprise_license_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Forecast how many users will be required in a year"""
  enterpriseLicenseForecastRetrieve: EnterpriseLicenseForecastRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/enterprise/license/forecast/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "enterprise_license_forecast_retrieve", type: "enterprise_license_forecast_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get install_id"""
  enterpriseLicenseInstallIdRetrieve: EnterpriseLicenseInstallIdRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/enterprise/license/install_id/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "enterprise_license_install_id_retrieve", type: "enterprise_license_install_id_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get the total license status"""
  enterpriseLicenseSummaryRetrieve(cached: Boolean = true): EnterpriseLicenseSummaryRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/enterprise/license/summary/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"cached\":\"cached\"}") @source(name: "enterprise_license_summary_retrieve", type: "enterprise_license_summary_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Event Read-Only Viewset"""
  eventsEventsList(
    action: String
    """Brand name"""
    brandName: String @source(name: "brand_name", type: "String", subgraph: "Authentik")
    clientIp: String @source(name: "client_ip", type: "String", subgraph: "Authentik")
    """Context Authorized application"""
    contextAuthorizedApp: String @source(name: "context_authorized_app", type: "String", subgraph: "Authentik")
    """Context Model App"""
    contextModelApp: String @source(name: "context_model_app", type: "String", subgraph: "Authentik")
    """Context Model Name"""
    contextModelName: String @source(name: "context_model_name", type: "String", subgraph: "Authentik")
    """Context Model Primary Key"""
    contextModelPk: String @source(name: "context_model_pk", type: "String", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    """Username"""
    username: String
  ): EventsEventsListResponse @httpOperation(subgraph: "Authentik", path: "/events/events/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"action\":\"action\",\"brand_name\":\"brand_name\",\"client_ip\":\"client_ip\",\"context_authorized_app\":\"context_authorized_app\",\"context_model_app\":\"context_model_app\",\"context_model_name\":\"context_model_name\",\"context_model_pk\":\"context_model_pk\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"username\":\"username\"}") @source(name: "events_events_list", type: "events_events_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Event Read-Only Viewset"""
  eventsEventsRetrieve(
    """A UUID string identifying this Event."""
    eventUuid: UUID! @source(name: "event_uuid", type: "UUID!", subgraph: "Authentik")
  ): EventsEventsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/events/events/{args.event_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "events_events_retrieve", type: "events_events_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get all actions"""
  eventsEventsActionsList: [EventsEventsActionsListResponse] @httpOperation(subgraph: "Authentik", path: "/events/events/actions/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "events_events_actions_list", type: "[events_events_actions_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get the count of events per month"""
  eventsEventsPerMonthList(action: String, query: String): [EventsEventsPerMonthListResponse] @httpOperation(subgraph: "Authentik", path: "/events/events/per_month/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"action\":\"action\",\"query\":\"query\"}") @source(name: "events_events_per_month_list", type: "[events_events_per_month_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get the top_n events grouped by user count"""
  eventsEventsTopPerUserList(action: String, topN: Int @source(name: "top_n", type: "Int", subgraph: "Authentik")): [EventsEventsTopPerUserListResponse] @httpOperation(subgraph: "Authentik", path: "/events/events/top_per_user/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"action\":\"action\",\"top_n\":\"top_n\"}") @source(name: "events_events_top_per_user_list", type: "[events_events_top_per_user_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get event volume for specified filters and timeframe"""
  eventsEventsVolumeList(
    action: String
    """Brand name"""
    brandName: String @source(name: "brand_name", type: "String", subgraph: "Authentik")
    clientIp: String @source(name: "client_ip", type: "String", subgraph: "Authentik")
    """Context Authorized application"""
    contextAuthorizedApp: String @source(name: "context_authorized_app", type: "String", subgraph: "Authentik")
    """Context Model App"""
    contextModelApp: String @source(name: "context_model_app", type: "String", subgraph: "Authentik")
    """Context Model Name"""
    contextModelName: String @source(name: "context_model_name", type: "String", subgraph: "Authentik")
    """Context Model Primary Key"""
    contextModelPk: String @source(name: "context_model_pk", type: "String", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    """A search term."""
    search: String
    """Username"""
    username: String
  ): [EventsEventsVolumeListResponse] @httpOperation(subgraph: "Authentik", path: "/events/events/volume/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"action\":\"action\",\"brand_name\":\"brand_name\",\"client_ip\":\"client_ip\",\"context_authorized_app\":\"context_authorized_app\",\"context_model_app\":\"context_model_app\",\"context_model_name\":\"context_model_name\",\"context_model_pk\":\"context_model_pk\",\"ordering\":\"ordering\",\"search\":\"search\",\"username\":\"username\"}") @source(name: "events_events_volume_list", type: "[events_events_volume_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Notification Viewset"""
  eventsNotificationsList(
    body: String
    created: DateTime
    event: UUID
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    seen: Boolean
    severity: QueryInputEventsNotificationsListSeverity @source(name: "severity", type: "queryInput_events_notifications_list_severity", subgraph: "Authentik")
    user: Int
  ): EventsNotificationsListResponse @httpOperation(subgraph: "Authentik", path: "/events/notifications/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"body\":\"body\",\"created\":\"created\",\"event\":\"event\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"seen\":\"seen\",\"severity\":\"severity\",\"user\":\"user\"}") @source(name: "events_notifications_list", type: "events_notifications_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Notification Viewset"""
  eventsNotificationsRetrieve(
    """A UUID string identifying this Notification."""
    uuid: UUID!
  ): EventsNotificationsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/events/notifications/{args.uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "events_notifications_retrieve", type: "events_notifications_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  eventsNotificationsUsedByList(
    """A UUID string identifying this Notification."""
    uuid: UUID!
  ): [EventsNotificationsUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/events/notifications/{args.uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "events_notifications_used_by_list", type: "[events_notifications_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """NotificationRule Viewset"""
  eventsRulesList(
    groupName: String @source(name: "group__name", type: "String", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    severity: QueryInputEventsRulesListSeverity @source(name: "severity", type: "queryInput_events_rules_list_severity", subgraph: "Authentik")
  ): EventsRulesListResponse @httpOperation(subgraph: "Authentik", path: "/events/rules/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"group__name\":\"group__name\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"severity\":\"severity\"}") @source(name: "events_rules_list", type: "events_rules_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """NotificationRule Viewset"""
  eventsRulesRetrieve(
    """A UUID string identifying this Notification Rule."""
    pbmUuid: UUID! @source(name: "pbm_uuid", type: "UUID!", subgraph: "Authentik")
  ): EventsRulesRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/events/rules/{args.pbm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "events_rules_retrieve", type: "events_rules_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  eventsRulesUsedByList(
    """A UUID string identifying this Notification Rule."""
    pbmUuid: UUID! @source(name: "pbm_uuid", type: "UUID!", subgraph: "Authentik")
  ): [EventsRulesUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/events/rules/{args.pbm_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "events_rules_used_by_list", type: "[events_rules_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Read-only view set that returns all background tasks"""
  eventsSystemTasksList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    status: QueryInputEventsSystemTasksListStatus @source(name: "status", type: "queryInput_events_system_tasks_list_status", subgraph: "Authentik")
    uid: String
  ): EventsSystemTasksListResponse @httpOperation(subgraph: "Authentik", path: "/events/system_tasks/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"status\":\"status\",\"uid\":\"uid\"}") @source(name: "events_system_tasks_list", type: "events_system_tasks_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Read-only view set that returns all background tasks"""
  eventsSystemTasksRetrieve(
    """A UUID string identifying this System Task."""
    uuid: UUID!
  ): EventsSystemTasksRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/events/system_tasks/{args.uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "events_system_tasks_retrieve", type: "events_system_tasks_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """NotificationTransport Viewset"""
  eventsTransportsList(
    mode: QueryInputEventsTransportsListMode @source(name: "mode", type: "queryInput_events_transports_list_mode", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    sendOnce: Boolean @source(name: "send_once", type: "Boolean", subgraph: "Authentik")
    webhookUrl: String @source(name: "webhook_url", type: "String", subgraph: "Authentik")
  ): EventsTransportsListResponse @httpOperation(subgraph: "Authentik", path: "/events/transports/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"mode\":\"mode\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"send_once\":\"send_once\",\"webhook_url\":\"webhook_url\"}") @source(name: "events_transports_list", type: "events_transports_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """NotificationTransport Viewset"""
  eventsTransportsRetrieve(
    """A UUID string identifying this Notification Transport."""
    uuid: UUID!
  ): EventsTransportsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/events/transports/{args.uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "events_transports_retrieve", type: "events_transports_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  eventsTransportsUsedByList(
    """A UUID string identifying this Notification Transport."""
    uuid: UUID!
  ): [EventsTransportsUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/events/transports/{args.uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "events_transports_used_by_list", type: "[events_transports_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """FlowStageBinding Viewset"""
  flowsBindingsList(
    evaluateOnPlan: Boolean @source(name: "evaluate_on_plan", type: "Boolean", subgraph: "Authentik")
    fsbUuid: UUID @source(name: "fsb_uuid", type: "UUID", subgraph: "Authentik")
    invalidResponseAction: QueryInputFlowsBindingsListInvalidResponseAction @source(name: "invalid_response_action", type: "queryInput_flows_bindings_list_invalid_response_action", subgraph: "Authentik")
    order: Int
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    pbmUuid: UUID @source(name: "pbm_uuid", type: "UUID", subgraph: "Authentik")
    policies: [UUID]
    policyEngineMode: QueryInputFlowsBindingsListPolicyEngineMode @source(name: "policy_engine_mode", type: "queryInput_flows_bindings_list_policy_engine_mode", subgraph: "Authentik")
    reEvaluatePolicies: Boolean @source(name: "re_evaluate_policies", type: "Boolean", subgraph: "Authentik")
    """A search term."""
    search: String
    stage: UUID
    target: UUID
  ): FlowsBindingsListResponse @httpOperation(subgraph: "Authentik", path: "/flows/bindings/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"evaluate_on_plan\":\"evaluate_on_plan\",\"fsb_uuid\":\"fsb_uuid\",\"invalid_response_action\":\"invalid_response_action\",\"order\":\"order\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"pbm_uuid\":\"pbm_uuid\",\"policies\":\"policies\",\"policy_engine_mode\":\"policy_engine_mode\",\"re_evaluate_policies\":\"re_evaluate_policies\",\"search\":\"search\",\"stage\":\"stage\",\"target\":\"target\"}", queryStringOptionsByParam: "{\"policies\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "flows_bindings_list", type: "flows_bindings_list_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """FlowStageBinding Viewset"""
  flowsBindingsRetrieve(
    """A UUID string identifying this Flow Stage Binding."""
    fsbUuid: UUID! @source(name: "fsb_uuid", type: "UUID!", subgraph: "Authentik")
  ): FlowsBindingsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/flows/bindings/{args.fsb_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "flows_bindings_retrieve", type: "flows_bindings_retrieve_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  flowsBindingsUsedByList(
    """A UUID string identifying this Flow Stage Binding."""
    fsbUuid: UUID! @source(name: "fsb_uuid", type: "UUID!", subgraph: "Authentik")
  ): [FlowsBindingsUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/flows/bindings/{args.fsb_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "flows_bindings_used_by_list", type: "[flows_bindings_used_by_list_response]", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get the next pending challenge from the currently active flow."""
  flowsExecutorGet(
    flowSlug: String! @source(name: "flow_slug", type: "String!", subgraph: "Authentik")
    """Querystring as received"""
    query: String!
  ): FlowsExecutorGetResponse @httpOperation(subgraph: "Authentik", path: "/flows/executor/{args.flow_slug}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"query\":\"query\"}") @source(name: "flows_executor_get", type: "flows_executor_get_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get current flow state and record it"""
  flowsInspectorGet(flowSlug: String! @source(name: "flow_slug", type: "String!", subgraph: "Authentik")): FlowsInspectorGetResponse @httpOperation(subgraph: "Authentik", path: "/flows/inspector/{args.flow_slug}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "flows_inspector_get", type: "flows_inspector_get_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Flow Viewset"""
  flowsInstancesList(
    deniedAction: QueryInputFlowsInstancesListDeniedAction @source(name: "denied_action", type: "queryInput_flows_instances_list_denied_action", subgraph: "Authentik")
    designation: QueryInputFlowsInstancesListDesignation @source(name: "designation", type: "queryInput_flows_instances_list_designation", subgraph: "Authentik")
    flowUuid: UUID @source(name: "flow_uuid", type: "UUID", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    slug: String
  ): FlowsInstancesListResponse @httpOperation(subgraph: "Authentik", path: "/flows/instances/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"denied_action\":\"denied_action\",\"designation\":\"designation\",\"flow_uuid\":\"flow_uuid\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"slug\":\"slug\"}") @source(name: "flows_instances_list", type: "flows_instances_list_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Flow Viewset"""
  flowsInstancesRetrieve(
    """Visible in the URL."""
    slug: String!
  ): FlowsInstancesRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/flows/instances/{args.slug}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "flows_instances_retrieve", type: "flows_instances_retrieve_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """
  Return diagram for flow with slug `slug`, in the format used by flowchart.js
  """
  flowsInstancesDiagramRetrieve(
    """Visible in the URL."""
    slug: String!
  ): FlowsInstancesDiagramRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/flows/instances/{args.slug}/diagram/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "flows_instances_diagram_retrieve", type: "flows_instances_diagram_retrieve_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Execute flow for current user"""
  flowsInstancesExecuteRetrieve(
    """Visible in the URL."""
    slug: String!
  ): FlowsInstancesExecuteRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/flows/instances/{args.slug}/execute/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "flows_instances_execute_retrieve", type: "flows_instances_execute_retrieve_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Export flow to .yaml file"""
  flowsInstancesExportRetrieve(
    """Visible in the URL."""
    slug: String!
  ): FlowsInstancesExportRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/flows/instances/{args.slug}/export/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "flows_instances_export_retrieve", type: "flows_instances_export_retrieve_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  flowsInstancesUsedByList(
    """Visible in the URL."""
    slug: String!
  ): [FlowsInstancesUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/flows/instances/{args.slug}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "flows_instances_used_by_list", type: "[flows_instances_used_by_list_response]", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Info about cached flows"""
  flowsInstancesCacheInfoRetrieve: FlowsInstancesCacheInfoRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/flows/instances/cache_info/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "flows_instances_cache_info_retrieve", type: "flows_instances_cache_info_retrieve_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Blueprint instances"""
  managedBlueprintsList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    path: String
    """A search term."""
    search: String
  ): ManagedBlueprintsListResponse @httpOperation(subgraph: "Authentik", path: "/managed/blueprints/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"path\":\"path\",\"search\":\"search\"}") @source(name: "managed_blueprints_list", type: "managed_blueprints_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Blueprint instances"""
  managedBlueprintsRetrieve(
    """A UUID string identifying this Blueprint Instance."""
    instanceUuid: UUID! @source(name: "instance_uuid", type: "UUID!", subgraph: "Authentik")
  ): ManagedBlueprintsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/managed/blueprints/{args.instance_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "managed_blueprints_retrieve", type: "managed_blueprints_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  managedBlueprintsUsedByList(
    """A UUID string identifying this Blueprint Instance."""
    instanceUuid: UUID! @source(name: "instance_uuid", type: "UUID!", subgraph: "Authentik")
  ): [ManagedBlueprintsUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/managed/blueprints/{args.instance_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "managed_blueprints_used_by_list", type: "[managed_blueprints_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get blueprints"""
  managedBlueprintsAvailableList: [ManagedBlueprintsAvailableListResponse] @httpOperation(subgraph: "Authentik", path: "/managed/blueprints/available/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "managed_blueprints_available_list", type: "[managed_blueprints_available_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AccessToken Viewset"""
  oauth2AccessTokensList(
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    provider: Int
    """A search term."""
    search: String
    user: Int
  ): Oauth2AccessTokensListResponse @httpOperation(subgraph: "Authentik", path: "/oauth2/access_tokens/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"provider\":\"provider\",\"search\":\"search\",\"user\":\"user\"}") @source(name: "oauth2_access_tokens_list", type: "oauth2_access_tokens_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AccessToken Viewset"""
  oauth2AccessTokensRetrieve(
    """A unique integer value identifying this OAuth2 Access Token."""
    id: Int!
  ): Oauth2AccessTokensRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/oauth2/access_tokens/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "oauth2_access_tokens_retrieve", type: "oauth2_access_tokens_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  oauth2AccessTokensUsedByList(
    """A unique integer value identifying this OAuth2 Access Token."""
    id: Int!
  ): [Oauth2AccessTokensUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/oauth2/access_tokens/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "oauth2_access_tokens_used_by_list", type: "[oauth2_access_tokens_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthorizationCode Viewset"""
  oauth2AuthorizationCodesList(
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    provider: Int
    """A search term."""
    search: String
    user: Int
  ): Oauth2AuthorizationCodesListResponse @httpOperation(subgraph: "Authentik", path: "/oauth2/authorization_codes/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"provider\":\"provider\",\"search\":\"search\",\"user\":\"user\"}") @source(name: "oauth2_authorization_codes_list", type: "oauth2_authorization_codes_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthorizationCode Viewset"""
  oauth2AuthorizationCodesRetrieve(
    """A unique integer value identifying this Authorization Code."""
    id: Int!
  ): Oauth2AuthorizationCodesRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/oauth2/authorization_codes/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "oauth2_authorization_codes_retrieve", type: "oauth2_authorization_codes_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  oauth2AuthorizationCodesUsedByList(
    """A unique integer value identifying this Authorization Code."""
    id: Int!
  ): [Oauth2AuthorizationCodesUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/oauth2/authorization_codes/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "oauth2_authorization_codes_used_by_list", type: "[oauth2_authorization_codes_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RefreshToken Viewset"""
  oauth2RefreshTokensList(
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    provider: Int
    """A search term."""
    search: String
    user: Int
  ): Oauth2RefreshTokensListResponse @httpOperation(subgraph: "Authentik", path: "/oauth2/refresh_tokens/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"provider\":\"provider\",\"search\":\"search\",\"user\":\"user\"}") @source(name: "oauth2_refresh_tokens_list", type: "oauth2_refresh_tokens_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RefreshToken Viewset"""
  oauth2RefreshTokensRetrieve(
    """A unique integer value identifying this OAuth2 Refresh Token."""
    id: Int!
  ): Oauth2RefreshTokensRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/oauth2/refresh_tokens/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "oauth2_refresh_tokens_retrieve", type: "oauth2_refresh_tokens_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  oauth2RefreshTokensUsedByList(
    """A unique integer value identifying this OAuth2 Refresh Token."""
    id: Int!
  ): [Oauth2RefreshTokensUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/oauth2/refresh_tokens/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "oauth2_refresh_tokens_used_by_list", type: "[oauth2_refresh_tokens_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Outpost Viewset"""
  outpostsInstancesList(
    managedIcontains: String @source(name: "managed__icontains", type: "String", subgraph: "Authentik")
    managedIexact: String @source(name: "managed__iexact", type: "String", subgraph: "Authentik")
    nameIcontains: String @source(name: "name__icontains", type: "String", subgraph: "Authentik")
    nameIexact: String @source(name: "name__iexact", type: "String", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    providersIsnull: Boolean @source(name: "providers__isnull", type: "Boolean", subgraph: "Authentik")
    providersByPk: [Int] @source(name: "providers_by_pk", type: "[Int]", subgraph: "Authentik")
    """A search term."""
    search: String
    serviceConnectionNameIcontains: String @source(name: "service_connection__name__icontains", type: "String", subgraph: "Authentik")
    serviceConnectionNameIexact: String @source(name: "service_connection__name__iexact", type: "String", subgraph: "Authentik")
  ): OutpostsInstancesListResponse @httpOperation(subgraph: "Authentik", path: "/outposts/instances/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"managed__icontains\":\"managed__icontains\",\"managed__iexact\":\"managed__iexact\",\"name__icontains\":\"name__icontains\",\"name__iexact\":\"name__iexact\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"providers__isnull\":\"providers__isnull\",\"providers_by_pk\":\"providers_by_pk\",\"search\":\"search\",\"service_connection__name__icontains\":\"service_connection__name__icontains\",\"service_connection__name__iexact\":\"service_connection__name__iexact\"}", queryStringOptionsByParam: "{\"providers_by_pk\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "outposts_instances_list", type: "outposts_instances_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Outpost Viewset"""
  outpostsInstancesRetrieve(
    """A UUID string identifying this Outpost."""
    uuid: UUID!
  ): OutpostsInstancesRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/outposts/instances/{args.uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "outposts_instances_retrieve", type: "outposts_instances_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get outposts current health"""
  outpostsInstancesHealthList(
    """A UUID string identifying this Outpost."""
    uuid: UUID!
    managedIcontains: String @source(name: "managed__icontains", type: "String", subgraph: "Authentik")
    managedIexact: String @source(name: "managed__iexact", type: "String", subgraph: "Authentik")
    nameIcontains: String @source(name: "name__icontains", type: "String", subgraph: "Authentik")
    nameIexact: String @source(name: "name__iexact", type: "String", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    providersIsnull: Boolean @source(name: "providers__isnull", type: "Boolean", subgraph: "Authentik")
    providersByPk: [Int] @source(name: "providers_by_pk", type: "[Int]", subgraph: "Authentik")
    """A search term."""
    search: String
    serviceConnectionNameIcontains: String @source(name: "service_connection__name__icontains", type: "String", subgraph: "Authentik")
    serviceConnectionNameIexact: String @source(name: "service_connection__name__iexact", type: "String", subgraph: "Authentik")
  ): [OutpostsInstancesHealthListResponse] @httpOperation(subgraph: "Authentik", path: "/outposts/instances/{args.uuid}/health/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"managed__icontains\":\"managed__icontains\",\"managed__iexact\":\"managed__iexact\",\"name__icontains\":\"name__icontains\",\"name__iexact\":\"name__iexact\",\"ordering\":\"ordering\",\"providers__isnull\":\"providers__isnull\",\"providers_by_pk\":\"providers_by_pk\",\"search\":\"search\",\"service_connection__name__icontains\":\"service_connection__name__icontains\",\"service_connection__name__iexact\":\"service_connection__name__iexact\"}", queryStringOptionsByParam: "{\"providers_by_pk\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "outposts_instances_health_list", type: "[outposts_instances_health_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  outpostsInstancesUsedByList(
    """A UUID string identifying this Outpost."""
    uuid: UUID!
  ): [OutpostsInstancesUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/outposts/instances/{args.uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "outposts_instances_used_by_list", type: "[outposts_instances_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Global default outpost config"""
  outpostsInstancesDefaultSettingsRetrieve: OutpostsInstancesDefaultSettingsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/outposts/instances/default_settings/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "outposts_instances_default_settings_retrieve", type: "outposts_instances_default_settings_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """LDAPProvider Viewset"""
  outpostsLdapList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): OutpostsLdapListResponse @httpOperation(subgraph: "Authentik", path: "/outposts/ldap/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "outposts_ldap_list", type: "outposts_ldap_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Check access to a single application by slug"""
  outpostsLdapAccessCheck(
    """A unique integer value identifying this LDAP Provider."""
    id: Int!
    appSlug: String @source(name: "app_slug", type: "String", subgraph: "Authentik")
  ): OutpostsLdapAccessCheckResponse @httpOperation(subgraph: "Authentik", path: "/outposts/ldap/{args.id}/check_access/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"app_slug\":\"app_slug\"}") @source(name: "outposts_ldap_access_check", type: "outposts_ldap_access_check_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """ProxyProvider Viewset"""
  outpostsProxyList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): OutpostsProxyListResponse @httpOperation(subgraph: "Authentik", path: "/outposts/proxy/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "outposts_proxy_list", type: "outposts_proxy_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RadiusProvider Viewset"""
  outpostsRadiusList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): OutpostsRadiusListResponse @httpOperation(subgraph: "Authentik", path: "/outposts/radius/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "outposts_radius_list", type: "outposts_radius_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Check access to a single application by slug"""
  outpostsRadiusAccessCheck(
    """A unique integer value identifying this Radius Provider."""
    id: Int!
    appSlug: String @source(name: "app_slug", type: "String", subgraph: "Authentik")
  ): OutpostsRadiusAccessCheckResponse @httpOperation(subgraph: "Authentik", path: "/outposts/radius/{args.id}/check_access/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"app_slug\":\"app_slug\"}") @source(name: "outposts_radius_access_check", type: "outposts_radius_access_check_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """ServiceConnection Viewset"""
  outpostsServiceConnectionsAllList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): OutpostsServiceConnectionsAllListResponse @httpOperation(subgraph: "Authentik", path: "/outposts/service_connections/all/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "outposts_service_connections_all_list", type: "outposts_service_connections_all_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """ServiceConnection Viewset"""
  outpostsServiceConnectionsAllRetrieve(
    """A UUID string identifying this Outpost Service-Connection."""
    uuid: UUID!
  ): OutpostsServiceConnectionsAllRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/outposts/service_connections/all/{args.uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "outposts_service_connections_all_retrieve", type: "outposts_service_connections_all_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get the service connection's state"""
  outpostsServiceConnectionsAllStateRetrieve(
    """A UUID string identifying this Outpost Service-Connection."""
    uuid: UUID!
  ): OutpostsServiceConnectionsAllStateRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/outposts/service_connections/all/{args.uuid}/state/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "outposts_service_connections_all_state_retrieve", type: "outposts_service_connections_all_state_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  outpostsServiceConnectionsAllUsedByList(
    """A UUID string identifying this Outpost Service-Connection."""
    uuid: UUID!
  ): [OutpostsServiceConnectionsAllUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/outposts/service_connections/all/{args.uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "outposts_service_connections_all_used_by_list", type: "[outposts_service_connections_all_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get all creatable types"""
  outpostsServiceConnectionsAllTypesList: [OutpostsServiceConnectionsAllTypesListResponse] @httpOperation(subgraph: "Authentik", path: "/outposts/service_connections/all/types/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "outposts_service_connections_all_types_list", type: "[outposts_service_connections_all_types_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """DockerServiceConnection Viewset"""
  outpostsServiceConnectionsDockerList(
    local: Boolean
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    tlsAuthentication: UUID @source(name: "tls_authentication", type: "UUID", subgraph: "Authentik")
    tlsVerification: UUID @source(name: "tls_verification", type: "UUID", subgraph: "Authentik")
    url: String
  ): OutpostsServiceConnectionsDockerListResponse @httpOperation(subgraph: "Authentik", path: "/outposts/service_connections/docker/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"local\":\"local\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"tls_authentication\":\"tls_authentication\",\"tls_verification\":\"tls_verification\",\"url\":\"url\"}") @source(name: "outposts_service_connections_docker_list", type: "outposts_service_connections_docker_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """DockerServiceConnection Viewset"""
  outpostsServiceConnectionsDockerRetrieve(
    """A UUID string identifying this Docker Service-Connection."""
    uuid: UUID!
  ): OutpostsServiceConnectionsDockerRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/outposts/service_connections/docker/{args.uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "outposts_service_connections_docker_retrieve", type: "outposts_service_connections_docker_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  outpostsServiceConnectionsDockerUsedByList(
    """A UUID string identifying this Docker Service-Connection."""
    uuid: UUID!
  ): [OutpostsServiceConnectionsDockerUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/outposts/service_connections/docker/{args.uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "outposts_service_connections_docker_used_by_list", type: "[outposts_service_connections_docker_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """KubernetesServiceConnection Viewset"""
  outpostsServiceConnectionsKubernetesList(
    local: Boolean
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): OutpostsServiceConnectionsKubernetesListResponse @httpOperation(subgraph: "Authentik", path: "/outposts/service_connections/kubernetes/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"local\":\"local\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "outposts_service_connections_kubernetes_list", type: "outposts_service_connections_kubernetes_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """KubernetesServiceConnection Viewset"""
  outpostsServiceConnectionsKubernetesRetrieve(
    """A UUID string identifying this Kubernetes Service-Connection."""
    uuid: UUID!
  ): OutpostsServiceConnectionsKubernetesRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/outposts/service_connections/kubernetes/{args.uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "outposts_service_connections_kubernetes_retrieve", type: "outposts_service_connections_kubernetes_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  outpostsServiceConnectionsKubernetesUsedByList(
    """A UUID string identifying this Kubernetes Service-Connection."""
    uuid: UUID!
  ): [OutpostsServiceConnectionsKubernetesUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/outposts/service_connections/kubernetes/{args.uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "outposts_service_connections_kubernetes_used_by_list", type: "[outposts_service_connections_kubernetes_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Policy Viewset"""
  policiesAllList(
    bindingsIsnull: Boolean @source(name: "bindings__isnull", type: "Boolean", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    promptstageIsnull: Boolean @source(name: "promptstage__isnull", type: "Boolean", subgraph: "Authentik")
    """A search term."""
    search: String
  ): PoliciesAllListResponse @httpOperation(subgraph: "Authentik", path: "/policies/all/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"bindings__isnull\":\"bindings__isnull\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"promptstage__isnull\":\"promptstage__isnull\",\"search\":\"search\"}") @source(name: "policies_all_list", type: "policies_all_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Policy Viewset"""
  policiesAllRetrieve(
    """A UUID string identifying this Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
  ): PoliciesAllRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/policies/all/{args.policy_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "policies_all_retrieve", type: "policies_all_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  policiesAllUsedByList(
    """A UUID string identifying this Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
  ): [PoliciesAllUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/policies/all/{args.policy_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "policies_all_used_by_list", type: "[policies_all_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Info about cached policies"""
  policiesAllCacheInfoRetrieve: PoliciesAllCacheInfoRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/policies/all/cache_info/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "policies_all_cache_info_retrieve", type: "policies_all_cache_info_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get all creatable types"""
  policiesAllTypesList: [PoliciesAllTypesListResponse] @httpOperation(subgraph: "Authentik", path: "/policies/all/types/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "policies_all_types_list", type: "[policies_all_types_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PolicyBinding Viewset"""
  policiesBindingsList(
    enabled: Boolean
    order: Int
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    policy: UUID
    policyIsnull: Boolean @source(name: "policy__isnull", type: "Boolean", subgraph: "Authentik")
    """A search term."""
    search: String
    target: UUID
    targetIn: [UUID] @source(name: "target_in", type: "[UUID]", subgraph: "Authentik")
    timeout: Int
  ): PoliciesBindingsListResponse @httpOperation(subgraph: "Authentik", path: "/policies/bindings/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"enabled\":\"enabled\",\"order\":\"order\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"policy\":\"policy\",\"policy__isnull\":\"policy__isnull\",\"search\":\"search\",\"target\":\"target\",\"target_in\":\"target_in\",\"timeout\":\"timeout\"}", queryStringOptionsByParam: "{\"target_in\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "policies_bindings_list", type: "policies_bindings_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PolicyBinding Viewset"""
  policiesBindingsRetrieve(
    """A UUID string identifying this Policy Binding."""
    policyBindingUuid: UUID! @source(name: "policy_binding_uuid", type: "UUID!", subgraph: "Authentik")
  ): PoliciesBindingsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/policies/bindings/{args.policy_binding_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "policies_bindings_retrieve", type: "policies_bindings_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  policiesBindingsUsedByList(
    """A UUID string identifying this Policy Binding."""
    policyBindingUuid: UUID! @source(name: "policy_binding_uuid", type: "UUID!", subgraph: "Authentik")
  ): [PoliciesBindingsUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/policies/bindings/{args.policy_binding_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "policies_bindings_used_by_list", type: "[policies_bindings_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Dummy Viewset"""
  policiesDummyList(
    created: DateTime
    executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
    lastUpdated: DateTime @source(name: "last_updated", type: "DateTime", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    policyUuid: UUID @source(name: "policy_uuid", type: "UUID", subgraph: "Authentik")
    result: Boolean
    """A search term."""
    search: String
    waitMax: Int @source(name: "wait_max", type: "Int", subgraph: "Authentik")
    waitMin: Int @source(name: "wait_min", type: "Int", subgraph: "Authentik")
  ): PoliciesDummyListResponse @httpOperation(subgraph: "Authentik", path: "/policies/dummy/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"created\":\"created\",\"execution_logging\":\"execution_logging\",\"last_updated\":\"last_updated\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"policy_uuid\":\"policy_uuid\",\"result\":\"result\",\"search\":\"search\",\"wait_max\":\"wait_max\",\"wait_min\":\"wait_min\"}") @source(name: "policies_dummy_list", type: "policies_dummy_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Dummy Viewset"""
  policiesDummyRetrieve(
    """A UUID string identifying this Dummy Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
  ): PoliciesDummyRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/policies/dummy/{args.policy_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "policies_dummy_retrieve", type: "policies_dummy_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  policiesDummyUsedByList(
    """A UUID string identifying this Dummy Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
  ): [PoliciesDummyUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/policies/dummy/{args.policy_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "policies_dummy_used_by_list", type: "[policies_dummy_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Event Matcher Policy Viewset"""
  policiesEventMatcherList(
    action: QueryInputPoliciesEventMatcherListAction @source(name: "action", type: "queryInput_policies_event_matcher_list_action", subgraph: "Authentik")
    app: String
    clientIp: String @source(name: "client_ip", type: "String", subgraph: "Authentik")
    created: DateTime
    executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
    lastUpdated: DateTime @source(name: "last_updated", type: "DateTime", subgraph: "Authentik")
    model: String
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    policyUuid: UUID @source(name: "policy_uuid", type: "UUID", subgraph: "Authentik")
    """A search term."""
    search: String
  ): PoliciesEventMatcherListResponse @httpOperation(subgraph: "Authentik", path: "/policies/event_matcher/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"action\":\"action\",\"app\":\"app\",\"client_ip\":\"client_ip\",\"created\":\"created\",\"execution_logging\":\"execution_logging\",\"last_updated\":\"last_updated\",\"model\":\"model\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"policy_uuid\":\"policy_uuid\",\"search\":\"search\"}") @source(name: "policies_event_matcher_list", type: "policies_event_matcher_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Event Matcher Policy Viewset"""
  policiesEventMatcherRetrieve(
    """A UUID string identifying this Event Matcher Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
  ): PoliciesEventMatcherRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/policies/event_matcher/{args.policy_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "policies_event_matcher_retrieve", type: "policies_event_matcher_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  policiesEventMatcherUsedByList(
    """A UUID string identifying this Event Matcher Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
  ): [PoliciesEventMatcherUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/policies/event_matcher/{args.policy_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "policies_event_matcher_used_by_list", type: "[policies_event_matcher_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  policiesExpressionList(
    created: DateTime
    executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
    expression: String
    lastUpdated: DateTime @source(name: "last_updated", type: "DateTime", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    policyUuid: UUID @source(name: "policy_uuid", type: "UUID", subgraph: "Authentik")
    """A search term."""
    search: String
  ): PoliciesExpressionListResponse @httpOperation(subgraph: "Authentik", path: "/policies/expression/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"created\":\"created\",\"execution_logging\":\"execution_logging\",\"expression\":\"expression\",\"last_updated\":\"last_updated\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"policy_uuid\":\"policy_uuid\",\"search\":\"search\"}") @source(name: "policies_expression_list", type: "policies_expression_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  policiesExpressionRetrieve(
    """A UUID string identifying this Expression Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
  ): PoliciesExpressionRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/policies/expression/{args.policy_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "policies_expression_retrieve", type: "policies_expression_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  policiesExpressionUsedByList(
    """A UUID string identifying this Expression Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
  ): [PoliciesExpressionUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/policies/expression/{args.policy_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "policies_expression_used_by_list", type: "[policies_expression_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """GeoIP Viewset"""
  policiesGeoipList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): PoliciesGeoipListResponse @httpOperation(subgraph: "Authentik", path: "/policies/geoip/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "policies_geoip_list", type: "policies_geoip_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """GeoIP Viewset"""
  policiesGeoipRetrieve(
    """A UUID string identifying this GeoIP Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
  ): PoliciesGeoipRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/policies/geoip/{args.policy_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "policies_geoip_retrieve", type: "policies_geoip_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  policiesGeoipUsedByList(
    """A UUID string identifying this GeoIP Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
  ): [PoliciesGeoipUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/policies/geoip/{args.policy_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "policies_geoip_used_by_list", type: "[policies_geoip_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get all countries in ISO-3166-1"""
  policiesGeoipIso3166List: [PoliciesGeoipIso3166ListResponse] @httpOperation(subgraph: "Authentik", path: "/policies/geoip_iso3166/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "policies_geoip_iso3166_list", type: "[policies_geoip_iso3166_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Password Policy Viewset"""
  policiesPasswordList(
    amountDigits: Int @source(name: "amount_digits", type: "Int", subgraph: "Authentik")
    amountLowercase: Int @source(name: "amount_lowercase", type: "Int", subgraph: "Authentik")
    amountSymbols: Int @source(name: "amount_symbols", type: "Int", subgraph: "Authentik")
    amountUppercase: Int @source(name: "amount_uppercase", type: "Int", subgraph: "Authentik")
    checkHaveIBeenPwned: Boolean @source(name: "check_have_i_been_pwned", type: "Boolean", subgraph: "Authentik")
    checkStaticRules: Boolean @source(name: "check_static_rules", type: "Boolean", subgraph: "Authentik")
    checkZxcvbn: Boolean @source(name: "check_zxcvbn", type: "Boolean", subgraph: "Authentik")
    created: DateTime
    errorMessage: String @source(name: "error_message", type: "String", subgraph: "Authentik")
    executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
    hibpAllowedCount: Int @source(name: "hibp_allowed_count", type: "Int", subgraph: "Authentik")
    lastUpdated: DateTime @source(name: "last_updated", type: "DateTime", subgraph: "Authentik")
    lengthMin: Int @source(name: "length_min", type: "Int", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    passwordField: String @source(name: "password_field", type: "String", subgraph: "Authentik")
    policyUuid: UUID @source(name: "policy_uuid", type: "UUID", subgraph: "Authentik")
    """A search term."""
    search: String
    symbolCharset: String @source(name: "symbol_charset", type: "String", subgraph: "Authentik")
    zxcvbnScoreThreshold: Int @source(name: "zxcvbn_score_threshold", type: "Int", subgraph: "Authentik")
  ): PoliciesPasswordListResponse @httpOperation(subgraph: "Authentik", path: "/policies/password/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"amount_digits\":\"amount_digits\",\"amount_lowercase\":\"amount_lowercase\",\"amount_symbols\":\"amount_symbols\",\"amount_uppercase\":\"amount_uppercase\",\"check_have_i_been_pwned\":\"check_have_i_been_pwned\",\"check_static_rules\":\"check_static_rules\",\"check_zxcvbn\":\"check_zxcvbn\",\"created\":\"created\",\"error_message\":\"error_message\",\"execution_logging\":\"execution_logging\",\"hibp_allowed_count\":\"hibp_allowed_count\",\"last_updated\":\"last_updated\",\"length_min\":\"length_min\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"password_field\":\"password_field\",\"policy_uuid\":\"policy_uuid\",\"search\":\"search\",\"symbol_charset\":\"symbol_charset\",\"zxcvbn_score_threshold\":\"zxcvbn_score_threshold\"}") @source(name: "policies_password_list", type: "policies_password_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Password Policy Viewset"""
  policiesPasswordRetrieve(
    """A UUID string identifying this Password Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
  ): PoliciesPasswordRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/policies/password/{args.policy_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "policies_password_retrieve", type: "policies_password_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  policiesPasswordUsedByList(
    """A UUID string identifying this Password Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
  ): [PoliciesPasswordUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/policies/password/{args.policy_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "policies_password_used_by_list", type: "[policies_password_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Password Expiry Viewset"""
  policiesPasswordExpiryList(
    created: DateTime
    days: Int
    denyOnly: Boolean @source(name: "deny_only", type: "Boolean", subgraph: "Authentik")
    executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
    lastUpdated: DateTime @source(name: "last_updated", type: "DateTime", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    policyUuid: UUID @source(name: "policy_uuid", type: "UUID", subgraph: "Authentik")
    """A search term."""
    search: String
  ): PoliciesPasswordExpiryListResponse @httpOperation(subgraph: "Authentik", path: "/policies/password_expiry/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"created\":\"created\",\"days\":\"days\",\"deny_only\":\"deny_only\",\"execution_logging\":\"execution_logging\",\"last_updated\":\"last_updated\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"policy_uuid\":\"policy_uuid\",\"search\":\"search\"}") @source(name: "policies_password_expiry_list", type: "policies_password_expiry_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Password Expiry Viewset"""
  policiesPasswordExpiryRetrieve(
    """A UUID string identifying this Password Expiry Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
  ): PoliciesPasswordExpiryRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/policies/password_expiry/{args.policy_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "policies_password_expiry_retrieve", type: "policies_password_expiry_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  policiesPasswordExpiryUsedByList(
    """A UUID string identifying this Password Expiry Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
  ): [PoliciesPasswordExpiryUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/policies/password_expiry/{args.policy_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "policies_password_expiry_used_by_list", type: "[policies_password_expiry_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Reputation Policy Viewset"""
  policiesReputationList(
    checkIp: Boolean @source(name: "check_ip", type: "Boolean", subgraph: "Authentik")
    checkUsername: Boolean @source(name: "check_username", type: "Boolean", subgraph: "Authentik")
    created: DateTime
    executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
    lastUpdated: DateTime @source(name: "last_updated", type: "DateTime", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    policyUuid: UUID @source(name: "policy_uuid", type: "UUID", subgraph: "Authentik")
    """A search term."""
    search: String
    threshold: Int
  ): PoliciesReputationListResponse @httpOperation(subgraph: "Authentik", path: "/policies/reputation/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"check_ip\":\"check_ip\",\"check_username\":\"check_username\",\"created\":\"created\",\"execution_logging\":\"execution_logging\",\"last_updated\":\"last_updated\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"policy_uuid\":\"policy_uuid\",\"search\":\"search\",\"threshold\":\"threshold\"}") @source(name: "policies_reputation_list", type: "policies_reputation_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Reputation Policy Viewset"""
  policiesReputationRetrieve(
    """A UUID string identifying this Reputation Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
  ): PoliciesReputationRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/policies/reputation/{args.policy_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "policies_reputation_retrieve", type: "policies_reputation_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  policiesReputationUsedByList(
    """A UUID string identifying this Reputation Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
  ): [PoliciesReputationUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/policies/reputation/{args.policy_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "policies_reputation_used_by_list", type: "[policies_reputation_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Reputation Viewset"""
  policiesReputationScoresList(
    identifier: String
    """Multiple values may be separated by commas."""
    identifierIn: [String] @source(name: "identifier_in", type: "[String]", subgraph: "Authentik")
    ip: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    score: Int
    """A search term."""
    search: String
  ): PoliciesReputationScoresListResponse @httpOperation(subgraph: "Authentik", path: "/policies/reputation/scores/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"identifier\":\"identifier\",\"identifier_in\":\"identifier_in\",\"ip\":\"ip\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"score\":\"score\",\"search\":\"search\"}", queryStringOptionsByParam: "{\"identifier_in\":{\"arrayFormat\":\"comma\"}}") @source(name: "policies_reputation_scores_list", type: "policies_reputation_scores_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Reputation Viewset"""
  policiesReputationScoresRetrieve(
    """A UUID string identifying this Reputation Score."""
    reputationUuid: UUID! @source(name: "reputation_uuid", type: "UUID!", subgraph: "Authentik")
  ): PoliciesReputationScoresRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/policies/reputation/scores/{args.reputation_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "policies_reputation_scores_retrieve", type: "policies_reputation_scores_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  policiesReputationScoresUsedByList(
    """A UUID string identifying this Reputation Score."""
    reputationUuid: UUID! @source(name: "reputation_uuid", type: "UUID!", subgraph: "Authentik")
  ): [PoliciesReputationScoresUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/policies/reputation/scores/{args.reputation_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "policies_reputation_scores_used_by_list", type: "[policies_reputation_scores_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PropertyMapping Viewset"""
  propertymappingsAllList(
    managed: [String]
    managedIsnull: Boolean @source(name: "managed__isnull", type: "Boolean", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): PropertymappingsAllListResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/all/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"managed\":\"managed\",\"managed__isnull\":\"managed__isnull\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}", queryStringOptionsByParam: "{\"managed\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "propertymappings_all_list", type: "propertymappings_all_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PropertyMapping Viewset"""
  propertymappingsAllRetrieve(
    """A UUID string identifying this Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsAllRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/all/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_all_retrieve", type: "propertymappings_all_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  propertymappingsAllUsedByList(
    """A UUID string identifying this Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): [PropertymappingsAllUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/propertymappings/all/{args.pm_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_all_used_by_list", type: "[propertymappings_all_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get all creatable types"""
  propertymappingsAllTypesList: [PropertymappingsAllTypesListResponse] @httpOperation(subgraph: "Authentik", path: "/propertymappings/all/types/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_all_types_list", type: "[propertymappings_all_types_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """NotificationWebhookMapping Viewset"""
  propertymappingsNotificationList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): PropertymappingsNotificationListResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/notification/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "propertymappings_notification_list", type: "propertymappings_notification_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """NotificationWebhookMapping Viewset"""
  propertymappingsNotificationRetrieve(
    """A UUID string identifying this Webhook Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsNotificationRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/notification/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_notification_retrieve", type: "propertymappings_notification_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  propertymappingsNotificationUsedByList(
    """A UUID string identifying this Webhook Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): [PropertymappingsNotificationUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/propertymappings/notification/{args.pm_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_notification_used_by_list", type: "[propertymappings_notification_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """GoogleWorkspaceProviderMapping Viewset"""
  propertymappingsProviderGoogleWorkspaceList(
    expression: String
    managed: [String]
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    pmUuid: UUID @source(name: "pm_uuid", type: "UUID", subgraph: "Authentik")
    """A search term."""
    search: String
  ): PropertymappingsProviderGoogleWorkspaceListResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/google_workspace/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"expression\":\"expression\",\"managed\":\"managed\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"pm_uuid\":\"pm_uuid\",\"search\":\"search\"}", queryStringOptionsByParam: "{\"managed\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "propertymappings_provider_google_workspace_list", type: "propertymappings_provider_google_workspace_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """GoogleWorkspaceProviderMapping Viewset"""
  propertymappingsProviderGoogleWorkspaceRetrieve(
    """A UUID string identifying this Google Workspace Provider Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsProviderGoogleWorkspaceRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/google_workspace/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_provider_google_workspace_retrieve", type: "propertymappings_provider_google_workspace_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  propertymappingsProviderGoogleWorkspaceUsedByList(
    """A UUID string identifying this Google Workspace Provider Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): [PropertymappingsProviderGoogleWorkspaceUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/google_workspace/{args.pm_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_provider_google_workspace_used_by_list", type: "[propertymappings_provider_google_workspace_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """MicrosoftEntraProviderMapping Viewset"""
  propertymappingsProviderMicrosoftEntraList(
    expression: String
    managed: [String]
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    pmUuid: UUID @source(name: "pm_uuid", type: "UUID", subgraph: "Authentik")
    """A search term."""
    search: String
  ): PropertymappingsProviderMicrosoftEntraListResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/microsoft_entra/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"expression\":\"expression\",\"managed\":\"managed\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"pm_uuid\":\"pm_uuid\",\"search\":\"search\"}", queryStringOptionsByParam: "{\"managed\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "propertymappings_provider_microsoft_entra_list", type: "propertymappings_provider_microsoft_entra_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """MicrosoftEntraProviderMapping Viewset"""
  propertymappingsProviderMicrosoftEntraRetrieve(
    """A UUID string identifying this Microsoft Entra Provider Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsProviderMicrosoftEntraRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/microsoft_entra/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_provider_microsoft_entra_retrieve", type: "propertymappings_provider_microsoft_entra_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  propertymappingsProviderMicrosoftEntraUsedByList(
    """A UUID string identifying this Microsoft Entra Provider Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): [PropertymappingsProviderMicrosoftEntraUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/microsoft_entra/{args.pm_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_provider_microsoft_entra_used_by_list", type: "[propertymappings_provider_microsoft_entra_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RACPropertyMapping Viewset"""
  propertymappingsProviderRacList(
    managed: [String]
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): PropertymappingsProviderRacListResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/rac/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"managed\":\"managed\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}", queryStringOptionsByParam: "{\"managed\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "propertymappings_provider_rac_list", type: "propertymappings_provider_rac_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RACPropertyMapping Viewset"""
  propertymappingsProviderRacRetrieve(
    """A UUID string identifying this RAC Provider Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsProviderRacRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/rac/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_provider_rac_retrieve", type: "propertymappings_provider_rac_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  propertymappingsProviderRacUsedByList(
    """A UUID string identifying this RAC Provider Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): [PropertymappingsProviderRacUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/rac/{args.pm_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_provider_rac_used_by_list", type: "[propertymappings_provider_rac_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RadiusProviderPropertyMapping Viewset"""
  propertymappingsProviderRadiusList(
    managed: [String]
    managedIsnull: Boolean @source(name: "managed__isnull", type: "Boolean", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): PropertymappingsProviderRadiusListResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/radius/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"managed\":\"managed\",\"managed__isnull\":\"managed__isnull\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}", queryStringOptionsByParam: "{\"managed\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "propertymappings_provider_radius_list", type: "propertymappings_provider_radius_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RadiusProviderPropertyMapping Viewset"""
  propertymappingsProviderRadiusRetrieve(
    """A UUID string identifying this Radius Provider Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsProviderRadiusRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/radius/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_provider_radius_retrieve", type: "propertymappings_provider_radius_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  propertymappingsProviderRadiusUsedByList(
    """A UUID string identifying this Radius Provider Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): [PropertymappingsProviderRadiusUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/radius/{args.pm_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_provider_radius_used_by_list", type: "[propertymappings_provider_radius_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SAMLPropertyMapping Viewset"""
  propertymappingsProviderSamlList(
    friendlyName: String @source(name: "friendly_name", type: "String", subgraph: "Authentik")
    managed: [String]
    managedIsnull: Boolean @source(name: "managed__isnull", type: "Boolean", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    samlName: String @source(name: "saml_name", type: "String", subgraph: "Authentik")
    """A search term."""
    search: String
  ): PropertymappingsProviderSamlListResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/saml/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"friendly_name\":\"friendly_name\",\"managed\":\"managed\",\"managed__isnull\":\"managed__isnull\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"saml_name\":\"saml_name\",\"search\":\"search\"}", queryStringOptionsByParam: "{\"managed\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "propertymappings_provider_saml_list", type: "propertymappings_provider_saml_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SAMLPropertyMapping Viewset"""
  propertymappingsProviderSamlRetrieve(
    """A UUID string identifying this SAML Provider Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsProviderSamlRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/saml/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_provider_saml_retrieve", type: "propertymappings_provider_saml_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  propertymappingsProviderSamlUsedByList(
    """A UUID string identifying this SAML Provider Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): [PropertymappingsProviderSamlUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/saml/{args.pm_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_provider_saml_used_by_list", type: "[propertymappings_provider_saml_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMMapping Viewset"""
  propertymappingsProviderScimList(
    managed: [String]
    managedIsnull: Boolean @source(name: "managed__isnull", type: "Boolean", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): PropertymappingsProviderScimListResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/scim/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"managed\":\"managed\",\"managed__isnull\":\"managed__isnull\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}", queryStringOptionsByParam: "{\"managed\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "propertymappings_provider_scim_list", type: "propertymappings_provider_scim_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMMapping Viewset"""
  propertymappingsProviderScimRetrieve(
    """A UUID string identifying this SCIM Provider Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsProviderScimRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/scim/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_provider_scim_retrieve", type: "propertymappings_provider_scim_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  propertymappingsProviderScimUsedByList(
    """A UUID string identifying this SCIM Provider Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): [PropertymappingsProviderScimUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/scim/{args.pm_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_provider_scim_used_by_list", type: "[propertymappings_provider_scim_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """ScopeMapping Viewset"""
  propertymappingsProviderScopeList(
    managed: [String]
    managedIsnull: Boolean @source(name: "managed__isnull", type: "Boolean", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    scopeName: String @source(name: "scope_name", type: "String", subgraph: "Authentik")
    """A search term."""
    search: String
  ): PropertymappingsProviderScopeListResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/scope/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"managed\":\"managed\",\"managed__isnull\":\"managed__isnull\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"scope_name\":\"scope_name\",\"search\":\"search\"}", queryStringOptionsByParam: "{\"managed\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "propertymappings_provider_scope_list", type: "propertymappings_provider_scope_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """ScopeMapping Viewset"""
  propertymappingsProviderScopeRetrieve(
    """A UUID string identifying this Scope Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsProviderScopeRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/scope/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_provider_scope_retrieve", type: "propertymappings_provider_scope_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  propertymappingsProviderScopeUsedByList(
    """A UUID string identifying this Scope Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): [PropertymappingsProviderScopeUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/scope/{args.pm_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_provider_scope_used_by_list", type: "[propertymappings_provider_scope_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """KerberosSource PropertyMapping Viewset"""
  propertymappingsSourceKerberosList(
    managed: [String]
    managedIsnull: Boolean @source(name: "managed__isnull", type: "Boolean", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): PropertymappingsSourceKerberosListResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/kerberos/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"managed\":\"managed\",\"managed__isnull\":\"managed__isnull\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}", queryStringOptionsByParam: "{\"managed\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "propertymappings_source_kerberos_list", type: "propertymappings_source_kerberos_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """KerberosSource PropertyMapping Viewset"""
  propertymappingsSourceKerberosRetrieve(
    """A UUID string identifying this Kerberos Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsSourceKerberosRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/kerberos/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_source_kerberos_retrieve", type: "propertymappings_source_kerberos_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  propertymappingsSourceKerberosUsedByList(
    """A UUID string identifying this Kerberos Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): [PropertymappingsSourceKerberosUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/kerberos/{args.pm_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_source_kerberos_used_by_list", type: "[propertymappings_source_kerberos_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """LDAP PropertyMapping Viewset"""
  propertymappingsSourceLdapList(
    managed: [String]
    managedIsnull: Boolean @source(name: "managed__isnull", type: "Boolean", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): PropertymappingsSourceLdapListResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/ldap/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"managed\":\"managed\",\"managed__isnull\":\"managed__isnull\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}", queryStringOptionsByParam: "{\"managed\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "propertymappings_source_ldap_list", type: "propertymappings_source_ldap_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """LDAP PropertyMapping Viewset"""
  propertymappingsSourceLdapRetrieve(
    """A UUID string identifying this LDAP Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsSourceLdapRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/ldap/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_source_ldap_retrieve", type: "propertymappings_source_ldap_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  propertymappingsSourceLdapUsedByList(
    """A UUID string identifying this LDAP Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): [PropertymappingsSourceLdapUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/ldap/{args.pm_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_source_ldap_used_by_list", type: "[propertymappings_source_ldap_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """OAuthSourcePropertyMapping Viewset"""
  propertymappingsSourceOauthList(
    managed: [String]
    managedIsnull: Boolean @source(name: "managed__isnull", type: "Boolean", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): PropertymappingsSourceOauthListResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/oauth/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"managed\":\"managed\",\"managed__isnull\":\"managed__isnull\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}", queryStringOptionsByParam: "{\"managed\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "propertymappings_source_oauth_list", type: "propertymappings_source_oauth_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """OAuthSourcePropertyMapping Viewset"""
  propertymappingsSourceOauthRetrieve(
    """A UUID string identifying this OAuth Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsSourceOauthRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/oauth/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_source_oauth_retrieve", type: "propertymappings_source_oauth_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  propertymappingsSourceOauthUsedByList(
    """A UUID string identifying this OAuth Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): [PropertymappingsSourceOauthUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/oauth/{args.pm_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_source_oauth_used_by_list", type: "[propertymappings_source_oauth_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PlexSourcePropertyMapping Viewset"""
  propertymappingsSourcePlexList(
    managed: [String]
    managedIsnull: Boolean @source(name: "managed__isnull", type: "Boolean", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): PropertymappingsSourcePlexListResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/plex/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"managed\":\"managed\",\"managed__isnull\":\"managed__isnull\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}", queryStringOptionsByParam: "{\"managed\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "propertymappings_source_plex_list", type: "propertymappings_source_plex_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PlexSourcePropertyMapping Viewset"""
  propertymappingsSourcePlexRetrieve(
    """A UUID string identifying this Plex Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsSourcePlexRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/plex/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_source_plex_retrieve", type: "propertymappings_source_plex_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  propertymappingsSourcePlexUsedByList(
    """A UUID string identifying this Plex Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): [PropertymappingsSourcePlexUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/plex/{args.pm_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_source_plex_used_by_list", type: "[propertymappings_source_plex_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SAMLSourcePropertyMapping Viewset"""
  propertymappingsSourceSamlList(
    managed: [String]
    managedIsnull: Boolean @source(name: "managed__isnull", type: "Boolean", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): PropertymappingsSourceSamlListResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/saml/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"managed\":\"managed\",\"managed__isnull\":\"managed__isnull\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}", queryStringOptionsByParam: "{\"managed\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "propertymappings_source_saml_list", type: "propertymappings_source_saml_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SAMLSourcePropertyMapping Viewset"""
  propertymappingsSourceSamlRetrieve(
    """A UUID string identifying this SAML Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsSourceSamlRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/saml/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_source_saml_retrieve", type: "propertymappings_source_saml_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  propertymappingsSourceSamlUsedByList(
    """A UUID string identifying this SAML Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): [PropertymappingsSourceSamlUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/saml/{args.pm_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_source_saml_used_by_list", type: "[propertymappings_source_saml_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMSourcePropertyMapping Viewset"""
  propertymappingsSourceScimList(
    managed: [String]
    managedIsnull: Boolean @source(name: "managed__isnull", type: "Boolean", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): PropertymappingsSourceScimListResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/scim/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"managed\":\"managed\",\"managed__isnull\":\"managed__isnull\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}", queryStringOptionsByParam: "{\"managed\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "propertymappings_source_scim_list", type: "propertymappings_source_scim_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMSourcePropertyMapping Viewset"""
  propertymappingsSourceScimRetrieve(
    """A UUID string identifying this SCIM Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsSourceScimRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/scim/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_source_scim_retrieve", type: "propertymappings_source_scim_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  propertymappingsSourceScimUsedByList(
    """A UUID string identifying this SCIM Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): [PropertymappingsSourceScimUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/scim/{args.pm_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "propertymappings_source_scim_used_by_list", type: "[propertymappings_source_scim_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Provider Viewset"""
  providers(
    applicationIsnull: Boolean @source(name: "application__isnull", type: "Boolean", subgraph: "Authentik")
    """
    When not set all providers are returned. When set to true, only backchannel providers are returned. When set to false, backchannel providers are excluded
    """
    backchannel: Boolean
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): ProvidersAllListResponse @httpOperation(subgraph: "Authentik", path: "/providers/all/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"application__isnull\":\"application__isnull\",\"backchannel\":\"backchannel\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "providers_all_list", type: "providers_all_list_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Provider Viewset"""
  provider(
    """A unique integer value identifying this provider."""
    id: Int!
  ): ProvidersAllRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/providers/all/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_all_retrieve", type: "providers_all_retrieve_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  providersAllUsedByList(
    """A unique integer value identifying this provider."""
    id: Int!
  ): [ProvidersAllUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/providers/all/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_all_used_by_list", type: "[providers_all_used_by_list_response]", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get all creatable types"""
  providersAllTypesList: [ProvidersAllTypesListResponse] @httpOperation(subgraph: "Authentik", path: "/providers/all/types/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_all_types_list", type: "[providers_all_types_list_response]", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """GoogleWorkspaceProvider Viewset"""
  providersGoogleWorkspaceList(
    delegatedSubject: String @source(name: "delegated_subject", type: "String", subgraph: "Authentik")
    excludeUsersServiceAccount: Boolean @source(name: "exclude_users_service_account", type: "Boolean", subgraph: "Authentik")
    filterGroup: UUID @source(name: "filter_group", type: "UUID", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): ProvidersGoogleWorkspaceListResponse @httpOperation(subgraph: "Authentik", path: "/providers/google_workspace/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"delegated_subject\":\"delegated_subject\",\"exclude_users_service_account\":\"exclude_users_service_account\",\"filter_group\":\"filter_group\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "providers_google_workspace_list", type: "providers_google_workspace_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """GoogleWorkspaceProvider Viewset"""
  providersGoogleWorkspaceRetrieve(
    """A unique integer value identifying this Google Workspace Provider."""
    id: Int!
  ): ProvidersGoogleWorkspaceRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/providers/google_workspace/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_google_workspace_retrieve", type: "providers_google_workspace_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get provider's sync status"""
  providersGoogleWorkspaceSyncStatusRetrieve(
    """A unique integer value identifying this Google Workspace Provider."""
    id: Int!
  ): ProvidersGoogleWorkspaceSyncStatusRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/providers/google_workspace/{args.id}/sync/status/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_google_workspace_sync_status_retrieve", type: "providers_google_workspace_sync_status_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  providersGoogleWorkspaceUsedByList(
    """A unique integer value identifying this Google Workspace Provider."""
    id: Int!
  ): [ProvidersGoogleWorkspaceUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/providers/google_workspace/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_google_workspace_used_by_list", type: "[providers_google_workspace_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """GoogleWorkspaceProviderGroup Viewset"""
  providersGoogleWorkspaceGroupsList(
    groupGroupUuid: UUID @source(name: "group__group_uuid", type: "UUID", subgraph: "Authentik")
    groupName: String @source(name: "group__name", type: "String", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    providerId: Int @source(name: "provider__id", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): ProvidersGoogleWorkspaceGroupsListResponse @httpOperation(subgraph: "Authentik", path: "/providers/google_workspace_groups/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"group__group_uuid\":\"group__group_uuid\",\"group__name\":\"group__name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"provider__id\":\"provider__id\",\"search\":\"search\"}") @source(name: "providers_google_workspace_groups_list", type: "providers_google_workspace_groups_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """GoogleWorkspaceProviderGroup Viewset"""
  providersGoogleWorkspaceGroupsRetrieve(
    """A UUID string identifying this Google Workspace Provider Group."""
    id: UUID!
  ): ProvidersGoogleWorkspaceGroupsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/providers/google_workspace_groups/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_google_workspace_groups_retrieve", type: "providers_google_workspace_groups_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  providersGoogleWorkspaceGroupsUsedByList(
    """A UUID string identifying this Google Workspace Provider Group."""
    id: UUID!
  ): [ProvidersGoogleWorkspaceGroupsUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/providers/google_workspace_groups/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_google_workspace_groups_used_by_list", type: "[providers_google_workspace_groups_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """GoogleWorkspaceProviderUser Viewset"""
  providersGoogleWorkspaceUsersList(
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    providerId: Int @source(name: "provider__id", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    userId: Int @source(name: "user__id", type: "Int", subgraph: "Authentik")
    userUsername: String @source(name: "user__username", type: "String", subgraph: "Authentik")
  ): ProvidersGoogleWorkspaceUsersListResponse @httpOperation(subgraph: "Authentik", path: "/providers/google_workspace_users/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"provider__id\":\"provider__id\",\"search\":\"search\",\"user__id\":\"user__id\",\"user__username\":\"user__username\"}") @source(name: "providers_google_workspace_users_list", type: "providers_google_workspace_users_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """GoogleWorkspaceProviderUser Viewset"""
  providersGoogleWorkspaceUsersRetrieve(
    """A UUID string identifying this Google Workspace Provider User."""
    id: UUID!
  ): ProvidersGoogleWorkspaceUsersRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/providers/google_workspace_users/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_google_workspace_users_retrieve", type: "providers_google_workspace_users_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  providersGoogleWorkspaceUsersUsedByList(
    """A UUID string identifying this Google Workspace Provider User."""
    id: UUID!
  ): [ProvidersGoogleWorkspaceUsersUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/providers/google_workspace_users/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_google_workspace_users_used_by_list", type: "[providers_google_workspace_users_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """LDAPProvider Viewset"""
  providersLdapList(
    applicationIsnull: Boolean @source(name: "application__isnull", type: "Boolean", subgraph: "Authentik")
    authorizationFlowSlugIexact: String @source(name: "authorization_flow__slug__iexact", type: "String", subgraph: "Authentik")
    baseDnIexact: String @source(name: "base_dn__iexact", type: "String", subgraph: "Authentik")
    certificateKpUuidIexact: UUID @source(name: "certificate__kp_uuid__iexact", type: "UUID", subgraph: "Authentik")
    certificateNameIexact: String @source(name: "certificate__name__iexact", type: "String", subgraph: "Authentik")
    gidStartNumberIexact: Int @source(name: "gid_start_number__iexact", type: "Int", subgraph: "Authentik")
    nameIexact: String @source(name: "name__iexact", type: "String", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    tlsServerNameIexact: String @source(name: "tls_server_name__iexact", type: "String", subgraph: "Authentik")
    uidStartNumberIexact: Int @source(name: "uid_start_number__iexact", type: "Int", subgraph: "Authentik")
  ): ProvidersLdapListResponse @httpOperation(subgraph: "Authentik", path: "/providers/ldap/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"application__isnull\":\"application__isnull\",\"authorization_flow__slug__iexact\":\"authorization_flow__slug__iexact\",\"base_dn__iexact\":\"base_dn__iexact\",\"certificate__kp_uuid__iexact\":\"certificate__kp_uuid__iexact\",\"certificate__name__iexact\":\"certificate__name__iexact\",\"gid_start_number__iexact\":\"gid_start_number__iexact\",\"name__iexact\":\"name__iexact\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"tls_server_name__iexact\":\"tls_server_name__iexact\",\"uid_start_number__iexact\":\"uid_start_number__iexact\"}") @source(name: "providers_ldap_list", type: "providers_ldap_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """LDAPProvider Viewset"""
  providersLdapRetrieve(
    """A unique integer value identifying this LDAP Provider."""
    id: Int!
  ): ProvidersLdapRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/providers/ldap/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_ldap_retrieve", type: "providers_ldap_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  providersLdapUsedByList(
    """A unique integer value identifying this LDAP Provider."""
    id: Int!
  ): [ProvidersLdapUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/providers/ldap/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_ldap_used_by_list", type: "[providers_ldap_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """MicrosoftEntraProvider Viewset"""
  providersMicrosoftEntraList(
    excludeUsersServiceAccount: Boolean @source(name: "exclude_users_service_account", type: "Boolean", subgraph: "Authentik")
    filterGroup: UUID @source(name: "filter_group", type: "UUID", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): ProvidersMicrosoftEntraListResponse @httpOperation(subgraph: "Authentik", path: "/providers/microsoft_entra/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"exclude_users_service_account\":\"exclude_users_service_account\",\"filter_group\":\"filter_group\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "providers_microsoft_entra_list", type: "providers_microsoft_entra_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """MicrosoftEntraProvider Viewset"""
  providersMicrosoftEntraRetrieve(
    """A unique integer value identifying this Microsoft Entra Provider."""
    id: Int!
  ): ProvidersMicrosoftEntraRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/providers/microsoft_entra/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_microsoft_entra_retrieve", type: "providers_microsoft_entra_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get provider's sync status"""
  providersMicrosoftEntraSyncStatusRetrieve(
    """A unique integer value identifying this Microsoft Entra Provider."""
    id: Int!
  ): ProvidersMicrosoftEntraSyncStatusRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/providers/microsoft_entra/{args.id}/sync/status/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_microsoft_entra_sync_status_retrieve", type: "providers_microsoft_entra_sync_status_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  providersMicrosoftEntraUsedByList(
    """A unique integer value identifying this Microsoft Entra Provider."""
    id: Int!
  ): [ProvidersMicrosoftEntraUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/providers/microsoft_entra/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_microsoft_entra_used_by_list", type: "[providers_microsoft_entra_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """MicrosoftEntraProviderGroup Viewset"""
  providersMicrosoftEntraGroupsList(
    groupGroupUuid: UUID @source(name: "group__group_uuid", type: "UUID", subgraph: "Authentik")
    groupName: String @source(name: "group__name", type: "String", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    providerId: Int @source(name: "provider__id", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): ProvidersMicrosoftEntraGroupsListResponse @httpOperation(subgraph: "Authentik", path: "/providers/microsoft_entra_groups/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"group__group_uuid\":\"group__group_uuid\",\"group__name\":\"group__name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"provider__id\":\"provider__id\",\"search\":\"search\"}") @source(name: "providers_microsoft_entra_groups_list", type: "providers_microsoft_entra_groups_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """MicrosoftEntraProviderGroup Viewset"""
  providersMicrosoftEntraGroupsRetrieve(
    """A UUID string identifying this Microsoft Entra Provider Group."""
    id: UUID!
  ): ProvidersMicrosoftEntraGroupsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/providers/microsoft_entra_groups/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_microsoft_entra_groups_retrieve", type: "providers_microsoft_entra_groups_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  providersMicrosoftEntraGroupsUsedByList(
    """A UUID string identifying this Microsoft Entra Provider Group."""
    id: UUID!
  ): [ProvidersMicrosoftEntraGroupsUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/providers/microsoft_entra_groups/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_microsoft_entra_groups_used_by_list", type: "[providers_microsoft_entra_groups_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """MicrosoftEntraProviderUser Viewset"""
  providersMicrosoftEntraUsersList(
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    providerId: Int @source(name: "provider__id", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    userId: Int @source(name: "user__id", type: "Int", subgraph: "Authentik")
    userUsername: String @source(name: "user__username", type: "String", subgraph: "Authentik")
  ): ProvidersMicrosoftEntraUsersListResponse @httpOperation(subgraph: "Authentik", path: "/providers/microsoft_entra_users/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"provider__id\":\"provider__id\",\"search\":\"search\",\"user__id\":\"user__id\",\"user__username\":\"user__username\"}") @source(name: "providers_microsoft_entra_users_list", type: "providers_microsoft_entra_users_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """MicrosoftEntraProviderUser Viewset"""
  providersMicrosoftEntraUsersRetrieve(
    """A UUID string identifying this Microsoft Entra Provider User."""
    id: UUID!
  ): ProvidersMicrosoftEntraUsersRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/providers/microsoft_entra_users/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_microsoft_entra_users_retrieve", type: "providers_microsoft_entra_users_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  providersMicrosoftEntraUsersUsedByList(
    """A UUID string identifying this Microsoft Entra Provider User."""
    id: UUID!
  ): [ProvidersMicrosoftEntraUsersUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/providers/microsoft_entra_users/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_microsoft_entra_users_used_by_list", type: "[providers_microsoft_entra_users_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """OAuth2Provider Viewset"""
  providersOauth2List(
    accessCodeValidity: String @source(name: "access_code_validity", type: "String", subgraph: "Authentik")
    accessTokenValidity: String @source(name: "access_token_validity", type: "String", subgraph: "Authentik")
    application: UUID
    authorizationFlow: UUID @source(name: "authorization_flow", type: "UUID", subgraph: "Authentik")
    clientId: String @source(name: "client_id", type: "String", subgraph: "Authentik")
    clientType: QueryInputProvidersOauth2ListClientType @source(name: "client_type", type: "queryInput_providers_oauth2_list_client_type", subgraph: "Authentik")
    includeClaimsInIdToken: Boolean @source(name: "include_claims_in_id_token", type: "Boolean", subgraph: "Authentik")
    issuerMode: QueryInputProvidersOauth2ListIssuerMode @source(name: "issuer_mode", type: "queryInput_providers_oauth2_list_issuer_mode", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
    refreshTokenValidity: String @source(name: "refresh_token_validity", type: "String", subgraph: "Authentik")
    """A search term."""
    search: String
    signingKey: UUID @source(name: "signing_key", type: "UUID", subgraph: "Authentik")
    subMode: QueryInputProvidersOauth2ListSubMode @source(name: "sub_mode", type: "queryInput_providers_oauth2_list_sub_mode", subgraph: "Authentik")
  ): ProvidersOauth2ListResponse @httpOperation(subgraph: "Authentik", path: "/providers/oauth2/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"access_code_validity\":\"access_code_validity\",\"access_token_validity\":\"access_token_validity\",\"application\":\"application\",\"authorization_flow\":\"authorization_flow\",\"client_id\":\"client_id\",\"client_type\":\"client_type\",\"include_claims_in_id_token\":\"include_claims_in_id_token\",\"issuer_mode\":\"issuer_mode\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"property_mappings\":\"property_mappings\",\"refresh_token_validity\":\"refresh_token_validity\",\"search\":\"search\",\"signing_key\":\"signing_key\",\"sub_mode\":\"sub_mode\"}", queryStringOptionsByParam: "{\"property_mappings\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "providers_oauth2_list", type: "providers_oauth2_list_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """OAuth2Provider Viewset"""
  oauth2Provider(
    """A unique integer value identifying this OAuth2/OpenID Provider."""
    id: Int!
  ): ProvidersOauth2RetrieveResponse @httpOperation(subgraph: "Authentik", path: "/providers/oauth2/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_oauth2_retrieve", type: "providers_oauth2_retrieve_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Preview user data for provider"""
  providersOauth2PreviewUserRetrieve(
    """A unique integer value identifying this OAuth2/OpenID Provider."""
    id: Int!
    forUser: Int @source(name: "for_user", type: "Int", subgraph: "Authentik")
  ): ProvidersOauth2PreviewUserRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/providers/oauth2/{args.id}/preview_user/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"for_user\":\"for_user\"}") @source(name: "providers_oauth2_preview_user_retrieve", type: "providers_oauth2_preview_user_retrieve_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get Providers setup URLs"""
  providersOauth2SetupUrlsRetrieve(
    """A unique integer value identifying this OAuth2/OpenID Provider."""
    id: Int!
  ): ProvidersOauth2SetupUrlsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/providers/oauth2/{args.id}/setup_urls/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_oauth2_setup_urls_retrieve", type: "providers_oauth2_setup_urls_retrieve_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  providersOauth2UsedByList(
    """A unique integer value identifying this OAuth2/OpenID Provider."""
    id: Int!
  ): [ProvidersOauth2UsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/providers/oauth2/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_oauth2_used_by_list", type: "[providers_oauth2_used_by_list_response]", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """ProxyProvider Viewset"""
  providersProxyList(
    applicationIsnull: Boolean @source(name: "application__isnull", type: "Boolean", subgraph: "Authentik")
    authorizationFlowSlugIexact: String @source(name: "authorization_flow__slug__iexact", type: "String", subgraph: "Authentik")
    basicAuthEnabledIexact: Boolean @source(name: "basic_auth_enabled__iexact", type: "Boolean", subgraph: "Authentik")
    basicAuthPasswordAttributeIexact: String @source(name: "basic_auth_password_attribute__iexact", type: "String", subgraph: "Authentik")
    basicAuthUserAttributeIexact: String @source(name: "basic_auth_user_attribute__iexact", type: "String", subgraph: "Authentik")
    certificateKpUuidIexact: UUID @source(name: "certificate__kp_uuid__iexact", type: "UUID", subgraph: "Authentik")
    certificateNameIexact: String @source(name: "certificate__name__iexact", type: "String", subgraph: "Authentik")
    cookieDomainIexact: String @source(name: "cookie_domain__iexact", type: "String", subgraph: "Authentik")
    externalHostIexact: String @source(name: "external_host__iexact", type: "String", subgraph: "Authentik")
    internalHostIexact: String @source(name: "internal_host__iexact", type: "String", subgraph: "Authentik")
    internalHostSslValidationIexact: Boolean @source(name: "internal_host_ssl_validation__iexact", type: "Boolean", subgraph: "Authentik")
    modeIexact: String @source(name: "mode__iexact", type: "String", subgraph: "Authentik")
    nameIexact: String @source(name: "name__iexact", type: "String", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    propertyMappingsIexact: [UUID] @source(name: "property_mappings__iexact", type: "[UUID]", subgraph: "Authentik")
    """A search term."""
    search: String
    skipPathRegexIexact: String @source(name: "skip_path_regex__iexact", type: "String", subgraph: "Authentik")
  ): ProvidersProxyListResponse @httpOperation(subgraph: "Authentik", path: "/providers/proxy/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"application__isnull\":\"application__isnull\",\"authorization_flow__slug__iexact\":\"authorization_flow__slug__iexact\",\"basic_auth_enabled__iexact\":\"basic_auth_enabled__iexact\",\"basic_auth_password_attribute__iexact\":\"basic_auth_password_attribute__iexact\",\"basic_auth_user_attribute__iexact\":\"basic_auth_user_attribute__iexact\",\"certificate__kp_uuid__iexact\":\"certificate__kp_uuid__iexact\",\"certificate__name__iexact\":\"certificate__name__iexact\",\"cookie_domain__iexact\":\"cookie_domain__iexact\",\"external_host__iexact\":\"external_host__iexact\",\"internal_host__iexact\":\"internal_host__iexact\",\"internal_host_ssl_validation__iexact\":\"internal_host_ssl_validation__iexact\",\"mode__iexact\":\"mode__iexact\",\"name__iexact\":\"name__iexact\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"property_mappings__iexact\":\"property_mappings__iexact\",\"search\":\"search\",\"skip_path_regex__iexact\":\"skip_path_regex__iexact\"}", queryStringOptionsByParam: "{\"property_mappings__iexact\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "providers_proxy_list", type: "providers_proxy_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """ProxyProvider Viewset"""
  providersProxyRetrieve(
    """A unique integer value identifying this Proxy Provider."""
    id: Int!
  ): ProvidersProxyRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/providers/proxy/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_proxy_retrieve", type: "providers_proxy_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  providersProxyUsedByList(
    """A unique integer value identifying this Proxy Provider."""
    id: Int!
  ): [ProvidersProxyUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/providers/proxy/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_proxy_used_by_list", type: "[providers_proxy_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RACProvider Viewset"""
  providersRacList(
    applicationIsnull: Boolean @source(name: "application__isnull", type: "Boolean", subgraph: "Authentik")
    nameIexact: String @source(name: "name__iexact", type: "String", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): ProvidersRacListResponse @httpOperation(subgraph: "Authentik", path: "/providers/rac/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"application__isnull\":\"application__isnull\",\"name__iexact\":\"name__iexact\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "providers_rac_list", type: "providers_rac_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RACProvider Viewset"""
  providersRacRetrieve(
    """A unique integer value identifying this RAC Provider."""
    id: Int!
  ): ProvidersRacRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/providers/rac/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_rac_retrieve", type: "providers_rac_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  providersRacUsedByList(
    """A unique integer value identifying this RAC Provider."""
    id: Int!
  ): [ProvidersRacUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/providers/rac/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_rac_used_by_list", type: "[providers_rac_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RadiusProvider Viewset"""
  providersRadiusList(
    applicationIsnull: Boolean @source(name: "application__isnull", type: "Boolean", subgraph: "Authentik")
    authorizationFlowSlugIexact: String @source(name: "authorization_flow__slug__iexact", type: "String", subgraph: "Authentik")
    clientNetworksIexact: String @source(name: "client_networks__iexact", type: "String", subgraph: "Authentik")
    nameIexact: String @source(name: "name__iexact", type: "String", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): ProvidersRadiusListResponse @httpOperation(subgraph: "Authentik", path: "/providers/radius/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"application__isnull\":\"application__isnull\",\"authorization_flow__slug__iexact\":\"authorization_flow__slug__iexact\",\"client_networks__iexact\":\"client_networks__iexact\",\"name__iexact\":\"name__iexact\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "providers_radius_list", type: "providers_radius_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RadiusProvider Viewset"""
  providersRadiusRetrieve(
    """A unique integer value identifying this Radius Provider."""
    id: Int!
  ): ProvidersRadiusRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/providers/radius/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_radius_retrieve", type: "providers_radius_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  providersRadiusUsedByList(
    """A unique integer value identifying this Radius Provider."""
    id: Int!
  ): [ProvidersRadiusUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/providers/radius/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_radius_used_by_list", type: "[providers_radius_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SAMLProvider Viewset"""
  providersSamlList(
    acsUrl: String @source(name: "acs_url", type: "String", subgraph: "Authentik")
    assertionValidNotBefore: String @source(name: "assertion_valid_not_before", type: "String", subgraph: "Authentik")
    assertionValidNotOnOrAfter: String @source(name: "assertion_valid_not_on_or_after", type: "String", subgraph: "Authentik")
    audience: String
    authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
    authorizationFlow: UUID @source(name: "authorization_flow", type: "UUID", subgraph: "Authentik")
    backchannelApplication: UUID @source(name: "backchannel_application", type: "UUID", subgraph: "Authentik")
    defaultRelayState: String @source(name: "default_relay_state", type: "String", subgraph: "Authentik")
    digestAlgorithm: QueryInputProvidersSamlListDigestAlgorithm @source(name: "digest_algorithm", type: "queryInput_providers_saml_list_digest_algorithm", subgraph: "Authentik")
    encryptionKp: UUID @source(name: "encryption_kp", type: "UUID", subgraph: "Authentik")
    invalidationFlow: UUID @source(name: "invalidation_flow", type: "UUID", subgraph: "Authentik")
    isBackchannel: Boolean @source(name: "is_backchannel", type: "Boolean", subgraph: "Authentik")
    issuer: String
    name: String
    nameIdMapping: UUID @source(name: "name_id_mapping", type: "UUID", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
    """A search term."""
    search: String
    sessionValidNotOnOrAfter: String @source(name: "session_valid_not_on_or_after", type: "String", subgraph: "Authentik")
    signAssertion: Boolean @source(name: "sign_assertion", type: "Boolean", subgraph: "Authentik")
    signResponse: Boolean @source(name: "sign_response", type: "Boolean", subgraph: "Authentik")
    signatureAlgorithm: QueryInputProvidersSamlListSignatureAlgorithm @source(name: "signature_algorithm", type: "queryInput_providers_saml_list_signature_algorithm", subgraph: "Authentik")
    signingKp: UUID @source(name: "signing_kp", type: "UUID", subgraph: "Authentik")
    spBinding: QueryInputProvidersSamlListSpBinding @source(name: "sp_binding", type: "queryInput_providers_saml_list_sp_binding", subgraph: "Authentik")
    verificationKp: UUID @source(name: "verification_kp", type: "UUID", subgraph: "Authentik")
  ): ProvidersSamlListResponse @httpOperation(subgraph: "Authentik", path: "/providers/saml/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"acs_url\":\"acs_url\",\"assertion_valid_not_before\":\"assertion_valid_not_before\",\"assertion_valid_not_on_or_after\":\"assertion_valid_not_on_or_after\",\"audience\":\"audience\",\"authentication_flow\":\"authentication_flow\",\"authorization_flow\":\"authorization_flow\",\"backchannel_application\":\"backchannel_application\",\"default_relay_state\":\"default_relay_state\",\"digest_algorithm\":\"digest_algorithm\",\"encryption_kp\":\"encryption_kp\",\"invalidation_flow\":\"invalidation_flow\",\"is_backchannel\":\"is_backchannel\",\"issuer\":\"issuer\",\"name\":\"name\",\"name_id_mapping\":\"name_id_mapping\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"property_mappings\":\"property_mappings\",\"search\":\"search\",\"session_valid_not_on_or_after\":\"session_valid_not_on_or_after\",\"sign_assertion\":\"sign_assertion\",\"sign_response\":\"sign_response\",\"signature_algorithm\":\"signature_algorithm\",\"signing_kp\":\"signing_kp\",\"sp_binding\":\"sp_binding\",\"verification_kp\":\"verification_kp\"}", queryStringOptionsByParam: "{\"property_mappings\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "providers_saml_list", type: "providers_saml_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SAMLProvider Viewset"""
  providersSamlRetrieve(
    """A unique integer value identifying this SAML Provider."""
    id: Int!
  ): ProvidersSamlRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/providers/saml/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_saml_retrieve", type: "providers_saml_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Return metadata as XML string"""
  providersSamlMetadataRetrieve(
    """A unique integer value identifying this SAML Provider."""
    id: Int!
    download: Boolean
    forceBinding: QueryInputProvidersSamlMetadataRetrieveForceBinding @source(name: "force_binding", type: "queryInput_providers_saml_metadata_retrieve_force_binding", subgraph: "Authentik")
  ): ProvidersSamlMetadataRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/providers/saml/{args.id}/metadata/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"download\":\"download\",\"force_binding\":\"force_binding\"}") @source(name: "providers_saml_metadata_retrieve", type: "providers_saml_metadata_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Preview user data for provider"""
  providersSamlPreviewUserRetrieve(
    """A unique integer value identifying this SAML Provider."""
    id: Int!
    forUser: Int @source(name: "for_user", type: "Int", subgraph: "Authentik")
  ): ProvidersSamlPreviewUserRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/providers/saml/{args.id}/preview_user/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"for_user\":\"for_user\"}") @source(name: "providers_saml_preview_user_retrieve", type: "providers_saml_preview_user_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  providersSamlUsedByList(
    """A unique integer value identifying this SAML Provider."""
    id: Int!
  ): [ProvidersSamlUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/providers/saml/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_saml_used_by_list", type: "[providers_saml_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMProvider Viewset"""
  providersScimList(
    excludeUsersServiceAccount: Boolean @source(name: "exclude_users_service_account", type: "Boolean", subgraph: "Authentik")
    filterGroup: UUID @source(name: "filter_group", type: "UUID", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    url: String
  ): ProvidersScimListResponse @httpOperation(subgraph: "Authentik", path: "/providers/scim/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"exclude_users_service_account\":\"exclude_users_service_account\",\"filter_group\":\"filter_group\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"url\":\"url\"}") @source(name: "providers_scim_list", type: "providers_scim_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMProvider Viewset"""
  providersScimRetrieve(
    """A unique integer value identifying this SCIM Provider."""
    id: Int!
  ): ProvidersScimRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/providers/scim/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_scim_retrieve", type: "providers_scim_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get provider's sync status"""
  providersScimSyncStatusRetrieve(
    """A unique integer value identifying this SCIM Provider."""
    id: Int!
  ): ProvidersScimSyncStatusRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/providers/scim/{args.id}/sync/status/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_scim_sync_status_retrieve", type: "providers_scim_sync_status_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  providersScimUsedByList(
    """A unique integer value identifying this SCIM Provider."""
    id: Int!
  ): [ProvidersScimUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/providers/scim/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_scim_used_by_list", type: "[providers_scim_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMProviderGroup Viewset"""
  providersScimGroupsList(
    groupGroupUuid: UUID @source(name: "group__group_uuid", type: "UUID", subgraph: "Authentik")
    groupName: String @source(name: "group__name", type: "String", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    providerId: Int @source(name: "provider__id", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): ProvidersScimGroupsListResponse @httpOperation(subgraph: "Authentik", path: "/providers/scim_groups/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"group__group_uuid\":\"group__group_uuid\",\"group__name\":\"group__name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"provider__id\":\"provider__id\",\"search\":\"search\"}") @source(name: "providers_scim_groups_list", type: "providers_scim_groups_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMProviderGroup Viewset"""
  providersScimGroupsRetrieve(
    """A UUID string identifying this scim provider group."""
    id: UUID!
  ): ProvidersScimGroupsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/providers/scim_groups/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_scim_groups_retrieve", type: "providers_scim_groups_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  providersScimGroupsUsedByList(
    """A UUID string identifying this scim provider group."""
    id: UUID!
  ): [ProvidersScimGroupsUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/providers/scim_groups/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_scim_groups_used_by_list", type: "[providers_scim_groups_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMProviderUser Viewset"""
  providersScimUsersList(
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    providerId: Int @source(name: "provider__id", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    userId: Int @source(name: "user__id", type: "Int", subgraph: "Authentik")
    userUsername: String @source(name: "user__username", type: "String", subgraph: "Authentik")
  ): ProvidersScimUsersListResponse @httpOperation(subgraph: "Authentik", path: "/providers/scim_users/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"provider__id\":\"provider__id\",\"search\":\"search\",\"user__id\":\"user__id\",\"user__username\":\"user__username\"}") @source(name: "providers_scim_users_list", type: "providers_scim_users_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMProviderUser Viewset"""
  providersScimUsersRetrieve(
    """A UUID string identifying this scim provider user."""
    id: UUID!
  ): ProvidersScimUsersRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/providers/scim_users/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_scim_users_retrieve", type: "providers_scim_users_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  providersScimUsersUsedByList(
    """A UUID string identifying this scim provider user."""
    id: UUID!
  ): [ProvidersScimUsersUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/providers/scim_users/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "providers_scim_users_used_by_list", type: "[providers_scim_users_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """ConnectionToken Viewset"""
  racConnectionTokensList(
    endpoint: UUID
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    provider: Int
    """A search term."""
    search: String
    sessionUser: Int @source(name: "session__user", type: "Int", subgraph: "Authentik")
  ): RacConnectionTokensListResponse @httpOperation(subgraph: "Authentik", path: "/rac/connection_tokens/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"endpoint\":\"endpoint\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"provider\":\"provider\",\"search\":\"search\",\"session__user\":\"session__user\"}") @source(name: "rac_connection_tokens_list", type: "rac_connection_tokens_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """ConnectionToken Viewset"""
  racConnectionTokensRetrieve(
    """A UUID string identifying this RAC Connection token."""
    connectionTokenUuid: UUID! @source(name: "connection_token_uuid", type: "UUID!", subgraph: "Authentik")
  ): RacConnectionTokensRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/rac/connection_tokens/{args.connection_token_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "rac_connection_tokens_retrieve", type: "rac_connection_tokens_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  racConnectionTokensUsedByList(
    """A UUID string identifying this RAC Connection token."""
    connectionTokenUuid: UUID! @source(name: "connection_token_uuid", type: "UUID!", subgraph: "Authentik")
  ): [RacConnectionTokensUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/rac/connection_tokens/{args.connection_token_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "rac_connection_tokens_used_by_list", type: "[rac_connection_tokens_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """List accessible endpoints"""
  racEndpointsList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    provider: Int
    search: String
    superuserFullList: Boolean @source(name: "superuser_full_list", type: "Boolean", subgraph: "Authentik")
  ): RacEndpointsListResponse @httpOperation(subgraph: "Authentik", path: "/rac/endpoints/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"provider\":\"provider\",\"search\":\"search\",\"superuser_full_list\":\"superuser_full_list\"}") @source(name: "rac_endpoints_list", type: "rac_endpoints_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Endpoint Viewset"""
  racEndpointsRetrieve(
    """A UUID string identifying this RAC Endpoint."""
    pbmUuid: UUID! @source(name: "pbm_uuid", type: "UUID!", subgraph: "Authentik")
  ): RacEndpointsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/rac/endpoints/{args.pbm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "rac_endpoints_retrieve", type: "rac_endpoints_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  racEndpointsUsedByList(
    """A UUID string identifying this RAC Endpoint."""
    pbmUuid: UUID! @source(name: "pbm_uuid", type: "UUID!", subgraph: "Authentik")
  ): [RacEndpointsUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/rac/endpoints/{args.pbm_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "rac_endpoints_used_by_list", type: "[rac_endpoints_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Read-only list of all permissions, filterable by model and app"""
  rbacPermissionsList(
    codename: String
    contentTypeAppLabel: String @source(name: "content_type__app_label", type: "String", subgraph: "Authentik")
    contentTypeModel: String @source(name: "content_type__model", type: "String", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    role: String
    """A search term."""
    search: String
    user: Int
  ): RbacPermissionsListResponse @httpOperation(subgraph: "Authentik", path: "/rbac/permissions/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"codename\":\"codename\",\"content_type__app_label\":\"content_type__app_label\",\"content_type__model\":\"content_type__model\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"role\":\"role\",\"search\":\"search\",\"user\":\"user\"}") @source(name: "rbac_permissions_list", type: "rbac_permissions_list_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Read-only list of all permissions, filterable by model and app"""
  rbacPermissionsRetrieve(
    """A unique integer value identifying this permission."""
    id: Int!
  ): RbacPermissionsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/rbac/permissions/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "rbac_permissions_retrieve", type: "rbac_permissions_retrieve_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get assigned object permissions for a single object"""
  rbacPermissionsAssignedByRolesList(
    model: QueryInputRbacPermissionsAssignedByRolesListModel! @source(name: "model", type: "queryInput_rbac_permissions_assigned_by_roles_list_model!", subgraph: "Authentik")
    objectPk: String @source(name: "object_pk", type: "String", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): RbacPermissionsAssignedByRolesListResponse @httpOperation(subgraph: "Authentik", path: "/rbac/permissions/assigned_by_roles/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"model\":\"model\",\"object_pk\":\"object_pk\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "rbac_permissions_assigned_by_roles_list", type: "rbac_permissions_assigned_by_roles_list_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get assigned object permissions for a single object"""
  rbacPermissionsAssignedByUsersList(
    model: QueryInputRbacPermissionsAssignedByUsersListModel! @source(name: "model", type: "queryInput_rbac_permissions_assigned_by_users_list_model!", subgraph: "Authentik")
    objectPk: String @source(name: "object_pk", type: "String", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): RbacPermissionsAssignedByUsersListResponse @httpOperation(subgraph: "Authentik", path: "/rbac/permissions/assigned_by_users/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"model\":\"model\",\"object_pk\":\"object_pk\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "rbac_permissions_assigned_by_users_list", type: "rbac_permissions_assigned_by_users_list_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get a role's assigned object permissions"""
  rbacPermissionsRolesList(
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    uuid: UUID
  ): RbacPermissionsRolesListResponse @httpOperation(subgraph: "Authentik", path: "/rbac/permissions/roles/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"uuid\":\"uuid\"}") @source(name: "rbac_permissions_roles_list", type: "rbac_permissions_roles_list_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get a role's assigned object permissions"""
  rbacPermissionsRolesRetrieve(
    """A unique integer value identifying this group object permission."""
    id: Int!
  ): RbacPermissionsRolesRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/rbac/permissions/roles/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "rbac_permissions_roles_retrieve", type: "rbac_permissions_roles_retrieve_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get a users's assigned object permissions"""
  rbacPermissionsUsersList(
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    userId: Int @source(name: "user_id", type: "Int", subgraph: "Authentik")
  ): RbacPermissionsUsersListResponse @httpOperation(subgraph: "Authentik", path: "/rbac/permissions/users/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"user_id\":\"user_id\"}") @source(name: "rbac_permissions_users_list", type: "rbac_permissions_users_list_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get a users's assigned object permissions"""
  rbacPermissionsUsersRetrieve(
    """A unique integer value identifying this user object permission."""
    id: Int!
  ): RbacPermissionsUsersRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/rbac/permissions/users/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "rbac_permissions_users_retrieve", type: "rbac_permissions_users_retrieve_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Role viewset"""
  rbacRolesList(
    groupName: String @source(name: "group__name", type: "String", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): RbacRolesListResponse @httpOperation(subgraph: "Authentik", path: "/rbac/roles/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"group__name\":\"group__name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "rbac_roles_list", type: "rbac_roles_list_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Role viewset"""
  rbacRolesRetrieve(
    """A UUID string identifying this Role."""
    uuid: UUID!
  ): RbacRolesRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/rbac/roles/{args.uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "rbac_roles_retrieve", type: "rbac_roles_retrieve_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  rbacRolesUsedByList(
    """A UUID string identifying this Role."""
    uuid: UUID!
  ): [RbacRolesUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/rbac/roles/{args.uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "rbac_roles_used_by_list", type: "[rbac_roles_used_by_list_response]", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Retrieve public configuration options"""
  rootConfigRetrieve: RootConfigRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/root/config/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "root_config_retrieve", type: "root_config_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """
  OpenApi3 schema for this API. Format can be selected via content negotiation.
  
  - YAML: application/vnd.oai.openapi
  - JSON: application/vnd.oai.openapi+json
  """
  schemaRetrieve(format: QueryInputSchemaRetrieveFormat @source(name: "format", type: "queryInput_schema_retrieve_format", subgraph: "Authentik"), lang: QueryInputSchemaRetrieveLang @source(name: "lang", type: "queryInput_schema_retrieve_lang", subgraph: "Authentik")): SchemaRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/schema/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"format\":\"format\",\"lang\":\"lang\"}") @source(name: "schema_retrieve", type: "schema_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesAllList(
    managed: String
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    slug: String
  ): SourcesAllListResponse @httpOperation(subgraph: "Authentik", path: "/sources/all/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"managed\":\"managed\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"slug\":\"slug\"}") @source(name: "sources_all_list", type: "sources_all_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesAllRetrieve(
    """Internal source name, used in URLs."""
    slug: String!
  ): SourcesAllRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/sources/all/{args.slug}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_all_retrieve", type: "sources_all_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  sourcesAllUsedByList(
    """Internal source name, used in URLs."""
    slug: String!
  ): [SourcesAllUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/sources/all/{args.slug}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_all_used_by_list", type: "[sources_all_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get all creatable types"""
  sourcesAllTypesList: [SourcesAllTypesListResponse] @httpOperation(subgraph: "Authentik", path: "/sources/all/types/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_all_types_list", type: "[sources_all_types_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get all sources the user can configure"""
  sourcesAllUserSettingsList: [SourcesAllUserSettingsListResponse] @httpOperation(subgraph: "Authentik", path: "/sources/all/user_settings/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_all_user_settings_list", type: "[sources_all_user_settings_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Group-source connection Viewset"""
  sourcesGroupConnectionsKerberosList(
    group: UUID
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    sourceSlug: String @source(name: "source__slug", type: "String", subgraph: "Authentik")
  ): SourcesGroupConnectionsKerberosListResponse @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/kerberos/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"group\":\"group\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"source__slug\":\"source__slug\"}") @source(name: "sources_group_connections_kerberos_list", type: "sources_group_connections_kerberos_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Group-source connection Viewset"""
  sourcesGroupConnectionsKerberosRetrieve(
    """
    A unique integer value identifying this Group Kerberos Source Connection.
    """
    id: Int!
  ): SourcesGroupConnectionsKerberosRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/kerberos/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_group_connections_kerberos_retrieve", type: "sources_group_connections_kerberos_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  sourcesGroupConnectionsKerberosUsedByList(
    """
    A unique integer value identifying this Group Kerberos Source Connection.
    """
    id: Int!
  ): [SourcesGroupConnectionsKerberosUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/kerberos/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_group_connections_kerberos_used_by_list", type: "[sources_group_connections_kerberos_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Group-source connection Viewset"""
  sourcesGroupConnectionsOauthList(
    group: UUID
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    sourceSlug: String @source(name: "source__slug", type: "String", subgraph: "Authentik")
  ): SourcesGroupConnectionsOauthListResponse @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/oauth/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"group\":\"group\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"source__slug\":\"source__slug\"}") @source(name: "sources_group_connections_oauth_list", type: "sources_group_connections_oauth_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Group-source connection Viewset"""
  sourcesGroupConnectionsOauthRetrieve(
    """A unique integer value identifying this Group OAuth Source Connection."""
    id: Int!
  ): SourcesGroupConnectionsOauthRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/oauth/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_group_connections_oauth_retrieve", type: "sources_group_connections_oauth_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  sourcesGroupConnectionsOauthUsedByList(
    """A unique integer value identifying this Group OAuth Source Connection."""
    id: Int!
  ): [SourcesGroupConnectionsOauthUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/oauth/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_group_connections_oauth_used_by_list", type: "[sources_group_connections_oauth_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Group-source connection Viewset"""
  sourcesGroupConnectionsPlexList(
    group: UUID
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    sourceSlug: String @source(name: "source__slug", type: "String", subgraph: "Authentik")
  ): SourcesGroupConnectionsPlexListResponse @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/plex/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"group\":\"group\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"source__slug\":\"source__slug\"}") @source(name: "sources_group_connections_plex_list", type: "sources_group_connections_plex_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Group-source connection Viewset"""
  sourcesGroupConnectionsPlexRetrieve(
    """A unique integer value identifying this Group Plex Source Connection."""
    id: Int!
  ): SourcesGroupConnectionsPlexRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/plex/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_group_connections_plex_retrieve", type: "sources_group_connections_plex_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  sourcesGroupConnectionsPlexUsedByList(
    """A unique integer value identifying this Group Plex Source Connection."""
    id: Int!
  ): [SourcesGroupConnectionsPlexUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/plex/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_group_connections_plex_used_by_list", type: "[sources_group_connections_plex_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Group-source connection Viewset"""
  sourcesGroupConnectionsSamlList(
    group: UUID
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    sourceSlug: String @source(name: "source__slug", type: "String", subgraph: "Authentik")
  ): SourcesGroupConnectionsSamlListResponse @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/saml/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"group\":\"group\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"source__slug\":\"source__slug\"}") @source(name: "sources_group_connections_saml_list", type: "sources_group_connections_saml_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Group-source connection Viewset"""
  sourcesGroupConnectionsSamlRetrieve(
    """A unique integer value identifying this Group SAML Source Connection."""
    id: Int!
  ): SourcesGroupConnectionsSamlRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/saml/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_group_connections_saml_retrieve", type: "sources_group_connections_saml_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  sourcesGroupConnectionsSamlUsedByList(
    """A unique integer value identifying this Group SAML Source Connection."""
    id: Int!
  ): [SourcesGroupConnectionsSamlUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/saml/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_group_connections_saml_used_by_list", type: "[sources_group_connections_saml_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Kerberos Source Viewset"""
  sourcesKerberosList(
    enabled: Boolean
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    passwordLoginUpdateInternalPassword: Boolean @source(name: "password_login_update_internal_password", type: "Boolean", subgraph: "Authentik")
    realm: String
    """A search term."""
    search: String
    slug: String
    spnegoServerName: String @source(name: "spnego_server_name", type: "String", subgraph: "Authentik")
    syncPrincipal: String @source(name: "sync_principal", type: "String", subgraph: "Authentik")
    syncUsers: Boolean @source(name: "sync_users", type: "Boolean", subgraph: "Authentik")
    syncUsersPassword: Boolean @source(name: "sync_users_password", type: "Boolean", subgraph: "Authentik")
  ): SourcesKerberosListResponse @httpOperation(subgraph: "Authentik", path: "/sources/kerberos/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"enabled\":\"enabled\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"password_login_update_internal_password\":\"password_login_update_internal_password\",\"realm\":\"realm\",\"search\":\"search\",\"slug\":\"slug\",\"spnego_server_name\":\"spnego_server_name\",\"sync_principal\":\"sync_principal\",\"sync_users\":\"sync_users\",\"sync_users_password\":\"sync_users_password\"}") @source(name: "sources_kerberos_list", type: "sources_kerberos_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Kerberos Source Viewset"""
  sourcesKerberosRetrieve(
    """Internal source name, used in URLs."""
    slug: String!
  ): SourcesKerberosRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/sources/kerberos/{args.slug}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_kerberos_retrieve", type: "sources_kerberos_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get source's sync status"""
  sourcesKerberosSyncStatusRetrieve(
    """Internal source name, used in URLs."""
    slug: String!
  ): SourcesKerberosSyncStatusRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/sources/kerberos/{args.slug}/sync/status/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_kerberos_sync_status_retrieve", type: "sources_kerberos_sync_status_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  sourcesKerberosUsedByList(
    """Internal source name, used in URLs."""
    slug: String!
  ): [SourcesKerberosUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/sources/kerberos/{args.slug}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_kerberos_used_by_list", type: "[sources_kerberos_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """LDAP Source Viewset"""
  sourcesLdapList(
    additionalGroupDn: String @source(name: "additional_group_dn", type: "String", subgraph: "Authentik")
    additionalUserDn: String @source(name: "additional_user_dn", type: "String", subgraph: "Authentik")
    baseDn: String @source(name: "base_dn", type: "String", subgraph: "Authentik")
    bindCn: String @source(name: "bind_cn", type: "String", subgraph: "Authentik")
    clientCertificate: UUID @source(name: "client_certificate", type: "UUID", subgraph: "Authentik")
    enabled: Boolean
    groupMembershipField: String @source(name: "group_membership_field", type: "String", subgraph: "Authentik")
    groupObjectFilter: String @source(name: "group_object_filter", type: "String", subgraph: "Authentik")
    groupPropertyMappings: [UUID] @source(name: "group_property_mappings", type: "[UUID]", subgraph: "Authentik")
    name: String
    objectUniquenessField: String @source(name: "object_uniqueness_field", type: "String", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    passwordLoginUpdateInternalPassword: Boolean @source(name: "password_login_update_internal_password", type: "Boolean", subgraph: "Authentik")
    peerCertificate: UUID @source(name: "peer_certificate", type: "UUID", subgraph: "Authentik")
    """A search term."""
    search: String
    serverUri: String @source(name: "server_uri", type: "String", subgraph: "Authentik")
    slug: String
    sni: Boolean
    startTls: Boolean @source(name: "start_tls", type: "Boolean", subgraph: "Authentik")
    syncGroups: Boolean @source(name: "sync_groups", type: "Boolean", subgraph: "Authentik")
    syncParentGroup: UUID @source(name: "sync_parent_group", type: "UUID", subgraph: "Authentik")
    syncUsers: Boolean @source(name: "sync_users", type: "Boolean", subgraph: "Authentik")
    syncUsersPassword: Boolean @source(name: "sync_users_password", type: "Boolean", subgraph: "Authentik")
    userObjectFilter: String @source(name: "user_object_filter", type: "String", subgraph: "Authentik")
    userPropertyMappings: [UUID] @source(name: "user_property_mappings", type: "[UUID]", subgraph: "Authentik")
  ): SourcesLdapListResponse @httpOperation(subgraph: "Authentik", path: "/sources/ldap/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"additional_group_dn\":\"additional_group_dn\",\"additional_user_dn\":\"additional_user_dn\",\"base_dn\":\"base_dn\",\"bind_cn\":\"bind_cn\",\"client_certificate\":\"client_certificate\",\"enabled\":\"enabled\",\"group_membership_field\":\"group_membership_field\",\"group_object_filter\":\"group_object_filter\",\"group_property_mappings\":\"group_property_mappings\",\"name\":\"name\",\"object_uniqueness_field\":\"object_uniqueness_field\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"password_login_update_internal_password\":\"password_login_update_internal_password\",\"peer_certificate\":\"peer_certificate\",\"search\":\"search\",\"server_uri\":\"server_uri\",\"slug\":\"slug\",\"sni\":\"sni\",\"start_tls\":\"start_tls\",\"sync_groups\":\"sync_groups\",\"sync_parent_group\":\"sync_parent_group\",\"sync_users\":\"sync_users\",\"sync_users_password\":\"sync_users_password\",\"user_object_filter\":\"user_object_filter\",\"user_property_mappings\":\"user_property_mappings\"}", queryStringOptionsByParam: "{\"group_property_mappings\":{\"arrayFormat\":\"repeat\",\"destructObject\":true},\"user_property_mappings\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "sources_ldap_list", type: "sources_ldap_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """LDAP Source Viewset"""
  sourcesLdapRetrieve(
    """Internal source name, used in URLs."""
    slug: String!
  ): SourcesLdapRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/sources/ldap/{args.slug}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_ldap_retrieve", type: "sources_ldap_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get raw LDAP data to debug"""
  sourcesLdapDebugRetrieve(
    """Internal source name, used in URLs."""
    slug: String!
  ): SourcesLdapDebugRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/sources/ldap/{args.slug}/debug/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_ldap_debug_retrieve", type: "sources_ldap_debug_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get source's sync status"""
  sourcesLdapSyncStatusRetrieve(
    """Internal source name, used in URLs."""
    slug: String!
  ): SourcesLdapSyncStatusRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/sources/ldap/{args.slug}/sync/status/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_ldap_sync_status_retrieve", type: "sources_ldap_sync_status_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  sourcesLdapUsedByList(
    """Internal source name, used in URLs."""
    slug: String!
  ): [SourcesLdapUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/sources/ldap/{args.slug}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_ldap_used_by_list", type: "[sources_ldap_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesOauthList(
    accessTokenUrl: String @source(name: "access_token_url", type: "String", subgraph: "Authentik")
    additionalScopes: String @source(name: "additional_scopes", type: "String", subgraph: "Authentik")
    authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
    authorizationUrl: String @source(name: "authorization_url", type: "String", subgraph: "Authentik")
    consumerKey: String @source(name: "consumer_key", type: "String", subgraph: "Authentik")
    enabled: Boolean
    enrollmentFlow: UUID @source(name: "enrollment_flow", type: "UUID", subgraph: "Authentik")
    groupMatchingMode: QueryInputSourcesOauthListGroupMatchingMode @source(name: "group_matching_mode", type: "queryInput_sources_oauth_list_group_matching_mode", subgraph: "Authentik")
    """Only return sources with JWKS data"""
    hasJwks: Boolean @source(name: "has_jwks", type: "Boolean", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    policyEngineMode: QueryInputSourcesOauthListPolicyEngineMode @source(name: "policy_engine_mode", type: "queryInput_sources_oauth_list_policy_engine_mode", subgraph: "Authentik")
    profileUrl: String @source(name: "profile_url", type: "String", subgraph: "Authentik")
    providerType: String @source(name: "provider_type", type: "String", subgraph: "Authentik")
    requestTokenUrl: String @source(name: "request_token_url", type: "String", subgraph: "Authentik")
    """A search term."""
    search: String
    slug: String
    userMatchingMode: QueryInputSourcesOauthListUserMatchingMode @source(name: "user_matching_mode", type: "queryInput_sources_oauth_list_user_matching_mode", subgraph: "Authentik")
  ): SourcesOauthListResponse @httpOperation(subgraph: "Authentik", path: "/sources/oauth/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"access_token_url\":\"access_token_url\",\"additional_scopes\":\"additional_scopes\",\"authentication_flow\":\"authentication_flow\",\"authorization_url\":\"authorization_url\",\"consumer_key\":\"consumer_key\",\"enabled\":\"enabled\",\"enrollment_flow\":\"enrollment_flow\",\"group_matching_mode\":\"group_matching_mode\",\"has_jwks\":\"has_jwks\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"policy_engine_mode\":\"policy_engine_mode\",\"profile_url\":\"profile_url\",\"provider_type\":\"provider_type\",\"request_token_url\":\"request_token_url\",\"search\":\"search\",\"slug\":\"slug\",\"user_matching_mode\":\"user_matching_mode\"}") @source(name: "sources_oauth_list", type: "sources_oauth_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesOauthRetrieve(
    """Internal source name, used in URLs."""
    slug: String!
  ): SourcesOauthRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/sources/oauth/{args.slug}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_oauth_retrieve", type: "sources_oauth_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  sourcesOauthUsedByList(
    """Internal source name, used in URLs."""
    slug: String!
  ): [SourcesOauthUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/sources/oauth/{args.slug}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_oauth_used_by_list", type: "[sources_oauth_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """
  Get all creatable source types. If ?name is set, only returns the type for <name>.
  If <name> isn't found, returns the default type.
  """
  sourcesOauthSourceTypesList(name: String): [SourcesOauthSourceTypesListResponse] @httpOperation(subgraph: "Authentik", path: "/sources/oauth/source_types/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\"}") @source(name: "sources_oauth_source_types_list", type: "[sources_oauth_source_types_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Plex source Viewset"""
  sourcesPlexList(
    allowFriends: Boolean @source(name: "allow_friends", type: "Boolean", subgraph: "Authentik")
    authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
    clientId: String @source(name: "client_id", type: "String", subgraph: "Authentik")
    enabled: Boolean
    enrollmentFlow: UUID @source(name: "enrollment_flow", type: "UUID", subgraph: "Authentik")
    groupMatchingMode: QueryInputSourcesPlexListGroupMatchingMode @source(name: "group_matching_mode", type: "queryInput_sources_plex_list_group_matching_mode", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    policyEngineMode: QueryInputSourcesPlexListPolicyEngineMode @source(name: "policy_engine_mode", type: "queryInput_sources_plex_list_policy_engine_mode", subgraph: "Authentik")
    """A search term."""
    search: String
    slug: String
    userMatchingMode: QueryInputSourcesPlexListUserMatchingMode @source(name: "user_matching_mode", type: "queryInput_sources_plex_list_user_matching_mode", subgraph: "Authentik")
  ): SourcesPlexListResponse @httpOperation(subgraph: "Authentik", path: "/sources/plex/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"allow_friends\":\"allow_friends\",\"authentication_flow\":\"authentication_flow\",\"client_id\":\"client_id\",\"enabled\":\"enabled\",\"enrollment_flow\":\"enrollment_flow\",\"group_matching_mode\":\"group_matching_mode\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"policy_engine_mode\":\"policy_engine_mode\",\"search\":\"search\",\"slug\":\"slug\",\"user_matching_mode\":\"user_matching_mode\"}") @source(name: "sources_plex_list", type: "sources_plex_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Plex source Viewset"""
  sourcesPlexRetrieve(
    """Internal source name, used in URLs."""
    slug: String!
  ): SourcesPlexRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/sources/plex/{args.slug}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_plex_retrieve", type: "sources_plex_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  sourcesPlexUsedByList(
    """Internal source name, used in URLs."""
    slug: String!
  ): [SourcesPlexUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/sources/plex/{args.slug}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_plex_used_by_list", type: "[sources_plex_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SAMLSource Viewset"""
  sourcesSamlList(
    allowIdpInitiated: Boolean @source(name: "allow_idp_initiated", type: "Boolean", subgraph: "Authentik")
    authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
    bindingType: QueryInputSourcesSamlListBindingType @source(name: "binding_type", type: "queryInput_sources_saml_list_binding_type", subgraph: "Authentik")
    digestAlgorithm: QueryInputSourcesSamlListDigestAlgorithm @source(name: "digest_algorithm", type: "queryInput_sources_saml_list_digest_algorithm", subgraph: "Authentik")
    enabled: Boolean
    enrollmentFlow: UUID @source(name: "enrollment_flow", type: "UUID", subgraph: "Authentik")
    issuer: String
    managed: String
    name: String
    nameIdPolicy: QueryInputSourcesSamlListNameIdPolicy @source(name: "name_id_policy", type: "queryInput_sources_saml_list_name_id_policy", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    policyEngineMode: QueryInputSourcesSamlListPolicyEngineMode @source(name: "policy_engine_mode", type: "queryInput_sources_saml_list_policy_engine_mode", subgraph: "Authentik")
    preAuthenticationFlow: UUID @source(name: "pre_authentication_flow", type: "UUID", subgraph: "Authentik")
    """A search term."""
    search: String
    signatureAlgorithm: QueryInputSourcesSamlListSignatureAlgorithm @source(name: "signature_algorithm", type: "queryInput_sources_saml_list_signature_algorithm", subgraph: "Authentik")
    signingKp: UUID @source(name: "signing_kp", type: "UUID", subgraph: "Authentik")
    sloUrl: String @source(name: "slo_url", type: "String", subgraph: "Authentik")
    slug: String
    ssoUrl: String @source(name: "sso_url", type: "String", subgraph: "Authentik")
    temporaryUserDeleteAfter: String @source(name: "temporary_user_delete_after", type: "String", subgraph: "Authentik")
    userMatchingMode: QueryInputSourcesSamlListUserMatchingMode @source(name: "user_matching_mode", type: "queryInput_sources_saml_list_user_matching_mode", subgraph: "Authentik")
    verificationKp: UUID @source(name: "verification_kp", type: "UUID", subgraph: "Authentik")
  ): SourcesSamlListResponse @httpOperation(subgraph: "Authentik", path: "/sources/saml/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"allow_idp_initiated\":\"allow_idp_initiated\",\"authentication_flow\":\"authentication_flow\",\"binding_type\":\"binding_type\",\"digest_algorithm\":\"digest_algorithm\",\"enabled\":\"enabled\",\"enrollment_flow\":\"enrollment_flow\",\"issuer\":\"issuer\",\"managed\":\"managed\",\"name\":\"name\",\"name_id_policy\":\"name_id_policy\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"policy_engine_mode\":\"policy_engine_mode\",\"pre_authentication_flow\":\"pre_authentication_flow\",\"search\":\"search\",\"signature_algorithm\":\"signature_algorithm\",\"signing_kp\":\"signing_kp\",\"slo_url\":\"slo_url\",\"slug\":\"slug\",\"sso_url\":\"sso_url\",\"temporary_user_delete_after\":\"temporary_user_delete_after\",\"user_matching_mode\":\"user_matching_mode\",\"verification_kp\":\"verification_kp\"}") @source(name: "sources_saml_list", type: "sources_saml_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SAMLSource Viewset"""
  sourcesSamlRetrieve(
    """Internal source name, used in URLs."""
    slug: String!
  ): SourcesSamlRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/sources/saml/{args.slug}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_saml_retrieve", type: "sources_saml_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Return metadata as XML string"""
  sourcesSamlMetadataRetrieve(
    """Internal source name, used in URLs."""
    slug: String!
  ): SourcesSamlMetadataRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/sources/saml/{args.slug}/metadata/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_saml_metadata_retrieve", type: "sources_saml_metadata_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  sourcesSamlUsedByList(
    """Internal source name, used in URLs."""
    slug: String!
  ): [SourcesSamlUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/sources/saml/{args.slug}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_saml_used_by_list", type: "[sources_saml_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMSource Viewset"""
  sourcesScimList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    slug: String
  ): SourcesScimListResponse @httpOperation(subgraph: "Authentik", path: "/sources/scim/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"slug\":\"slug\"}") @source(name: "sources_scim_list", type: "sources_scim_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMSource Viewset"""
  sourcesScimRetrieve(
    """Internal source name, used in URLs."""
    slug: String!
  ): SourcesScimRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/sources/scim/{args.slug}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_scim_retrieve", type: "sources_scim_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  sourcesScimUsedByList(
    """Internal source name, used in URLs."""
    slug: String!
  ): [SourcesScimUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/sources/scim/{args.slug}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_scim_used_by_list", type: "[sources_scim_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMSourceGroup Viewset"""
  sourcesScimGroupsList(
    groupGroupUuid: UUID @source(name: "group__group_uuid", type: "UUID", subgraph: "Authentik")
    groupName: String @source(name: "group__name", type: "String", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    sourceSlug: String @source(name: "source__slug", type: "String", subgraph: "Authentik")
  ): SourcesScimGroupsListResponse @httpOperation(subgraph: "Authentik", path: "/sources/scim_groups/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"group__group_uuid\":\"group__group_uuid\",\"group__name\":\"group__name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"source__slug\":\"source__slug\"}") @source(name: "sources_scim_groups_list", type: "sources_scim_groups_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMSourceGroup Viewset"""
  sourcesScimGroupsRetrieve(
    """A unique value identifying this scim source group."""
    id: String!
  ): SourcesScimGroupsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/sources/scim_groups/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_scim_groups_retrieve", type: "sources_scim_groups_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  sourcesScimGroupsUsedByList(
    """A unique value identifying this scim source group."""
    id: String!
  ): [SourcesScimGroupsUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/sources/scim_groups/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_scim_groups_used_by_list", type: "[sources_scim_groups_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMSourceUser Viewset"""
  sourcesScimUsersList(
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    sourceSlug: String @source(name: "source__slug", type: "String", subgraph: "Authentik")
    userId: Int @source(name: "user__id", type: "Int", subgraph: "Authentik")
    userUsername: String @source(name: "user__username", type: "String", subgraph: "Authentik")
  ): SourcesScimUsersListResponse @httpOperation(subgraph: "Authentik", path: "/sources/scim_users/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"source__slug\":\"source__slug\",\"user__id\":\"user__id\",\"user__username\":\"user__username\"}") @source(name: "sources_scim_users_list", type: "sources_scim_users_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMSourceUser Viewset"""
  sourcesScimUsersRetrieve(
    """A unique value identifying this scim source user."""
    id: String!
  ): SourcesScimUsersRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/sources/scim_users/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_scim_users_retrieve", type: "sources_scim_users_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  sourcesScimUsersUsedByList(
    """A unique value identifying this scim source user."""
    id: String!
  ): [SourcesScimUsersUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/sources/scim_users/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_scim_users_used_by_list", type: "[sources_scim_users_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """User-source connection Viewset"""
  sourcesUserConnectionsAllList(
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    sourceSlug: String @source(name: "source__slug", type: "String", subgraph: "Authentik")
    user: Int
  ): SourcesUserConnectionsAllListResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/all/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"source__slug\":\"source__slug\",\"user\":\"user\"}") @source(name: "sources_user_connections_all_list", type: "sources_user_connections_all_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """User-source connection Viewset"""
  sourcesUserConnectionsAllRetrieve(
    """A unique integer value identifying this user source connection."""
    id: Int!
  ): SourcesUserConnectionsAllRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/all/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_user_connections_all_retrieve", type: "sources_user_connections_all_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  sourcesUserConnectionsAllUsedByList(
    """A unique integer value identifying this user source connection."""
    id: Int!
  ): [SourcesUserConnectionsAllUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/all/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_user_connections_all_used_by_list", type: "[sources_user_connections_all_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesUserConnectionsKerberosList(
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    sourceSlug: String @source(name: "source__slug", type: "String", subgraph: "Authentik")
  ): SourcesUserConnectionsKerberosListResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/kerberos/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"source__slug\":\"source__slug\"}") @source(name: "sources_user_connections_kerberos_list", type: "sources_user_connections_kerberos_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesUserConnectionsKerberosRetrieve(
    """
    A unique integer value identifying this User Kerberos Source Connection.
    """
    id: Int!
  ): SourcesUserConnectionsKerberosRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/kerberos/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_user_connections_kerberos_retrieve", type: "sources_user_connections_kerberos_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  sourcesUserConnectionsKerberosUsedByList(
    """
    A unique integer value identifying this User Kerberos Source Connection.
    """
    id: Int!
  ): [SourcesUserConnectionsKerberosUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/kerberos/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_user_connections_kerberos_used_by_list", type: "[sources_user_connections_kerberos_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesUserConnectionsOauthList(
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    sourceSlug: String @source(name: "source__slug", type: "String", subgraph: "Authentik")
    user: Int
  ): SourcesUserConnectionsOauthListResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/oauth/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"source__slug\":\"source__slug\",\"user\":\"user\"}") @source(name: "sources_user_connections_oauth_list", type: "sources_user_connections_oauth_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesUserConnectionsOauthRetrieve(
    """A unique integer value identifying this User OAuth Source Connection."""
    id: Int!
  ): SourcesUserConnectionsOauthRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/oauth/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_user_connections_oauth_retrieve", type: "sources_user_connections_oauth_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  sourcesUserConnectionsOauthUsedByList(
    """A unique integer value identifying this User OAuth Source Connection."""
    id: Int!
  ): [SourcesUserConnectionsOauthUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/oauth/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_user_connections_oauth_used_by_list", type: "[sources_user_connections_oauth_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Plex Source connection Serializer"""
  sourcesUserConnectionsPlexList(
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    sourceSlug: String @source(name: "source__slug", type: "String", subgraph: "Authentik")
    user: Int
  ): SourcesUserConnectionsPlexListResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/plex/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"source__slug\":\"source__slug\",\"user\":\"user\"}") @source(name: "sources_user_connections_plex_list", type: "sources_user_connections_plex_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Plex Source connection Serializer"""
  sourcesUserConnectionsPlexRetrieve(
    """A unique integer value identifying this User Plex Source Connection."""
    id: Int!
  ): SourcesUserConnectionsPlexRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/plex/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_user_connections_plex_retrieve", type: "sources_user_connections_plex_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  sourcesUserConnectionsPlexUsedByList(
    """A unique integer value identifying this User Plex Source Connection."""
    id: Int!
  ): [SourcesUserConnectionsPlexUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/plex/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_user_connections_plex_used_by_list", type: "[sources_user_connections_plex_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesUserConnectionsSamlList(
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    sourceSlug: String @source(name: "source__slug", type: "String", subgraph: "Authentik")
    user: Int
  ): SourcesUserConnectionsSamlListResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/saml/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"source__slug\":\"source__slug\",\"user\":\"user\"}") @source(name: "sources_user_connections_saml_list", type: "sources_user_connections_saml_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesUserConnectionsSamlRetrieve(
    """A unique integer value identifying this User SAML Source Connection."""
    id: Int!
  ): SourcesUserConnectionsSamlRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/saml/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_user_connections_saml_retrieve", type: "sources_user_connections_saml_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  sourcesUserConnectionsSamlUsedByList(
    """A unique integer value identifying this User SAML Source Connection."""
    id: Int!
  ): [SourcesUserConnectionsSamlUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/saml/{args.id}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "sources_user_connections_saml_used_by_list", type: "[sources_user_connections_saml_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Stage Viewset"""
  stagesAllList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): StagesAllListResponse @httpOperation(subgraph: "Authentik", path: "/stages/all/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "stages_all_list", type: "stages_all_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Stage Viewset"""
  stagesAllRetrieve(
    """
    A UUID string identifying this authentik.providers.oauth2.views.authorize.OAuthFulfillmentStage.
    """
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesAllRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/stages/all/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_all_retrieve", type: "stages_all_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  stagesAllUsedByList(
    """
    A UUID string identifying this authentik.providers.oauth2.views.authorize.OAuthFulfillmentStage.
    """
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): [StagesAllUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/all/{args.stage_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_all_used_by_list", type: "[stages_all_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get all creatable types"""
  stagesAllTypesList: [StagesAllTypesListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/all/types/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_all_types_list", type: "[stages_all_types_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get all stages the user can configure"""
  stagesAllUserSettingsList: [StagesAllUserSettingsListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/all/user_settings/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_all_user_settings_list", type: "[stages_all_user_settings_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorDuoStage Viewset"""
  stagesAuthenticatorDuoList(
    apiHostname: String @source(name: "api_hostname", type: "String", subgraph: "Authentik")
    clientId: String @source(name: "client_id", type: "String", subgraph: "Authentik")
    configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): StagesAuthenticatorDuoListResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/duo/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"api_hostname\":\"api_hostname\",\"client_id\":\"client_id\",\"configure_flow\":\"configure_flow\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "stages_authenticator_duo_list", type: "stages_authenticator_duo_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorDuoStage Viewset"""
  stagesAuthenticatorDuoRetrieve(
    """A UUID string identifying this Duo Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesAuthenticatorDuoRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/duo/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_authenticator_duo_retrieve", type: "stages_authenticator_duo_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  stagesAuthenticatorDuoUsedByList(
    """A UUID string identifying this Duo Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): [StagesAuthenticatorDuoUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/duo/{args.stage_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_authenticator_duo_used_by_list", type: "[stages_authenticator_duo_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorEndpointGDTCStage Viewset"""
  stagesAuthenticatorEndpointGdtcList(
    configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): StagesAuthenticatorEndpointGdtcListResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/endpoint_gdtc/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"configure_flow\":\"configure_flow\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "stages_authenticator_endpoint_gdtc_list", type: "stages_authenticator_endpoint_gdtc_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorEndpointGDTCStage Viewset"""
  stagesAuthenticatorEndpointGdtcRetrieve(
    """
    A UUID string identifying this Endpoint Authenticator Google Device Trust Connector Stage.
    """
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesAuthenticatorEndpointGdtcRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/endpoint_gdtc/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_authenticator_endpoint_gdtc_retrieve", type: "stages_authenticator_endpoint_gdtc_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  stagesAuthenticatorEndpointGdtcUsedByList(
    """
    A UUID string identifying this Endpoint Authenticator Google Device Trust Connector Stage.
    """
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): [StagesAuthenticatorEndpointGdtcUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/endpoint_gdtc/{args.stage_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_authenticator_endpoint_gdtc_used_by_list", type: "[stages_authenticator_endpoint_gdtc_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorSMSStage Viewset"""
  stagesAuthenticatorSmsList(
    accountSid: String @source(name: "account_sid", type: "String", subgraph: "Authentik")
    auth: String
    authPassword: String @source(name: "auth_password", type: "String", subgraph: "Authentik")
    authType: QueryInputStagesAuthenticatorSmsListAuthType @source(name: "auth_type", type: "queryInput_stages_authenticator_sms_list_auth_type", subgraph: "Authentik")
    configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
    friendlyName: String @source(name: "friendly_name", type: "String", subgraph: "Authentik")
    fromNumber: String @source(name: "from_number", type: "String", subgraph: "Authentik")
    mapping: UUID
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    provider: QueryInputStagesAuthenticatorSmsListProvider @source(name: "provider", type: "queryInput_stages_authenticator_sms_list_provider", subgraph: "Authentik")
    """A search term."""
    search: String
    stageUuid: UUID @source(name: "stage_uuid", type: "UUID", subgraph: "Authentik")
    verifyOnly: Boolean @source(name: "verify_only", type: "Boolean", subgraph: "Authentik")
  ): StagesAuthenticatorSmsListResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/sms/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"account_sid\":\"account_sid\",\"auth\":\"auth\",\"auth_password\":\"auth_password\",\"auth_type\":\"auth_type\",\"configure_flow\":\"configure_flow\",\"friendly_name\":\"friendly_name\",\"from_number\":\"from_number\",\"mapping\":\"mapping\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"provider\":\"provider\",\"search\":\"search\",\"stage_uuid\":\"stage_uuid\",\"verify_only\":\"verify_only\"}") @source(name: "stages_authenticator_sms_list", type: "stages_authenticator_sms_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorSMSStage Viewset"""
  stagesAuthenticatorSmsRetrieve(
    """A UUID string identifying this SMS Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesAuthenticatorSmsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/sms/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_authenticator_sms_retrieve", type: "stages_authenticator_sms_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  stagesAuthenticatorSmsUsedByList(
    """A UUID string identifying this SMS Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): [StagesAuthenticatorSmsUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/sms/{args.stage_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_authenticator_sms_used_by_list", type: "[stages_authenticator_sms_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorStaticStage Viewset"""
  stagesAuthenticatorStaticList(
    configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
    friendlyName: String @source(name: "friendly_name", type: "String", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    stageUuid: UUID @source(name: "stage_uuid", type: "UUID", subgraph: "Authentik")
    tokenCount: Int @source(name: "token_count", type: "Int", subgraph: "Authentik")
    tokenLength: Int @source(name: "token_length", type: "Int", subgraph: "Authentik")
  ): StagesAuthenticatorStaticListResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/static/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"configure_flow\":\"configure_flow\",\"friendly_name\":\"friendly_name\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"stage_uuid\":\"stage_uuid\",\"token_count\":\"token_count\",\"token_length\":\"token_length\"}") @source(name: "stages_authenticator_static_list", type: "stages_authenticator_static_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorStaticStage Viewset"""
  stagesAuthenticatorStaticRetrieve(
    """A UUID string identifying this Static Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesAuthenticatorStaticRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/static/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_authenticator_static_retrieve", type: "stages_authenticator_static_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  stagesAuthenticatorStaticUsedByList(
    """A UUID string identifying this Static Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): [StagesAuthenticatorStaticUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/static/{args.stage_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_authenticator_static_used_by_list", type: "[stages_authenticator_static_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorTOTPStage Viewset"""
  stagesAuthenticatorTotpList(
    configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
    digits: QueryInputStagesAuthenticatorTotpListDigits @source(name: "digits", type: "queryInput_stages_authenticator_totp_list_digits", subgraph: "Authentik")
    friendlyName: String @source(name: "friendly_name", type: "String", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    stageUuid: UUID @source(name: "stage_uuid", type: "UUID", subgraph: "Authentik")
  ): StagesAuthenticatorTotpListResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/totp/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"configure_flow\":\"configure_flow\",\"digits\":\"digits\",\"friendly_name\":\"friendly_name\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"stage_uuid\":\"stage_uuid\"}") @source(name: "stages_authenticator_totp_list", type: "stages_authenticator_totp_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorTOTPStage Viewset"""
  stagesAuthenticatorTotpRetrieve(
    """A UUID string identifying this TOTP Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesAuthenticatorTotpRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/totp/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_authenticator_totp_retrieve", type: "stages_authenticator_totp_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  stagesAuthenticatorTotpUsedByList(
    """A UUID string identifying this TOTP Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): [StagesAuthenticatorTotpUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/totp/{args.stage_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_authenticator_totp_used_by_list", type: "[stages_authenticator_totp_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorValidateStage Viewset"""
  stagesAuthenticatorValidateList(
    configurationStages: [UUID] @source(name: "configuration_stages", type: "[UUID]", subgraph: "Authentik")
    name: String
    notConfiguredAction: QueryInputStagesAuthenticatorValidateListNotConfiguredAction @source(name: "not_configured_action", type: "queryInput_stages_authenticator_validate_list_not_configured_action", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): StagesAuthenticatorValidateListResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/validate/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"configuration_stages\":\"configuration_stages\",\"name\":\"name\",\"not_configured_action\":\"not_configured_action\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}", queryStringOptionsByParam: "{\"configuration_stages\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "stages_authenticator_validate_list", type: "stages_authenticator_validate_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorValidateStage Viewset"""
  stagesAuthenticatorValidateRetrieve(
    """A UUID string identifying this Authenticator Validation Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesAuthenticatorValidateRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/validate/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_authenticator_validate_retrieve", type: "stages_authenticator_validate_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  stagesAuthenticatorValidateUsedByList(
    """A UUID string identifying this Authenticator Validation Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): [StagesAuthenticatorValidateUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/validate/{args.stage_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_authenticator_validate_used_by_list", type: "[stages_authenticator_validate_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorWebAuthnStage Viewset"""
  stagesAuthenticatorWebauthnList(
    authenticatorAttachment: QueryInputStagesAuthenticatorWebauthnListAuthenticatorAttachment @source(name: "authenticator_attachment", type: "queryInput_stages_authenticator_webauthn_list_authenticator_attachment", subgraph: "Authentik")
    configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
    deviceTypeRestrictions: [UUID] @source(name: "device_type_restrictions", type: "[UUID]", subgraph: "Authentik")
    friendlyName: String @source(name: "friendly_name", type: "String", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    residentKeyRequirement: QueryInputStagesAuthenticatorWebauthnListResidentKeyRequirement @source(name: "resident_key_requirement", type: "queryInput_stages_authenticator_webauthn_list_resident_key_requirement", subgraph: "Authentik")
    """A search term."""
    search: String
    stageUuid: UUID @source(name: "stage_uuid", type: "UUID", subgraph: "Authentik")
    userVerification: QueryInputStagesAuthenticatorWebauthnListUserVerification @source(name: "user_verification", type: "queryInput_stages_authenticator_webauthn_list_user_verification", subgraph: "Authentik")
  ): StagesAuthenticatorWebauthnListResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/webauthn/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"authenticator_attachment\":\"authenticator_attachment\",\"configure_flow\":\"configure_flow\",\"device_type_restrictions\":\"device_type_restrictions\",\"friendly_name\":\"friendly_name\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"resident_key_requirement\":\"resident_key_requirement\",\"search\":\"search\",\"stage_uuid\":\"stage_uuid\",\"user_verification\":\"user_verification\"}", queryStringOptionsByParam: "{\"device_type_restrictions\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "stages_authenticator_webauthn_list", type: "stages_authenticator_webauthn_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorWebAuthnStage Viewset"""
  stagesAuthenticatorWebauthnRetrieve(
    """A UUID string identifying this WebAuthn Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesAuthenticatorWebauthnRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/webauthn/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_authenticator_webauthn_retrieve", type: "stages_authenticator_webauthn_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  stagesAuthenticatorWebauthnUsedByList(
    """A UUID string identifying this WebAuthn Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): [StagesAuthenticatorWebauthnUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/webauthn/{args.stage_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_authenticator_webauthn_used_by_list", type: "[stages_authenticator_webauthn_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """WebAuthnDeviceType Viewset"""
  stagesAuthenticatorWebauthnDeviceTypesList(
    aaguid: UUID
    description: String
    icon: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): StagesAuthenticatorWebauthnDeviceTypesListResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/webauthn_device_types/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"aaguid\":\"aaguid\",\"description\":\"description\",\"icon\":\"icon\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "stages_authenticator_webauthn_device_types_list", type: "stages_authenticator_webauthn_device_types_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """WebAuthnDeviceType Viewset"""
  stagesAuthenticatorWebauthnDeviceTypesRetrieve(
    """A UUID string identifying this WebAuthn Device type."""
    aaguid: UUID!
  ): StagesAuthenticatorWebauthnDeviceTypesRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/webauthn_device_types/{args.aaguid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_authenticator_webauthn_device_types_retrieve", type: "stages_authenticator_webauthn_device_types_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """CaptchaStage Viewset"""
  stagesCaptchaList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    publicKey: String @source(name: "public_key", type: "String", subgraph: "Authentik")
    """A search term."""
    search: String
  ): StagesCaptchaListResponse @httpOperation(subgraph: "Authentik", path: "/stages/captcha/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"public_key\":\"public_key\",\"search\":\"search\"}") @source(name: "stages_captcha_list", type: "stages_captcha_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """CaptchaStage Viewset"""
  stagesCaptchaRetrieve(
    """A UUID string identifying this Captcha Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesCaptchaRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/stages/captcha/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_captcha_retrieve", type: "stages_captcha_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  stagesCaptchaUsedByList(
    """A UUID string identifying this Captcha Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): [StagesCaptchaUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/captcha/{args.stage_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_captcha_used_by_list", type: "[stages_captcha_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """ConsentStage Viewset"""
  stagesConsentList(
    consentExpireIn: String @source(name: "consent_expire_in", type: "String", subgraph: "Authentik")
    mode: QueryInputStagesConsentListMode @source(name: "mode", type: "queryInput_stages_consent_list_mode", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    stageUuid: UUID @source(name: "stage_uuid", type: "UUID", subgraph: "Authentik")
  ): StagesConsentListResponse @httpOperation(subgraph: "Authentik", path: "/stages/consent/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"consent_expire_in\":\"consent_expire_in\",\"mode\":\"mode\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"stage_uuid\":\"stage_uuid\"}") @source(name: "stages_consent_list", type: "stages_consent_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """ConsentStage Viewset"""
  stagesConsentRetrieve(
    """A UUID string identifying this Consent Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesConsentRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/stages/consent/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_consent_retrieve", type: "stages_consent_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  stagesConsentUsedByList(
    """A UUID string identifying this Consent Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): [StagesConsentUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/consent/{args.stage_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_consent_used_by_list", type: "[stages_consent_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """DenyStage Viewset"""
  stagesDenyList(
    denyMessage: String @source(name: "deny_message", type: "String", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    stageUuid: UUID @source(name: "stage_uuid", type: "UUID", subgraph: "Authentik")
  ): StagesDenyListResponse @httpOperation(subgraph: "Authentik", path: "/stages/deny/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"deny_message\":\"deny_message\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"stage_uuid\":\"stage_uuid\"}") @source(name: "stages_deny_list", type: "stages_deny_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """DenyStage Viewset"""
  stagesDenyRetrieve(
    """A UUID string identifying this Deny Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesDenyRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/stages/deny/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_deny_retrieve", type: "stages_deny_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  stagesDenyUsedByList(
    """A UUID string identifying this Deny Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): [StagesDenyUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/deny/{args.stage_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_deny_used_by_list", type: "[stages_deny_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """DummyStage Viewset"""
  stagesDummyList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    stageUuid: UUID @source(name: "stage_uuid", type: "UUID", subgraph: "Authentik")
    throwError: Boolean @source(name: "throw_error", type: "Boolean", subgraph: "Authentik")
  ): StagesDummyListResponse @httpOperation(subgraph: "Authentik", path: "/stages/dummy/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"stage_uuid\":\"stage_uuid\",\"throw_error\":\"throw_error\"}") @source(name: "stages_dummy_list", type: "stages_dummy_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """DummyStage Viewset"""
  stagesDummyRetrieve(
    """A UUID string identifying this Dummy Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesDummyRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/stages/dummy/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_dummy_retrieve", type: "stages_dummy_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  stagesDummyUsedByList(
    """A UUID string identifying this Dummy Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): [StagesDummyUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/dummy/{args.stage_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_dummy_used_by_list", type: "[stages_dummy_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """EmailStage Viewset"""
  stagesEmailList(
    activateUserOnSuccess: Boolean @source(name: "activate_user_on_success", type: "Boolean", subgraph: "Authentik")
    fromAddress: String @source(name: "from_address", type: "String", subgraph: "Authentik")
    host: String
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    port: Int
    """A search term."""
    search: String
    subject: String
    template: String
    timeout: Int
    tokenExpiry: Int @source(name: "token_expiry", type: "Int", subgraph: "Authentik")
    useGlobalSettings: Boolean @source(name: "use_global_settings", type: "Boolean", subgraph: "Authentik")
    useSsl: Boolean @source(name: "use_ssl", type: "Boolean", subgraph: "Authentik")
    useTls: Boolean @source(name: "use_tls", type: "Boolean", subgraph: "Authentik")
    username: String
  ): StagesEmailListResponse @httpOperation(subgraph: "Authentik", path: "/stages/email/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"activate_user_on_success\":\"activate_user_on_success\",\"from_address\":\"from_address\",\"host\":\"host\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"port\":\"port\",\"search\":\"search\",\"subject\":\"subject\",\"template\":\"template\",\"timeout\":\"timeout\",\"token_expiry\":\"token_expiry\",\"use_global_settings\":\"use_global_settings\",\"use_ssl\":\"use_ssl\",\"use_tls\":\"use_tls\",\"username\":\"username\"}") @source(name: "stages_email_list", type: "stages_email_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """EmailStage Viewset"""
  stagesEmailRetrieve(
    """A UUID string identifying this Email Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesEmailRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/stages/email/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_email_retrieve", type: "stages_email_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  stagesEmailUsedByList(
    """A UUID string identifying this Email Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): [StagesEmailUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/email/{args.stage_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_email_used_by_list", type: "[stages_email_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get all available templates, including custom templates"""
  stagesEmailTemplatesList: [StagesEmailTemplatesListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/email/templates/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_email_templates_list", type: "[stages_email_templates_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """IdentificationStage Viewset"""
  stagesIdentificationList(
    captchaStage: UUID @source(name: "captcha_stage", type: "UUID", subgraph: "Authentik")
    caseInsensitiveMatching: Boolean @source(name: "case_insensitive_matching", type: "Boolean", subgraph: "Authentik")
    enrollmentFlow: UUID @source(name: "enrollment_flow", type: "UUID", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    passwordStage: UUID @source(name: "password_stage", type: "UUID", subgraph: "Authentik")
    passwordlessFlow: UUID @source(name: "passwordless_flow", type: "UUID", subgraph: "Authentik")
    recoveryFlow: UUID @source(name: "recovery_flow", type: "UUID", subgraph: "Authentik")
    """A search term."""
    search: String
    showMatchedUser: Boolean @source(name: "show_matched_user", type: "Boolean", subgraph: "Authentik")
    showSourceLabels: Boolean @source(name: "show_source_labels", type: "Boolean", subgraph: "Authentik")
  ): StagesIdentificationListResponse @httpOperation(subgraph: "Authentik", path: "/stages/identification/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"captcha_stage\":\"captcha_stage\",\"case_insensitive_matching\":\"case_insensitive_matching\",\"enrollment_flow\":\"enrollment_flow\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"password_stage\":\"password_stage\",\"passwordless_flow\":\"passwordless_flow\",\"recovery_flow\":\"recovery_flow\",\"search\":\"search\",\"show_matched_user\":\"show_matched_user\",\"show_source_labels\":\"show_source_labels\"}") @source(name: "stages_identification_list", type: "stages_identification_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """IdentificationStage Viewset"""
  stagesIdentificationRetrieve(
    """A UUID string identifying this Identification Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesIdentificationRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/stages/identification/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_identification_retrieve", type: "stages_identification_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  stagesIdentificationUsedByList(
    """A UUID string identifying this Identification Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): [StagesIdentificationUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/identification/{args.stage_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_identification_used_by_list", type: "[stages_identification_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Invitation Viewset"""
  stagesInvitationInvitationsList(
    createdByUsername: String @source(name: "created_by__username", type: "String", subgraph: "Authentik")
    expires: DateTime
    flowSlug: String @source(name: "flow__slug", type: "String", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): StagesInvitationInvitationsListResponse @httpOperation(subgraph: "Authentik", path: "/stages/invitation/invitations/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"created_by__username\":\"created_by__username\",\"expires\":\"expires\",\"flow__slug\":\"flow__slug\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "stages_invitation_invitations_list", type: "stages_invitation_invitations_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Invitation Viewset"""
  stagesInvitationInvitationsRetrieve(
    """A UUID string identifying this Invitation."""
    inviteUuid: UUID! @source(name: "invite_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesInvitationInvitationsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/stages/invitation/invitations/{args.invite_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_invitation_invitations_retrieve", type: "stages_invitation_invitations_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  stagesInvitationInvitationsUsedByList(
    """A UUID string identifying this Invitation."""
    inviteUuid: UUID! @source(name: "invite_uuid", type: "UUID!", subgraph: "Authentik")
  ): [StagesInvitationInvitationsUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/invitation/invitations/{args.invite_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_invitation_invitations_used_by_list", type: "[stages_invitation_invitations_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """InvitationStage Viewset"""
  stagesInvitationStagesList(
    continueFlowWithoutInvitation: Boolean @source(name: "continue_flow_without_invitation", type: "Boolean", subgraph: "Authentik")
    name: String
    noFlows: Boolean @source(name: "no_flows", type: "Boolean", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    stageUuid: UUID @source(name: "stage_uuid", type: "UUID", subgraph: "Authentik")
  ): StagesInvitationStagesListResponse @httpOperation(subgraph: "Authentik", path: "/stages/invitation/stages/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"continue_flow_without_invitation\":\"continue_flow_without_invitation\",\"name\":\"name\",\"no_flows\":\"no_flows\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"stage_uuid\":\"stage_uuid\"}") @source(name: "stages_invitation_stages_list", type: "stages_invitation_stages_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """InvitationStage Viewset"""
  stagesInvitationStagesRetrieve(
    """A UUID string identifying this Invitation Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesInvitationStagesRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/stages/invitation/stages/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_invitation_stages_retrieve", type: "stages_invitation_stages_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  stagesInvitationStagesUsedByList(
    """A UUID string identifying this Invitation Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): [StagesInvitationStagesUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/invitation/stages/{args.stage_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_invitation_stages_used_by_list", type: "[stages_invitation_stages_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PasswordStage Viewset"""
  stagesPasswordList(
    allowShowPassword: Boolean @source(name: "allow_show_password", type: "Boolean", subgraph: "Authentik")
    configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
    failedAttemptsBeforeCancel: Int @source(name: "failed_attempts_before_cancel", type: "Int", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
  ): StagesPasswordListResponse @httpOperation(subgraph: "Authentik", path: "/stages/password/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"allow_show_password\":\"allow_show_password\",\"configure_flow\":\"configure_flow\",\"failed_attempts_before_cancel\":\"failed_attempts_before_cancel\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\"}") @source(name: "stages_password_list", type: "stages_password_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PasswordStage Viewset"""
  stagesPasswordRetrieve(
    """A UUID string identifying this Password Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesPasswordRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/stages/password/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_password_retrieve", type: "stages_password_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  stagesPasswordUsedByList(
    """A UUID string identifying this Password Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): [StagesPasswordUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/password/{args.stage_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_password_used_by_list", type: "[stages_password_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Prompt Viewset"""
  stagesPromptPromptsList(
    fieldKey: String @source(name: "field_key", type: "String", subgraph: "Authentik")
    label: String
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    placeholder: String
    """A search term."""
    search: String
    type: QueryInputStagesPromptPromptsListType @source(name: "type", type: "queryInput_stages_prompt_prompts_list_type", subgraph: "Authentik")
  ): StagesPromptPromptsListResponse @httpOperation(subgraph: "Authentik", path: "/stages/prompt/prompts/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"field_key\":\"field_key\",\"label\":\"label\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"placeholder\":\"placeholder\",\"search\":\"search\",\"type\":\"type\"}") @source(name: "stages_prompt_prompts_list", type: "stages_prompt_prompts_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Prompt Viewset"""
  stagesPromptPromptsRetrieve(
    """A UUID string identifying this Prompt."""
    promptUuid: UUID! @source(name: "prompt_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesPromptPromptsRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/stages/prompt/prompts/{args.prompt_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_prompt_prompts_retrieve", type: "stages_prompt_prompts_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  stagesPromptPromptsUsedByList(
    """A UUID string identifying this Prompt."""
    promptUuid: UUID! @source(name: "prompt_uuid", type: "UUID!", subgraph: "Authentik")
  ): [StagesPromptPromptsUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/prompt/prompts/{args.prompt_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_prompt_prompts_used_by_list", type: "[stages_prompt_prompts_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PromptStage Viewset"""
  stagesPromptStagesList(
    fields: [UUID]
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    stageUuid: UUID @source(name: "stage_uuid", type: "UUID", subgraph: "Authentik")
    validationPolicies: [UUID] @source(name: "validation_policies", type: "[UUID]", subgraph: "Authentik")
  ): StagesPromptStagesListResponse @httpOperation(subgraph: "Authentik", path: "/stages/prompt/stages/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"fields\":\"fields\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"stage_uuid\":\"stage_uuid\",\"validation_policies\":\"validation_policies\"}", queryStringOptionsByParam: "{\"fields\":{\"arrayFormat\":\"repeat\",\"destructObject\":true},\"validation_policies\":{\"arrayFormat\":\"repeat\",\"destructObject\":true}}") @source(name: "stages_prompt_stages_list", type: "stages_prompt_stages_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PromptStage Viewset"""
  stagesPromptStagesRetrieve(
    """A UUID string identifying this Prompt Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesPromptStagesRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/stages/prompt/stages/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_prompt_stages_retrieve", type: "stages_prompt_stages_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  stagesPromptStagesUsedByList(
    """A UUID string identifying this Prompt Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): [StagesPromptStagesUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/prompt/stages/{args.stage_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_prompt_stages_used_by_list", type: "[stages_prompt_stages_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SourceStage Viewset"""
  stagesSourceList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    resumeTimeout: String @source(name: "resume_timeout", type: "String", subgraph: "Authentik")
    """A search term."""
    search: String
    source: UUID
    stageUuid: UUID @source(name: "stage_uuid", type: "UUID", subgraph: "Authentik")
  ): StagesSourceListResponse @httpOperation(subgraph: "Authentik", path: "/stages/source/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"resume_timeout\":\"resume_timeout\",\"search\":\"search\",\"source\":\"source\",\"stage_uuid\":\"stage_uuid\"}") @source(name: "stages_source_list", type: "stages_source_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SourceStage Viewset"""
  stagesSourceRetrieve(
    """A UUID string identifying this Source Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesSourceRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/stages/source/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_source_retrieve", type: "stages_source_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  stagesSourceUsedByList(
    """A UUID string identifying this Source Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): [StagesSourceUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/source/{args.stage_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_source_used_by_list", type: "[stages_source_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserDeleteStage Viewset"""
  stagesUserDeleteList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    stageUuid: UUID @source(name: "stage_uuid", type: "UUID", subgraph: "Authentik")
  ): StagesUserDeleteListResponse @httpOperation(subgraph: "Authentik", path: "/stages/user_delete/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"stage_uuid\":\"stage_uuid\"}") @source(name: "stages_user_delete_list", type: "stages_user_delete_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserDeleteStage Viewset"""
  stagesUserDeleteRetrieve(
    """A UUID string identifying this User Delete Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesUserDeleteRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/stages/user_delete/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_user_delete_retrieve", type: "stages_user_delete_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  stagesUserDeleteUsedByList(
    """A UUID string identifying this User Delete Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): [StagesUserDeleteUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/user_delete/{args.stage_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_user_delete_used_by_list", type: "[stages_user_delete_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserLoginStage Viewset"""
  stagesUserLoginList(
    geoipBinding: QueryInputStagesUserLoginListGeoipBinding @source(name: "geoip_binding", type: "queryInput_stages_user_login_list_geoip_binding", subgraph: "Authentik")
    name: String
    networkBinding: QueryInputStagesUserLoginListNetworkBinding @source(name: "network_binding", type: "queryInput_stages_user_login_list_network_binding", subgraph: "Authentik")
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    rememberMeOffset: String @source(name: "remember_me_offset", type: "String", subgraph: "Authentik")
    """A search term."""
    search: String
    sessionDuration: String @source(name: "session_duration", type: "String", subgraph: "Authentik")
    stageUuid: UUID @source(name: "stage_uuid", type: "UUID", subgraph: "Authentik")
    terminateOtherSessions: Boolean @source(name: "terminate_other_sessions", type: "Boolean", subgraph: "Authentik")
  ): StagesUserLoginListResponse @httpOperation(subgraph: "Authentik", path: "/stages/user_login/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"geoip_binding\":\"geoip_binding\",\"name\":\"name\",\"network_binding\":\"network_binding\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"remember_me_offset\":\"remember_me_offset\",\"search\":\"search\",\"session_duration\":\"session_duration\",\"stage_uuid\":\"stage_uuid\",\"terminate_other_sessions\":\"terminate_other_sessions\"}") @source(name: "stages_user_login_list", type: "stages_user_login_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserLoginStage Viewset"""
  stagesUserLoginRetrieve(
    """A UUID string identifying this User Login Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesUserLoginRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/stages/user_login/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_user_login_retrieve", type: "stages_user_login_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  stagesUserLoginUsedByList(
    """A UUID string identifying this User Login Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): [StagesUserLoginUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/user_login/{args.stage_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_user_login_used_by_list", type: "[stages_user_login_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserLogoutStage Viewset"""
  stagesUserLogoutList(
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    stageUuid: UUID @source(name: "stage_uuid", type: "UUID", subgraph: "Authentik")
  ): StagesUserLogoutListResponse @httpOperation(subgraph: "Authentik", path: "/stages/user_logout/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"stage_uuid\":\"stage_uuid\"}") @source(name: "stages_user_logout_list", type: "stages_user_logout_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserLogoutStage Viewset"""
  stagesUserLogoutRetrieve(
    """A UUID string identifying this User Logout Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesUserLogoutRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/stages/user_logout/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_user_logout_retrieve", type: "stages_user_logout_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  stagesUserLogoutUsedByList(
    """A UUID string identifying this User Logout Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): [StagesUserLogoutUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/user_logout/{args.stage_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_user_logout_used_by_list", type: "[stages_user_logout_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserWriteStage Viewset"""
  stagesUserWriteList(
    createUsersAsInactive: Boolean @source(name: "create_users_as_inactive", type: "Boolean", subgraph: "Authentik")
    createUsersGroup: UUID @source(name: "create_users_group", type: "UUID", subgraph: "Authentik")
    name: String
    """Which field to use when ordering the results."""
    ordering: String
    """A page number within the paginated result set."""
    page: Int
    """Number of results to return per page."""
    pageSize: Int @source(name: "page_size", type: "Int", subgraph: "Authentik")
    """A search term."""
    search: String
    stageUuid: UUID @source(name: "stage_uuid", type: "UUID", subgraph: "Authentik")
    userCreationMode: QueryInputStagesUserWriteListUserCreationMode @source(name: "user_creation_mode", type: "queryInput_stages_user_write_list_user_creation_mode", subgraph: "Authentik")
    userPathTemplate: String @source(name: "user_path_template", type: "String", subgraph: "Authentik")
    userType: QueryInputStagesUserWriteListUserType @source(name: "user_type", type: "queryInput_stages_user_write_list_user_type", subgraph: "Authentik")
  ): StagesUserWriteListResponse @httpOperation(subgraph: "Authentik", path: "/stages/user_write/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET, queryParamArgMap: "{\"create_users_as_inactive\":\"create_users_as_inactive\",\"create_users_group\":\"create_users_group\",\"name\":\"name\",\"ordering\":\"ordering\",\"page\":\"page\",\"page_size\":\"page_size\",\"search\":\"search\",\"stage_uuid\":\"stage_uuid\",\"user_creation_mode\":\"user_creation_mode\",\"user_path_template\":\"user_path_template\",\"user_type\":\"user_type\"}") @source(name: "stages_user_write_list", type: "stages_user_write_list_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserWriteStage Viewset"""
  stagesUserWriteRetrieve(
    """A UUID string identifying this User Write Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesUserWriteRetrieveResponse @httpOperation(subgraph: "Authentik", path: "/stages/user_write/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_user_write_retrieve", type: "stages_user_write_retrieve_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get a list of all objects that use this object"""
  stagesUserWriteUsedByList(
    """A UUID string identifying this User Write Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): [StagesUserWriteUsedByListResponse] @httpOperation(subgraph: "Authentik", path: "/stages/user_write/{args.stage_uuid}/used_by/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @source(name: "stages_user_write_used_by_list", type: "[stages_user_write_used_by_list_response]", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Récupère tous les formulaires. Réservé aux admins."""
  allForms(after: String, before: String, first: Int, last: Int): ChurrosQueryAllFormsConnection! @source(name: "allForms", type: "QueryAllFormsConnection!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  allUsers(after: String, before: String, first: Int, last: Int): ChurrosQueryAllUsersConnection! @source(name: "allUsers", type: "QueryAllUsersConnection!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  announcement(
    """ID local ou global"""
    id: ID!
  ): ChurrosAnnouncement! @source(name: "announcement", type: "Announcement!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  announcements(after: String, before: String, first: Int, last: Int): ChurrosQueryAnnouncementsConnection! @source(name: "announcements", type: "QueryAnnouncementsConnection!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  announcementsNow: [ChurrosAnnouncement!]! @source(name: "announcementsNow", type: "[Announcement!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  article(id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")): ChurrosArticle! @source(name: "article", type: "Article!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """
  Récupérer l'ID d'un article à partir de son groupe et de son slug. Pensé pour les redirections d'URLs anciennes.
  """
  articleID(group: ChurrosUID! @source(name: "group", type: "UID!", subgraph: "Churros"), slug: String!): ChurrosLocalID @source(name: "articleID", type: "LocalID", subgraph: "Churros") @hidden @join__field(graph: CHURROS) @deprecated(reason: "Utilisez `article` à la place")
  """
  Renvoie l'utilisateur·ice connecté·e. Si l'utilisateur·ice n'est pas connecté·e, une erreur est renvoyée. Pour avoir null aulieu d'une erreur, voir `me`.
  """
  assertMe: ChurrosUser! @source(name: "assertMe", type: "User!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """
  Récupérer le thème qui est actuellement choisi pour un déploiement automatique: le thème de l'utilisateur·ice doit être changé à celui-ci, si iel n'a pas explicitement demandé à ne pas utiliser ce thème
  """
  autodeployedTheme: ChurrosTheme @source(name: "autodeployedTheme", type: "Theme", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  birthdays(activeOnly: Boolean, now: ChurrosDateTime @source(name: "now", type: "DateTime", subgraph: "Churros"), width: Int): [ChurrosUser!]! @source(name: "birthdays", type: "[User!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Récupère une réservation par son code"""
  booking(code: String!): ChurrosRegistration! @source(name: "booking", type: "Registration!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Si la page donnée est épinglée par l'utilisateur·ice connecté·e"""
  bookmarked(
    """Chemin de la page"""
    path: String!
  ): Boolean! @hidden @join__field(graph: CHURROS)
  """Retourne des informations sur le build actuel de l'API"""
  buildInfo: ChurrosBuildInfo! @source(name: "buildInfo", type: "BuildInfo!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  changelog(
    """
    The version to request a changelog for. Defaults to the current version (dev).
    """
    version: String
  ): ChurrosChangelogRelease! @source(name: "changelog", type: "ChangelogRelease!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  codeContributors: ChurrosQueryCodeContributorsResult! @source(name: "codeContributors", type: "QueryCodeContributorsResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """
  A changelog for multiple versions. 
  Be careful, this range is (from, to]. I.e. **the first version is excluded, and the last is included**. 
  This is way more useful for querying a range of versions for a changelog, but not the usual way ranges are defined.
  """
  combinedChangelog(
    """
    The version to start from, **exclusive**. Leave empty to start from the latest version the user has seen
    """
    from: String
    sort: ChurrosSortDirection! = Ascending @source(name: "sort", type: "SortDirection!", subgraph: "Churros")
    """
    The version to end at, **inclusive**. Leave empty to end at the current version (dev).
    """
    to: String! = "dev"
  ): ChurrosQueryCombinedChangelogResult! @source(name: "combinedChangelog", type: "QueryCombinedChangelogResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  contributionOptions: [ChurrosContributionOption!]! @source(name: "contributionOptions", type: "[ContributionOption!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  document(slug: String!, subject: ID!): ChurrosDocument! @source(name: "document", type: "Document!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  documents(after: String, before: String, first: Int, last: Int): ChurrosQueryDocumentsConnection! @source(name: "documents", type: "QueryDocumentsConnection!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  event(id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")): ChurrosEvent! @source(name: "event", type: "Event!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  eventManager(id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")): ChurrosEventManager! @source(name: "eventManager", type: "EventManager!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  events(
    after: String
    before: String
    first: Int
    future: Boolean
    """
    N'include seulement les évènements qui veulent être inclus dans l'affichage kiosque
    """
    kiosk: Boolean
    last: Int
    noLinkedArticles: Boolean
    past: Boolean
    pastRecurring: Boolean
    upcomingShotguns: Boolean
  ): ChurrosQueryEventsConnection! @source(name: "events", type: "QueryEventsConnection!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """
  Tout les évènements, regroupés par date (de début). Les curseurs (before, after) peuvent être des dates au format YYYY-MM-DD
  """
  eventsByDay(
    after: String
    before: String
    first: Int
    """
    N'include seulement les évènements qui veulent être inclus dans l'affichage kiosque
    """
    kiosk: Boolean
    last: Int
  ): ChurrosQueryEventsByDayConnection! @source(name: "eventsByDay", type: "QueryEventsByDayConnection!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  eventsInWeek(today: ChurrosDateTime! @source(name: "today", type: "DateTime!", subgraph: "Churros")): [ChurrosEvent!]! @source(name: "eventsInWeek", type: "[Event!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  existsInSchoolLdap(email: String!): Boolean! @hidden @join__field(graph: CHURROS)
  """
  Récupère un formulaire. On peut utiliser une subscription pour avoir la mise à jour en temps réel des réponses au formulaire.
  """
  form(
    """Identifiant local (sans le préfixe `form:`) du formulaire"""
    localId: String!
  ): ChurrosForm @source(name: "form", type: "Form", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Récupère les formulaires visibles par l'utilisateur·ice connecté·e."""
  forms(after: String, before: String, first: Int, last: Int): ChurrosQueryFormsConnection! @source(name: "forms", type: "QueryFormsConnection!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  godparentRequest(id: ID!): ChurrosGodparentRequest! @source(name: "godparentRequest", type: "GodparentRequest!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  godparentRequests: [ChurrosGodparentRequest!]! @source(name: "godparentRequests", type: "[GodparentRequest!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  group(uid: String!): ChurrosGroup! @source(name: "group", type: "Group!", subgraph: "Churros") @join__field(graph: CHURROS)
  groupMember(group: ChurrosUID! @source(name: "group", type: "UID!", subgraph: "Churros"), user: ChurrosUID! @source(name: "user", type: "UID!", subgraph: "Churros")): ChurrosGroupMember @source(name: "groupMember", type: "GroupMember", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  groupMembersCsv(groupUid: String!): ChurrosQueryGroupMembersCsvResult! @source(name: "groupMembersCsv", type: "QueryGroupMembersCsvResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  groups(
    types: [ChurrosGroupType!] @source(name: "types", type: "[GroupType!]", subgraph: "Churros")
    """Inclures les groupes non répertoriés"""
    unlisted: Boolean! = false
  ): [ChurrosGroup!]! @source(name: "groups", type: "[Group!]!", subgraph: "Churros") @join__field(graph: CHURROS)
  healthcheck: ChurrosHealthCheck! @source(name: "healthcheck", type: "HealthCheck!", subgraph: "Churros") @join__field(graph: CHURROS)
  """Gets the homepage articles, customized if the user is logged in."""
  homepage(after: String, before: String, first: Int, last: Int): ChurrosQueryHomepageConnection! @source(name: "homepage", type: "QueryHomepageConnection!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  issue(number: Int!): ChurrosIssue! @source(name: "issue", type: "Issue!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  issuesByUser: [ChurrosIssue!]! @source(name: "issuesByUser", type: "[Issue!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  kioskReload: Boolean! @hidden @join__field(graph: CHURROS)
  """Vrai si l'utilisateur·ice est connecté·e"""
  loggedIn(
    """
    Si renseigné, renvoie une erreur si l’utilisateur·ice n’est pas connecté·e
    """
    assert: String
  ): Boolean! @hidden @join__field(graph: CHURROS)
  logs(
    """Filtrer par action"""
    action: String
    after: String
    """Filtrer par zone"""
    area: String
    before: String
    first: Int
    last: Int
    """Filtrer dans le message de l'entrée de log"""
    message: String
    """Limiter les logs à ceux effectués par une certaine personne"""
    user: ChurrosUID @source(name: "user", type: "UID", subgraph: "Churros")
  ): ChurrosQueryLogsConnection! @source(name: "logs", type: "QueryLogsConnection!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  lydiaAccount(id: ID!): ChurrosLydiaAccount! @source(name: "lydiaAccount", type: "LydiaAccount!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  lydiaAccounts: [ChurrosLydiaAccount!]! @source(name: "lydiaAccounts", type: "[LydiaAccount!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  lydiaAccountsOfGroup(uid: String!): [ChurrosLydiaAccount!]! @source(name: "lydiaAccountsOfGroup", type: "[LydiaAccount!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS) @deprecated(reason: "Use group.lydiaAccounts instead")
  major(uid: String!): ChurrosMajor! @source(name: "major", type: "Major!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  majors(
    """Inclure les filières anciennes n'existant plus dans les cursus actuels"""
    discontinued: Boolean! = false
  ): [ChurrosMajor!]! @source(name: "majors", type: "[Major!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """
  Renvoie l’utilisateur·ice connecté·e, ou null. Pour une valeur de retour non-nullable, voir `assertMe`.
  """
  me: ChurrosUser @source(name: "me", type: "User", subgraph: "Churros") @join__field(graph: CHURROS)
  minor(id: ID!): ChurrosMinor! @source(name: "minor", type: "Minor!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  minors(after: String, before: String, first: Int, last: Int): ChurrosQueryMinorsConnection! @source(name: "minors", type: "QueryMinorsConnection!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  notification(id: ID!): ChurrosNotification! @source(name: "notification", type: "Notification!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  notificationSubscription(endpoint: String!): ChurrosNotificationSubscription! @source(name: "notificationSubscription", type: "NotificationSubscription!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  notificationSubscriptions: [ChurrosNotificationSubscription!]! @source(name: "notificationSubscriptions", type: "[NotificationSubscription!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  notifications(after: String, before: String, channels: [ChurrosNotificationChannel!] = [] @source(name: "channels", type: "[NotificationChannel!]", subgraph: "Churros"), first: Int, groupUids: [String!] = [], last: Int, subscriptionEndpoint: ID): ChurrosQueryNotificationsConnection! @source(name: "notifications", type: "QueryNotificationsConnection!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """
  Returns how many people will be notified if an article of the given visibility and group is created.
  """
  notificationsSendCountForArticle(group: ChurrosUID! @source(name: "group", type: "UID!", subgraph: "Churros"), visibility: ChurrosVisibility! @source(name: "visibility", type: "Visibility!", subgraph: "Churros")): Int! @hidden @join__field(graph: CHURROS)
  """
  Récupérer une page par son identifiant. Voir aussi `Group.page` et `StudentAssociation.page` pour des queries plus ergonomiques
  """
  page(id: ID!): ChurrosPage! @source(name: "page", type: "Page!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """
  Récupère toutes les pages existantes. Réservé aux administrateur·ice.s.
  """
  pages(after: String, before: String, first: Int, last: Int): ChurrosQueryPagesConnection! @source(name: "pages", type: "QueryPagesConnection!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  profile(uid: ChurrosUID! @source(name: "uid", type: "UID!", subgraph: "Churros")): ChurrosProfile! @source(name: "profile", type: "Profile!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Récupérer des informations sur un lien d'inscription rapide"""
  quickSignup(
    """Identifiant de l'inscription rapide. Si null, renvoie null"""
    id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")
  ): ChurrosQuickSignup! @source(name: "quickSignup", type: "QuickSignup!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  quickSignups(after: String, before: String, first: Int, last: Int): ChurrosQueryQuickSignupsConnection! @source(name: "quickSignups", type: "QueryQuickSignupsConnection!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  reaction(id: ID!): ChurrosReaction! @source(name: "reaction", type: "Reaction!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  reactions(after: String, before: String, first: Int, last: Int): ChurrosQueryReactionsConnection! @source(name: "reactions", type: "QueryReactionsConnection!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  registration(id: ID!): ChurrosQueryRegistrationResult! @source(name: "registration", type: "QueryRegistrationResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """
  Rendu de markdown en HTML. Demande a être authentifié·e pour éviter tout abus.
  """
  renderMarkdown(
    """Le markdown à rendre en HTML"""
    markdown: String!
  ): String! @hidden @join__field(graph: CHURROS)
  school(uid: String!): ChurrosSchool! @source(name: "school", type: "School!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  schoolGroups: [ChurrosSchoolGroup!]! @source(name: "schoolGroups", type: "[SchoolGroup!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  schools: [ChurrosSchool!]! @source(name: "schools", type: "[School!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Rechercher des ressources (personnes, groupes, événements, articles…)"""
  search(
    """Ne rechercher que certaines ressources"""
    only: [ChurrosSearchableResources!] @source(name: "only", type: "[SearchableResources!]", subgraph: "Churros")
    """Le texte de recherche"""
    q: String
  ): [ChurrosSearchResult!]! @source(name: "search", type: "[SearchResult!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  searchArticles(groupUid: String, q: String!): [ChurrosArticleSearchResult!]! @source(name: "searchArticles", type: "[ArticleSearchResult!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  searchDocuments(forApprentices: Boolean!, majorUid: String!, q: String!, yearTier: Int!): [ChurrosDocumentSearchResult!]! @source(name: "searchDocuments", type: "[DocumentSearchResult!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  searchEvents(groupUid: String, q: String!): [ChurrosEventSearchResult!]! @source(name: "searchEvents", type: "[EventSearchResult!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Recherche des formulaires"""
  searchForms(
    """La recherche"""
    q: String!
    similarityCutoff: Float
  ): [ChurrosFormSearchResult!]! @source(name: "searchForms", type: "[FormSearchResult!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  searchGroups(q: String, similarityCutoff: Float): [ChurrosGroupSearchResult!]! @source(name: "searchGroups", type: "[GroupSearchResult!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  searchUsers(q: String, similarityCutoff: Float): [ChurrosUserSearchResult!]! @source(name: "searchUsers", type: "[UserSearchResult!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  service(id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")): ChurrosService! @source(name: "service", type: "Service!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  services(
    """
    Renvoie uniquement les services intéréssant l'utilisateur·ice connecté·e
    """
    mine: Boolean!
  ): [ChurrosService!]! @source(name: "services", type: "[Service!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Identifiants des différentes promotions existantes"""
  specialOffers: [String!]! @hidden @join__field(graph: CHURROS)
  studentAssociation(uid: String!): ChurrosStudentAssociation! @source(name: "studentAssociation", type: "StudentAssociation!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  studentAssociations(canContributeOnly: Boolean): [ChurrosStudentAssociation!]! @source(name: "studentAssociations", type: "[StudentAssociation!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  subject(forApprentices: Boolean!, slug: String!, yearTier: Int!): ChurrosSubject! @source(name: "subject", type: "Subject!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  subjects: [ChurrosSubject!]! @source(name: "subjects", type: "[Subject!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """
  Génère un pseudo suggéré à partir des infos rentrées par l'utilisateur.ice en cours d'inscription
  """
  suggestedUid(
    """Prénom"""
    firstName: String!
    """Nom de famille"""
    lastName: String!
  ): String! @hidden @join__field(graph: CHURROS)
  themes(
    """
    Récupérer tous les thèmes auquel ont a accès, même ceux qui sont passés
    """
    all: Boolean
  ): [ChurrosTheme!]! @source(name: "themes", type: "[Theme!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  ticket(id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")): ChurrosTicket! @source(name: "ticket", type: "Ticket!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  ticketGroup(id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")): ChurrosTicketGroup! @source(name: "ticketGroup", type: "TicketGroup!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Vérifie si un identifiant (un “@” dans l'interface) est disponible"""
  uidIsAvailable(uid: ChurrosUID! @source(name: "uid", type: "UID!", subgraph: "Churros")): Boolean! @hidden @join__field(graph: CHURROS)
  upcomingChangelog: ChurrosQueryUpcomingChangelogResult! @source(name: "upcomingChangelog", type: "QueryUpcomingChangelogResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  user(id: ID, uid: String): ChurrosUser! @source(name: "user", type: "User!", subgraph: "Churros") @join__field(graph: CHURROS)
  userByEmail(email: String!): ChurrosUser! @source(name: "userByEmail", type: "User!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  userCandidate(token: String!): ChurrosUserCandidate! @source(name: "userCandidate", type: "UserCandidate!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  userCandidateByEmail(email: String!): ChurrosUserCandidate! @source(name: "userCandidateByEmail", type: "UserCandidate!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  userCandidates(after: String, before: String, first: Int, last: Int): ChurrosQueryUserCandidatesConnection! @source(name: "userCandidates", type: "QueryUserCandidatesConnection!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  userServices: [ChurrosService!]! @source(name: "userServices", type: "[Service!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS) @deprecated(reason: "Use `services(mine: true)` instead")
}

"""Serialize Application info"""
type App @join__type(graph: AUTHENTIK) {
  name: String!
  label: String!
}

"""Validation Error"""
type ValidationError @join__type(graph: AUTHENTIK) {
  nonFieldErrors: [String] @source(name: "non_field_errors", type: "[String]", subgraph: "Authentik")
  code: String
  additionalProperties: JSON @resolveRoot(subgraph: "Authentik")
}

"""Generic API Error"""
type GenericError @join__type(graph: AUTHENTIK) {
  detail: String!
  code: String
}

"""Login Metrics per 1h"""
type LoginMetrics @join__type(graph: AUTHENTIK) {
  logins: [Coordinate]!
  loginsFailed: [Coordinate]! @source(name: "logins_failed", type: "[Coordinate]!", subgraph: "Authentik")
  authorizations: [Coordinate]!
}

"""Coordinates for diagrams"""
type Coordinate @join__type(graph: AUTHENTIK) {
  xCord: BigInt! @source(name: "x_cord", type: "BigInt!", subgraph: "Authentik")
  yCord: BigInt! @source(name: "y_cord", type: "BigInt!", subgraph: "Authentik")
}

"""Settings Serializer"""
type Settings @join__type(graph: AUTHENTIK) {
  """Configure how authentik should show avatars for users."""
  avatars: String
  """Enable the ability for users to change their name."""
  defaultUserChangeName: Boolean @source(name: "default_user_change_name", type: "Boolean", subgraph: "Authentik")
  """Enable the ability for users to change their email address."""
  defaultUserChangeEmail: Boolean @source(name: "default_user_change_email", type: "Boolean", subgraph: "Authentik")
  """Enable the ability for users to change their username."""
  defaultUserChangeUsername: Boolean @source(name: "default_user_change_username", type: "Boolean", subgraph: "Authentik")
  """
  Events will be deleted after this duration.(Format: weeks=3;days=2;hours=3,seconds=2).
  """
  eventRetention: String @source(name: "event_retention", type: "String", subgraph: "Authentik")
  """The option configures the footer links on the flow executor pages."""
  footerLinks: JSON @source(name: "footer_links", type: "JSON", subgraph: "Authentik")
  """
  When enabled, all the events caused by a user will be deleted upon the user's deletion.
  """
  gdprCompliance: Boolean @source(name: "gdpr_compliance", type: "Boolean", subgraph: "Authentik")
  """Globally enable/disable impersonation."""
  impersonation: Boolean
  """Default token duration"""
  defaultTokenDuration: String @source(name: "default_token_duration", type: "String", subgraph: "Authentik")
  """Default token length"""
  defaultTokenLength: PositiveInt @source(name: "default_token_length", type: "PositiveInt", subgraph: "Authentik")
}

"""Get system information."""
type SystemInfo @join__type(graph: AUTHENTIK) {
  """Get HTTP Request headers"""
  httpHeaders: JSON! @source(name: "http_headers", type: "JSON!", subgraph: "Authentik")
  """Get HTTP host"""
  httpHost: String! @source(name: "http_host", type: "String!", subgraph: "Authentik")
  """Get HTTP Secure flag"""
  httpIsSecure: Boolean! @source(name: "http_is_secure", type: "Boolean!", subgraph: "Authentik")
  runtime: QueryAdminSystemRetrieveOneOf_0Runtime! @source(name: "runtime", type: "query_admin_system_retrieve_oneOf_0_runtime!", subgraph: "Authentik")
  """Currently active brand"""
  brand: String!
  """Current server time"""
  serverTime: DateTime! @source(name: "server_time", type: "DateTime!", subgraph: "Authentik")
  """Whether the embedded outpost is disabled"""
  embeddedOutpostDisabled: Boolean! @source(name: "embedded_outpost_disabled", type: "Boolean!", subgraph: "Authentik")
  """Get the FQDN configured on the embedded outpost"""
  embeddedOutpostHost: String! @source(name: "embedded_outpost_host", type: "String!", subgraph: "Authentik")
}

"""Get versions"""
type QueryAdminSystemRetrieveOneOf_0Runtime @source(name: "query_admin_system_retrieve_oneOf_0_runtime", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pythonVersion: String! @source(name: "python_version", type: "String!", subgraph: "Authentik")
  environment: String!
  architecture: String!
  platform: String!
  uname: String!
  opensslVersion: String! @source(name: "openssl_version", type: "String!", subgraph: "Authentik")
  opensslFipsEnabled: Boolean @source(name: "openssl_fips_enabled", type: "Boolean", subgraph: "Authentik")
  authentikVersion: String! @source(name: "authentik_version", type: "String!", subgraph: "Authentik")
}

"""Get running and latest version."""
type Version @join__type(graph: AUTHENTIK) {
  """Get current version"""
  versionCurrent: String! @source(name: "version_current", type: "String!", subgraph: "Authentik")
  """Get latest version from cache"""
  versionLatest: String! @source(name: "version_latest", type: "String!", subgraph: "Authentik")
  """Check if latest version is valid"""
  versionLatestValid: Boolean! @source(name: "version_latest_valid", type: "Boolean!", subgraph: "Authentik")
  """Get build hash, if version is not latest or released"""
  buildHash: String! @source(name: "build_hash", type: "String!", subgraph: "Authentik")
  """Check if we're running the latest version"""
  outdated: Boolean!
  """Check if any outpost is outdated/has a version mismatch"""
  outpostOutdated: Boolean! @source(name: "outpost_outdated", type: "Boolean!", subgraph: "Authentik")
}

"""VersionHistory Serializer"""
type VersionHistory @join__type(graph: AUTHENTIK) {
  id: Int!
  timestamp: DateTime!
  version: String!
  build: String!
}

type Workers @join__type(graph: AUTHENTIK) {
  count: Int!
}

"""Serializer for Duo authenticator devices"""
type Device @join__type(graph: AUTHENTIK) {
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  pk: String!
  name: String!
  """Get type of device"""
  type: String!
  confirmed: Boolean!
  created: DateTime!
  lastUpdated: DateTime! @source(name: "last_updated", type: "DateTime!", subgraph: "Authentik")
  lastUsed: DateTime @source(name: "last_used", type: "DateTime", subgraph: "Authentik")
  """Get extra description"""
  extraDescription: String! @source(name: "extra_description", type: "String!", subgraph: "Authentik")
}

type PaginatedDuoDeviceList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [DuoDevice]!
}

type Pagination @join__type(graph: AUTHENTIK) {
  next: Float!
  previous: Float!
  count: Float!
  current: Float!
  totalPages: Float! @source(name: "total_pages", type: "Float!", subgraph: "Authentik")
  startIndex: Float! @source(name: "start_index", type: "Float!", subgraph: "Authentik")
  endIndex: Float! @source(name: "end_index", type: "Float!", subgraph: "Authentik")
}

"""Serializer for Duo authenticator devices"""
type DuoDevice @join__type(graph: AUTHENTIK) {
  pk: Int!
  """The human-readable name of this device."""
  name: QueryAuthenticatorsAdminDuoListOneOf_0ResultsItemsName! @source(name: "name", type: "query_authenticators_admin_duo_list_oneOf_0_results_items_name!", subgraph: "Authentik")
}

type PaginatedEndpointDeviceList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [EndpointDevice]!
}

"""Serializer for Endpoint authenticator devices"""
type EndpointDevice @join__type(graph: AUTHENTIK) {
  pk: UUID
  """The human-readable name of this device."""
  name: QueryAuthenticatorsAdminEndpointListOneOf_0ResultsItemsName! @source(name: "name", type: "query_authenticators_admin_endpoint_list_oneOf_0_results_items_name!", subgraph: "Authentik")
}

type PaginatedSmsDeviceList @source(name: "PaginatedSMSDeviceList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [SmsDevice]! @source(name: "results", type: "[SMSDevice]!", subgraph: "Authentik")
}

"""Serializer for sms authenticator devices"""
type SmsDevice @source(name: "SMSDevice", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """The human-readable name of this device."""
  name: QueryAuthenticatorsAdminSmsListOneOf_0ResultsItemsName! @source(name: "name", type: "query_authenticators_admin_sms_list_oneOf_0_results_items_name!", subgraph: "Authentik")
  pk: Int!
  phoneNumber: String! @source(name: "phone_number", type: "String!", subgraph: "Authentik")
}

type PaginatedStaticDeviceList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [StaticDevice]!
}

"""Serializer for static authenticator devices"""
type StaticDevice @join__type(graph: AUTHENTIK) {
  """The human-readable name of this device."""
  name: QueryAuthenticatorsAdminStaticListOneOf_0ResultsItemsName! @source(name: "name", type: "query_authenticators_admin_static_list_oneOf_0_results_items_name!", subgraph: "Authentik")
  tokenSet: [StaticDeviceToken]! @source(name: "token_set", type: "[StaticDeviceToken]!", subgraph: "Authentik")
  pk: Int!
}

"""Serializer for static device's tokens"""
type StaticDeviceToken @join__type(graph: AUTHENTIK) {
  token: QueryAuthenticatorsAdminStaticListOneOf_0ResultsItemsTokenSetItemsToken! @source(name: "token", type: "query_authenticators_admin_static_list_oneOf_0_results_items_token_set_items_token!", subgraph: "Authentik")
}

type PaginatedTotpDeviceList @source(name: "PaginatedTOTPDeviceList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [TotpDevice]! @source(name: "results", type: "[TOTPDevice]!", subgraph: "Authentik")
}

"""Serializer for totp authenticator devices"""
type TotpDevice @source(name: "TOTPDevice", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """The human-readable name of this device."""
  name: QueryAuthenticatorsAdminTotpListOneOf_0ResultsItemsName! @source(name: "name", type: "query_authenticators_admin_totp_list_oneOf_0_results_items_name!", subgraph: "Authentik")
  pk: Int!
}

type PaginatedWebAuthnDeviceList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [WebAuthnDevice]!
}

"""Serializer for WebAuthn authenticator devices"""
type WebAuthnDevice @join__type(graph: AUTHENTIK) {
  pk: Int!
  name: QueryAuthenticatorsAdminWebauthnListOneOf_0ResultsItemsName! @source(name: "name", type: "query_authenticators_admin_webauthn_list_oneOf_0_results_items_name!", subgraph: "Authentik")
  createdOn: DateTime! @source(name: "created_on", type: "DateTime!", subgraph: "Authentik")
  deviceType: WebAuthnDeviceType! @source(name: "device_type", type: "WebAuthnDeviceType!", subgraph: "Authentik")
  aaguid: String!
}

"""WebAuthnDeviceType Serializer"""
type WebAuthnDeviceType @join__type(graph: AUTHENTIK) {
  aaguid: UUID!
  description: String!
}

"""A list of all objects referencing the queried object"""
type UsedBy @join__type(graph: AUTHENTIK) {
  app: String!
  modelName: String! @source(name: "model_name", type: "String!", subgraph: "Authentik")
  pk: String!
  name: String!
  action: UsedByActionEnum!
}

type PaginatedApplicationList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [Application]!
}

"""Application Serializer"""
type Application @join__type(graph: AUTHENTIK) {
  pk: UUID!
  """Application's display Name."""
  name: String!
  slug: QueryCoreApplicationsListOneOf_0ResultsItemsSlug! @source(name: "slug", type: "query_core_applications_list_oneOf_0_results_items_slug!", subgraph: "Authentik")
  provider: Int
  providerObj: Provider! @source(name: "provider_obj", type: "Provider!", subgraph: "Authentik")
  backchannelProviders: [Int] @source(name: "backchannel_providers", type: "[Int]", subgraph: "Authentik")
  backchannelProvidersObj: [Provider]! @source(name: "backchannel_providers_obj", type: "[Provider]!", subgraph: "Authentik")
  """Allow formatting of launch URL"""
  launchUrl: String @source(name: "launch_url", type: "String", subgraph: "Authentik")
  """Open launch URL in a new browser tab or window."""
  openInNewTab: Boolean @source(name: "open_in_new_tab", type: "Boolean", subgraph: "Authentik")
  metaLaunchUrl: URL @source(name: "meta_launch_url", type: "URL", subgraph: "Authentik")
  """
  Get the URL to the App Icon image. If the name is /static or starts with http
  it is returned as-is
  """
  metaIcon: String @source(name: "meta_icon", type: "String", subgraph: "Authentik")
  metaDescription: String @source(name: "meta_description", type: "String", subgraph: "Authentik")
  metaPublisher: String @source(name: "meta_publisher", type: "String", subgraph: "Authentik")
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  groupSlug: String @source(name: "group", type: "String", subgraph: "Authentik")
  churrosGroup: ChurrosGroup @resolveTo(sourceName: "Churros", sourceTypeName: "Query", sourceFieldName: "group", requiredSelectionSet: "{ metaPublisher }", sourceArgs: {uid: "{root.metaPublisher}"}) @additionalField
  oauth2Provider: ProvidersOauth2RetrieveResponse @resolveTo(sourceName: "Authentik", sourceTypeName: "Query", sourceFieldName: "providers_oauth2_retrieve", requiredSelectionSet: "{provider}", sourceArgs: {id: "{root.provider}"}, resultType: "OAuth2Provider") @additionalField
  metrics: [CoreApplicationsMetricsListResponse] @resolveTo(sourceName: "Authentik", sourceTypeName: "Query", sourceFieldName: "core_applications_metrics_list", requiredSelectionSet: "{ slug }", sourceArgs: {slug: "{root.slug}"}) @additionalField
}

"""Provider Serializer"""
type Provider @join__type(graph: AUTHENTIK) {
  pk: Int!
  name: String!
  """
  Flow used for authentication when the associated application is accessed by an un-authenticated user.
  """
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow used when authorizing this provider."""
  authorizationFlow: UUID! @source(name: "authorization_flow", type: "UUID!", subgraph: "Authentik")
  """Flow used ending the session from a provider."""
  invalidationFlow: UUID! @source(name: "invalidation_flow", type: "UUID!", subgraph: "Authentik")
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  """Get object component so that we know how to edit the object"""
  component: String!
  """Internal application name, used in URLs."""
  assignedApplicationSlug: String! @source(name: "assigned_application_slug", type: "String!", subgraph: "Authentik")
  """Application's display Name."""
  assignedApplicationName: String! @source(name: "assigned_application_name", type: "String!", subgraph: "Authentik")
  """Internal application name, used in URLs."""
  assignedBackchannelApplicationSlug: String! @source(name: "assigned_backchannel_application_slug", type: "String!", subgraph: "Authentik")
  """Application's display Name."""
  assignedBackchannelApplicationName: String! @source(name: "assigned_backchannel_application_name", type: "String!", subgraph: "Authentik")
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  additionalProperties: JSON @resolveRoot(subgraph: "Authentik")
  application: CoreApplicationsRetrieveResponse @resolveTo(sourceName: "Authentik", sourceTypeName: "Query", sourceFieldName: "core_applications_retrieve", requiredSelectionSet: "{ assignedApplicationSlug }", sourceArgs: {slug: "{root.assignedApplicationSlug}"}) @additionalField
}

"""result of a policy test"""
type PolicyTestResult @join__type(graph: AUTHENTIK) {
  passing: Boolean!
  messages: [String]!
  logMessages: [LogEvent]! @source(name: "log_messages", type: "[LogEvent]!", subgraph: "Authentik")
}

"""Single log message with all context logged."""
type LogEvent @join__type(graph: AUTHENTIK) {
  timestamp: DateTime!
  logLevel: LogLevelEnum! @source(name: "log_level", type: "LogLevelEnum!", subgraph: "Authentik")
  logger: String!
  event: String!
  attributes: JSON!
}

type PaginatedAuthenticatedSessionList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [AuthenticatedSession]!
}

"""AuthenticatedSession Serializer"""
type AuthenticatedSession @join__type(graph: AUTHENTIK) {
  uuid: UUID
  """Check if session is currently active session"""
  current: Boolean!
  userAgent: QueryCoreAuthenticatedSessionsListOneOf_0ResultsItemsUserAgent! @source(name: "user_agent", type: "query_core_authenticated_sessions_list_oneOf_0_results_items_user_agent!", subgraph: "Authentik")
  geoIp: QueryCoreAuthenticatedSessionsListOneOf_0ResultsItemsGeoIp @source(name: "geo_ip", type: "query_core_authenticated_sessions_list_oneOf_0_results_items_geo_ip", subgraph: "Authentik")
  asn: QueryCoreAuthenticatedSessionsListOneOf_0ResultsItemsAsn @source(name: "asn", type: "query_core_authenticated_sessions_list_oneOf_0_results_items_asn", subgraph: "Authentik")
  user: Int!
  lastIp: String! @source(name: "last_ip", type: "String!", subgraph: "Authentik")
  lastUserAgent: String @source(name: "last_user_agent", type: "String", subgraph: "Authentik")
  lastUsed: DateTime! @source(name: "last_used", type: "DateTime!", subgraph: "Authentik")
  expires: DateTime
}

"""Get parsed user agent"""
type QueryCoreAuthenticatedSessionsListOneOf_0ResultsItemsUserAgent @source(name: "query_core_authenticated_sessions_list_oneOf_0_results_items_user_agent", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  device: QueryCoreAuthenticatedSessionsListOneOf_0ResultsItemsUserAgentDevice! @source(name: "device", type: "query_core_authenticated_sessions_list_oneOf_0_results_items_user_agent_device!", subgraph: "Authentik")
  os: QueryCoreAuthenticatedSessionsListOneOf_0ResultsItemsUserAgentOs! @source(name: "os", type: "query_core_authenticated_sessions_list_oneOf_0_results_items_user_agent_os!", subgraph: "Authentik")
  userAgent: QueryCoreAuthenticatedSessionsListOneOf_0ResultsItemsUserAgentUserAgent! @source(name: "user_agent", type: "query_core_authenticated_sessions_list_oneOf_0_results_items_user_agent_user_agent!", subgraph: "Authentik")
  string: String!
}

"""User agent device"""
type QueryCoreAuthenticatedSessionsListOneOf_0ResultsItemsUserAgentDevice @source(name: "query_core_authenticated_sessions_list_oneOf_0_results_items_user_agent_device", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  brand: String!
  family: String!
  model: String!
}

"""User agent os"""
type QueryCoreAuthenticatedSessionsListOneOf_0ResultsItemsUserAgentOs @source(name: "query_core_authenticated_sessions_list_oneOf_0_results_items_user_agent_os", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  family: String!
  major: String!
  minor: String!
  patch: String!
  patchMinor: String! @source(name: "patch_minor", type: "String!", subgraph: "Authentik")
}

"""User agent browser"""
type QueryCoreAuthenticatedSessionsListOneOf_0ResultsItemsUserAgentUserAgent @source(name: "query_core_authenticated_sessions_list_oneOf_0_results_items_user_agent_user_agent", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  family: String!
  major: String!
  minor: String!
  patch: String!
}

"""Get GeoIP Data"""
type QueryCoreAuthenticatedSessionsListOneOf_0ResultsItemsGeoIp @source(name: "query_core_authenticated_sessions_list_oneOf_0_results_items_geo_ip", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  continent: String!
  country: String!
  lat: Float!
  long: Float!
  city: String!
}

"""Get ASN Data"""
type QueryCoreAuthenticatedSessionsListOneOf_0ResultsItemsAsn @source(name: "query_core_authenticated_sessions_list_oneOf_0_results_items_asn", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  asn: Int!
  asOrg: String @source(name: "as_org", type: "String", subgraph: "Authentik")
  network: String
}

type PaginatedBrandList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [Brand]!
}

"""Brand Serializer"""
type Brand @join__type(graph: AUTHENTIK) {
  brandUuid: UUID! @source(name: "brand_uuid", type: "UUID!", subgraph: "Authentik")
  """
  Domain that activates this brand. Can be a superset, i.e. `a.b` for `aa.b` and `ba.b`
  """
  domain: String!
  default: Boolean
  brandingTitle: String @source(name: "branding_title", type: "String", subgraph: "Authentik")
  brandingLogo: String @source(name: "branding_logo", type: "String", subgraph: "Authentik")
  brandingFavicon: String @source(name: "branding_favicon", type: "String", subgraph: "Authentik")
  flowAuthentication: UUID @source(name: "flow_authentication", type: "UUID", subgraph: "Authentik")
  flowInvalidation: UUID @source(name: "flow_invalidation", type: "UUID", subgraph: "Authentik")
  flowRecovery: UUID @source(name: "flow_recovery", type: "UUID", subgraph: "Authentik")
  flowUnenrollment: UUID @source(name: "flow_unenrollment", type: "UUID", subgraph: "Authentik")
  flowUserSettings: UUID @source(name: "flow_user_settings", type: "UUID", subgraph: "Authentik")
  flowDeviceCode: UUID @source(name: "flow_device_code", type: "UUID", subgraph: "Authentik")
  """
  When set, external users will be redirected to this application after authenticating.
  """
  defaultApplication: UUID @source(name: "default_application", type: "UUID", subgraph: "Authentik")
  """Web Certificate used by the authentik Core webserver."""
  webCertificate: UUID @source(name: "web_certificate", type: "UUID", subgraph: "Authentik")
  attributes: JSON
}

"""Partial brand information for styling"""
type CurrentBrand @join__type(graph: AUTHENTIK) {
  matchedDomain: String! @source(name: "matched_domain", type: "String!", subgraph: "Authentik")
  brandingTitle: String! @source(name: "branding_title", type: "String!", subgraph: "Authentik")
  brandingLogo: String! @source(name: "branding_logo", type: "String!", subgraph: "Authentik")
  brandingFavicon: String! @source(name: "branding_favicon", type: "String!", subgraph: "Authentik")
  uiFooterLinks: [FooterLink]! @source(name: "ui_footer_links", type: "[FooterLink]!", subgraph: "Authentik")
  uiTheme: UiThemeEnum! @source(name: "ui_theme", type: "UiThemeEnum!", subgraph: "Authentik")
  flowAuthentication: String @source(name: "flow_authentication", type: "String", subgraph: "Authentik")
  flowInvalidation: String @source(name: "flow_invalidation", type: "String", subgraph: "Authentik")
  flowRecovery: String @source(name: "flow_recovery", type: "String", subgraph: "Authentik")
  flowUnenrollment: String @source(name: "flow_unenrollment", type: "String", subgraph: "Authentik")
  flowUserSettings: String @source(name: "flow_user_settings", type: "String", subgraph: "Authentik")
  flowDeviceCode: String @source(name: "flow_device_code", type: "String", subgraph: "Authentik")
  defaultLocale: String! @source(name: "default_locale", type: "String!", subgraph: "Authentik")
}

"""Links returned in Config API"""
type FooterLink @join__type(graph: AUTHENTIK) {
  href: String
  name: String!
}

type PaginatedGroupList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [Group]!
}

"""Group Serializer"""
type Group @join__type(graph: AUTHENTIK) {
  pk: UUID!
  numPk: Int! @source(name: "num_pk", type: "Int!", subgraph: "Authentik")
  name: String!
  """Users added to this group will be superusers."""
  isSuperuser: Boolean @source(name: "is_superuser", type: "Boolean", subgraph: "Authentik")
  parent: UUID
  parentName: String @source(name: "parent_name", type: "String", subgraph: "Authentik")
  users: [Int]
  usersObj: [GroupMember] @source(name: "users_obj", type: "[GroupMember]", subgraph: "Authentik")
  attributes: JSON
  roles: [UUID]
  rolesObj: [Role]! @source(name: "roles_obj", type: "[Role]!", subgraph: "Authentik")
  additionalProperties: JSON @resolveRoot(subgraph: "Authentik")
}

"""Stripped down user serializer to show relevant users for groups"""
type GroupMember @join__type(graph: AUTHENTIK) {
  pk: Int!
  username: QueryCoreGroupsListOneOf_0ResultsItemsUsersObjItemsUsername! @source(name: "username", type: "query_core_groups_list_oneOf_0_results_items_users_obj_items_username!", subgraph: "Authentik")
  """User's display name."""
  name: String!
  """
  Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
  """
  isActive: Boolean @source(name: "is_active", type: "Boolean", subgraph: "Authentik")
  lastLogin: DateTime @source(name: "last_login", type: "DateTime", subgraph: "Authentik")
  email: EmailAddress
  attributes: JSON
  uid: String!
  additionalProperties: JSON @resolveRoot(subgraph: "Authentik")
}

"""Role serializer"""
type Role @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: QueryCoreGroupsListOneOf_0ResultsItemsRolesObjItemsName! @source(name: "name", type: "query_core_groups_list_oneOf_0_results_items_roles_obj_items_name!", subgraph: "Authentik")
}

type PaginatedTokenList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [Token]!
}

"""Token Serializer"""
type Token @join__type(graph: AUTHENTIK) {
  pk: UUID!
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: String
  identifier: QueryCoreTokensListOneOf_0ResultsItemsIdentifier! @source(name: "identifier", type: "query_core_tokens_list_oneOf_0_results_items_identifier!", subgraph: "Authentik")
  intent: IntentEnum
  user: Int
  userObj: User! @source(name: "user_obj", type: "User!", subgraph: "Authentik")
  description: String
  expires: DateTime
  expiring: Boolean
  additionalProperties: JSON @resolveRoot(subgraph: "Authentik")
}

"""User Serializer"""
type User @join__type(graph: AUTHENTIK) {
  pk: Int!
  username: QueryCoreTokensListOneOf_0ResultsItemsUserObjUsername! @source(name: "username", type: "query_core_tokens_list_oneOf_0_results_items_user_obj_username!", subgraph: "Authentik")
  """User's display name."""
  name: String!
  """
  Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
  """
  isActive: Boolean @source(name: "is_active", type: "Boolean", subgraph: "Authentik")
  lastLogin: DateTime @source(name: "last_login", type: "DateTime", subgraph: "Authentik")
  isSuperuser: Boolean! @source(name: "is_superuser", type: "Boolean!", subgraph: "Authentik")
  groups: [UUID]
  groupsObj: [UserGroup] @source(name: "groups_obj", type: "[UserGroup]", subgraph: "Authentik")
  email: EmailAddress
  """User's avatar, either a http/https URL or a data URI"""
  avatar: String!
  attributes: JSON
  uid: String!
  path: String
  type: UserTypeEnum
  uuid: UUID!
  additionalProperties: JSON @resolveRoot(subgraph: "Authentik")
}

"""Simplified Group Serializer for user's groups"""
type UserGroup @join__type(graph: AUTHENTIK) {
  pk: UUID!
  """Get a numerical, int32 ID for the group"""
  numPk: Int! @source(name: "num_pk", type: "Int!", subgraph: "Authentik")
  name: String!
  """Users added to this group will be superusers."""
  isSuperuser: Boolean @source(name: "is_superuser", type: "Boolean", subgraph: "Authentik")
  parent: UUID
  parentName: String @source(name: "parent_name", type: "String", subgraph: "Authentik")
  attributes: JSON
  additionalProperties: JSON @resolveRoot(subgraph: "Authentik")
}

"""Show token's current key"""
type TokenView @join__type(graph: AUTHENTIK) {
  key: String!
}

type PaginatedUserConsentList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [UserConsent]!
}

"""UserConsent Serializer"""
type UserConsent @join__type(graph: AUTHENTIK) {
  pk: Int!
  expires: DateTime
  expiring: Boolean
  user: User!
  application: Application!
  permissions: String
}

type PaginatedUserList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [User]!
}

"""User Metrics"""
type UserMetrics @join__type(graph: AUTHENTIK) {
  logins: [Coordinate]!
  loginsFailed: [Coordinate]! @source(name: "logins_failed", type: "[Coordinate]!", subgraph: "Authentik")
  authorizations: [Coordinate]!
}

type VoidContainer @source(name: "Void_container", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  void: Void @resolveRoot(subgraph: "Authentik") @source(name: "Void", type: "Void", subgraph: "Authentik")
}

"""
Response for the /user/me endpoint, returns the currently active user (as `user` property)
and, if this user is being impersonated, the original user in the `original` property.
"""
type SessionUser @join__type(graph: AUTHENTIK) {
  user: UserSelf!
  original: UserSelf
}

"""User Serializer for information a user can retrieve about themselves"""
type UserSelf @join__type(graph: AUTHENTIK) {
  pk: Int!
  username: QueryCoreUsersMeRetrieveOneOf_0UserUsername! @source(name: "username", type: "query_core_users_me_retrieve_oneOf_0_user_username!", subgraph: "Authentik")
  """User's display name."""
  name: String!
  """
  Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
  """
  isActive: Boolean! @source(name: "is_active", type: "Boolean!", subgraph: "Authentik")
  isSuperuser: Boolean! @source(name: "is_superuser", type: "Boolean!", subgraph: "Authentik")
  groups: [UserSelfGroups]!
  email: EmailAddress
  """User's avatar, either a http/https URL or a data URI"""
  avatar: String!
  uid: String!
  """Get user settings with brand and group settings applied"""
  settings: JSON!
  type: UserTypeEnum
  """Get all system permissions assigned to the user"""
  systemPermissions: [String]! @source(name: "system_permissions", type: "[String]!", subgraph: "Authentik")
}

type UserSelfGroups @join__type(graph: AUTHENTIK) {
  name: String!
  pk: String!
}

type UserPath @join__type(graph: AUTHENTIK) {
  paths: [String]!
}

type PaginatedCertificateKeyPairList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [CertificateKeyPair]!
}

"""CertificateKeyPair Serializer"""
type CertificateKeyPair @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """Get certificate Hash (SHA256)"""
  fingerprintSha256: String @source(name: "fingerprint_sha256", type: "String", subgraph: "Authentik")
  """Get certificate Hash (SHA1)"""
  fingerprintSha1: String @source(name: "fingerprint_sha1", type: "String", subgraph: "Authentik")
  """Get certificate expiry"""
  certExpiry: DateTime @source(name: "cert_expiry", type: "DateTime", subgraph: "Authentik")
  """Get certificate subject as full rfc4514"""
  certSubject: String @source(name: "cert_subject", type: "String", subgraph: "Authentik")
  """Show if this keypair has a private key configured or not"""
  privateKeyAvailable: Boolean! @source(name: "private_key_available", type: "Boolean!", subgraph: "Authentik")
  """Get the private key's type, if set"""
  privateKeyType: String @source(name: "private_key_type", type: "String", subgraph: "Authentik")
  """Get URL to download certificate"""
  certificateDownloadUrl: String! @source(name: "certificate_download_url", type: "String!", subgraph: "Authentik")
  """Get URL to download private key"""
  privateKeyDownloadUrl: String! @source(name: "private_key_download_url", type: "String!", subgraph: "Authentik")
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: String
}

"""Get CertificateKeyPair's data"""
type CertificateData @join__type(graph: AUTHENTIK) {
  data: String!
}

type PaginatedLicenseList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [License]!
}

"""License Serializer"""
type License @join__type(graph: AUTHENTIK) {
  licenseUuid: UUID! @source(name: "license_uuid", type: "UUID!", subgraph: "Authentik")
  name: String!
  key: String!
  expiry: DateTime!
  internalUsers: Int! @source(name: "internal_users", type: "Int!", subgraph: "Authentik")
  externalUsers: Int! @source(name: "external_users", type: "Int!", subgraph: "Authentik")
}

"""Serializer for license forecast"""
type LicenseForecast @join__type(graph: AUTHENTIK) {
  internalUsers: Int! @source(name: "internal_users", type: "Int!", subgraph: "Authentik")
  externalUsers: Int! @source(name: "external_users", type: "Int!", subgraph: "Authentik")
  forecastedInternalUsers: Int! @source(name: "forecasted_internal_users", type: "Int!", subgraph: "Authentik")
  forecastedExternalUsers: Int! @source(name: "forecasted_external_users", type: "Int!", subgraph: "Authentik")
}

type InstallId @source(name: "InstallID", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  installId: String! @source(name: "install_id", type: "String!", subgraph: "Authentik")
}

"""Serializer for license status"""
type LicenseSummary @join__type(graph: AUTHENTIK) {
  internalUsers: Int! @source(name: "internal_users", type: "Int!", subgraph: "Authentik")
  externalUsers: Int! @source(name: "external_users", type: "Int!", subgraph: "Authentik")
  status: LicenseSummaryStatusEnum!
  latestValid: DateTime! @source(name: "latest_valid", type: "DateTime!", subgraph: "Authentik")
  licenseFlags: [LicenseFlagsEnum]! @source(name: "license_flags", type: "[LicenseFlagsEnum]!", subgraph: "Authentik")
}

type PaginatedEventList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [Event]!
}

"""Event Serializer"""
type Event @join__type(graph: AUTHENTIK) {
  pk: UUID!
  user: JSON
  action: EventActions!
  app: String!
  context: JSON
  clientIp: String @source(name: "client_ip", type: "String", subgraph: "Authentik")
  created: DateTime!
  expires: DateTime
  brand: JSON
}

"""Types of an object that can be created"""
type TypeCreate @join__type(graph: AUTHENTIK) {
  name: String!
  description: String!
  component: String!
  modelName: String! @source(name: "model_name", type: "String!", subgraph: "Authentik")
  iconUrl: String @source(name: "icon_url", type: "String", subgraph: "Authentik")
  requiresEnterprise: Boolean @source(name: "requires_enterprise", type: "Boolean", subgraph: "Authentik")
}

"""Response object of Event's top_per_user"""
type EventTopPerUser @join__type(graph: AUTHENTIK) {
  application: JSON!
  countedEvents: Int! @source(name: "counted_events", type: "Int!", subgraph: "Authentik")
  uniqueUsers: Int! @source(name: "unique_users", type: "Int!", subgraph: "Authentik")
}

type PaginatedNotificationList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [Notification]!
}

"""Notification Serializer"""
type Notification @join__type(graph: AUTHENTIK) {
  pk: UUID!
  severity: SeverityEnum!
  body: String!
  created: DateTime!
  event: Event
  seen: Boolean
}

type PaginatedNotificationRuleList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [NotificationRule]!
}

"""NotificationRule Serializer"""
type NotificationRule @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """
  Select which transports should be used to notify the user. If none are selected, the notification will only be shown in the authentik UI.
  """
  transports: [UUID]
  severity: SeverityEnum
  """
  Define which group of users this notification should be sent and shown to. If left empty, Notification won't ben sent.
  """
  group: UUID
  groupObj: Group! @source(name: "group_obj", type: "Group!", subgraph: "Authentik")
}

type PaginatedSystemTaskList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [SystemTask]!
}

"""Serialize TaskInfo and TaskResult"""
type SystemTask @join__type(graph: AUTHENTIK) {
  uuid: UUID!
  name: String!
  """Get full name with UID"""
  fullName: String! @source(name: "full_name", type: "String!", subgraph: "Authentik")
  uid: String
  description: String!
  startTimestamp: DateTime! @source(name: "start_timestamp", type: "DateTime!", subgraph: "Authentik")
  finishTimestamp: DateTime! @source(name: "finish_timestamp", type: "DateTime!", subgraph: "Authentik")
  duration: Float!
  status: SystemTaskStatusEnum!
  messages: [LogEvent]!
  expires: DateTime
  expiring: Boolean
}

type PaginatedNotificationTransportList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [NotificationTransport]!
}

"""NotificationTransport Serializer"""
type NotificationTransport @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  mode: NotificationTransportModeEnum
  """Return selected mode with a UI Label"""
  modeVerbose: String! @source(name: "mode_verbose", type: "String!", subgraph: "Authentik")
  webhookUrl: URL @source(name: "webhook_url", type: "URL", subgraph: "Authentik")
  webhookMapping: UUID @source(name: "webhook_mapping", type: "UUID", subgraph: "Authentik")
  """
  Only send notification once, for example when sending a webhook into a chat channel.
  """
  sendOnce: Boolean @source(name: "send_once", type: "Boolean", subgraph: "Authentik")
}

type PaginatedFlowStageBindingList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [FlowStageBinding]!
}

"""FlowStageBinding Serializer"""
type FlowStageBinding @join__type(graph: AUTHENTIK) {
  pk: UUID!
  policybindingmodelPtrId: UUID! @source(name: "policybindingmodel_ptr_id", type: "UUID!", subgraph: "Authentik")
  target: UUID!
  stage: UUID!
  stageObj: Stage! @source(name: "stage_obj", type: "Stage!", subgraph: "Authentik")
  """Evaluate policies during the Flow planning process."""
  evaluateOnPlan: Boolean @source(name: "evaluate_on_plan", type: "Boolean", subgraph: "Authentik")
  """Evaluate policies when the Stage is present to the user."""
  reEvaluatePolicies: Boolean @source(name: "re_evaluate_policies", type: "Boolean", subgraph: "Authentik")
  order: Int!
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  invalidResponseAction: InvalidResponseActionEnum @source(name: "invalid_response_action", type: "InvalidResponseActionEnum", subgraph: "Authentik")
  additionalProperties: JSON @resolveRoot(subgraph: "Authentik")
}

"""Stage Serializer"""
type Stage @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """Get object type so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  flowSet: [FlowSet] @source(name: "flow_set", type: "[FlowSet]", subgraph: "Authentik")
  additionalProperties: JSON @resolveRoot(subgraph: "Authentik")
}

"""Stripped down flow serializer"""
type FlowSet @join__type(graph: AUTHENTIK) {
  pk: UUID!
  policybindingmodelPtrId: UUID! @source(name: "policybindingmodel_ptr_id", type: "UUID!", subgraph: "Authentik")
  name: String!
  slug: QueryFlowsBindingsListOneOf_0ResultsItemsStageObjFlowSetItemsSlug! @source(name: "slug", type: "query_flows_bindings_list_oneOf_0_results_items_stage_obj_flow_set_items_slug!", subgraph: "Authentik")
  """Shown as the Title in Flow pages."""
  title: String!
  designation: FlowDesignationEnum!
  """
  Get the URL to the background image. If the name is /static or starts with http
  it is returned as-is
  """
  background: String!
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  """
  Enable compatibility mode, increases compatibility with password managers on mobile devices.
  """
  compatibilityMode: Boolean @source(name: "compatibility_mode", type: "Boolean", subgraph: "Authentik")
  """Get export URL for flow"""
  exportUrl: String! @source(name: "export_url", type: "String!", subgraph: "Authentik")
  layout: FlowLayoutEnum
  deniedAction: DeniedActionEnum @source(name: "denied_action", type: "DeniedActionEnum", subgraph: "Authentik")
}

"""Challenge when a flow's active stage calls `stage_invalid()`."""
type AccessDeniedChallenge @join__type(graph: AUTHENTIK) {
  flowInfo: ContextualFlowInfo @source(name: "flow_info", type: "ContextualFlowInfo", subgraph: "Authentik")
  component: String
  responseErrors: JSON @source(name: "response_errors", type: "JSON", subgraph: "Authentik")
  pendingUser: String! @source(name: "pending_user", type: "String!", subgraph: "Authentik")
  pendingUserAvatar: String! @source(name: "pending_user_avatar", type: "String!", subgraph: "Authentik")
  errorMessage: String @source(name: "error_message", type: "String", subgraph: "Authentik")
}

"""Contextual flow information for a challenge"""
type ContextualFlowInfo @join__type(graph: AUTHENTIK) {
  title: String
  background: String
  cancelUrl: String! @source(name: "cancel_url", type: "String!", subgraph: "Authentik")
  layout: ContextualFlowInfoLayoutEnum!
}

"""
Special challenge for apple-native authentication flow, which happens on the client.
"""
type AppleLoginChallenge @join__type(graph: AUTHENTIK) {
  flowInfo: ContextualFlowInfo @source(name: "flow_info", type: "ContextualFlowInfo", subgraph: "Authentik")
  component: String
  responseErrors: JSON @source(name: "response_errors", type: "JSON", subgraph: "Authentik")
  clientId: String! @source(name: "client_id", type: "String!", subgraph: "Authentik")
  scope: String!
  redirectUri: String! @source(name: "redirect_uri", type: "String!", subgraph: "Authentik")
  state: String!
}

"""Duo Challenge"""
type AuthenticatorDuoChallenge @join__type(graph: AUTHENTIK) {
  flowInfo: ContextualFlowInfo @source(name: "flow_info", type: "ContextualFlowInfo", subgraph: "Authentik")
  component: String
  responseErrors: JSON @source(name: "response_errors", type: "JSON", subgraph: "Authentik")
  pendingUser: String! @source(name: "pending_user", type: "String!", subgraph: "Authentik")
  pendingUserAvatar: String! @source(name: "pending_user_avatar", type: "String!", subgraph: "Authentik")
  activationBarcode: String! @source(name: "activation_barcode", type: "String!", subgraph: "Authentik")
  activationCode: String! @source(name: "activation_code", type: "String!", subgraph: "Authentik")
  stageUuid: String! @source(name: "stage_uuid", type: "String!", subgraph: "Authentik")
}

"""SMS Setup challenge"""
type AuthenticatorSmsChallenge @source(name: "AuthenticatorSMSChallenge", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  flowInfo: ContextualFlowInfo @source(name: "flow_info", type: "ContextualFlowInfo", subgraph: "Authentik")
  component: String
  responseErrors: JSON @source(name: "response_errors", type: "JSON", subgraph: "Authentik")
  pendingUser: String! @source(name: "pending_user", type: "String!", subgraph: "Authentik")
  pendingUserAvatar: String! @source(name: "pending_user_avatar", type: "String!", subgraph: "Authentik")
  phoneNumberRequired: Boolean @source(name: "phone_number_required", type: "Boolean", subgraph: "Authentik")
}

"""Static authenticator challenge"""
type AuthenticatorStaticChallenge @join__type(graph: AUTHENTIK) {
  flowInfo: ContextualFlowInfo @source(name: "flow_info", type: "ContextualFlowInfo", subgraph: "Authentik")
  component: String
  responseErrors: JSON @source(name: "response_errors", type: "JSON", subgraph: "Authentik")
  pendingUser: String! @source(name: "pending_user", type: "String!", subgraph: "Authentik")
  pendingUserAvatar: String! @source(name: "pending_user_avatar", type: "String!", subgraph: "Authentik")
  codes: [String]!
}

"""TOTP Setup challenge"""
type AuthenticatorTotpChallenge @source(name: "AuthenticatorTOTPChallenge", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  flowInfo: ContextualFlowInfo @source(name: "flow_info", type: "ContextualFlowInfo", subgraph: "Authentik")
  component: String
  responseErrors: JSON @source(name: "response_errors", type: "JSON", subgraph: "Authentik")
  pendingUser: String! @source(name: "pending_user", type: "String!", subgraph: "Authentik")
  pendingUserAvatar: String! @source(name: "pending_user_avatar", type: "String!", subgraph: "Authentik")
  configUrl: String! @source(name: "config_url", type: "String!", subgraph: "Authentik")
}

"""Authenticator challenge"""
type AuthenticatorValidationChallenge @join__type(graph: AUTHENTIK) {
  flowInfo: ContextualFlowInfo @source(name: "flow_info", type: "ContextualFlowInfo", subgraph: "Authentik")
  component: String
  responseErrors: JSON @source(name: "response_errors", type: "JSON", subgraph: "Authentik")
  pendingUser: String! @source(name: "pending_user", type: "String!", subgraph: "Authentik")
  pendingUserAvatar: String! @source(name: "pending_user_avatar", type: "String!", subgraph: "Authentik")
  deviceChallenges: [DeviceChallenge]! @source(name: "device_challenges", type: "[DeviceChallenge]!", subgraph: "Authentik")
  configurationStages: [SelectableStage]! @source(name: "configuration_stages", type: "[SelectableStage]!", subgraph: "Authentik")
}

"""Single device challenge"""
type DeviceChallenge @join__type(graph: AUTHENTIK) {
  deviceClass: String! @source(name: "device_class", type: "String!", subgraph: "Authentik")
  deviceUid: String! @source(name: "device_uid", type: "String!", subgraph: "Authentik")
  challenge: JSON!
  lastUsed: DateTime @source(name: "last_used", type: "DateTime", subgraph: "Authentik")
}

"""Serializer for stages which can be selected by users"""
type SelectableStage @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
}

"""WebAuthn Challenge"""
type AuthenticatorWebAuthnChallenge @join__type(graph: AUTHENTIK) {
  flowInfo: ContextualFlowInfo @source(name: "flow_info", type: "ContextualFlowInfo", subgraph: "Authentik")
  component: String
  responseErrors: JSON @source(name: "response_errors", type: "JSON", subgraph: "Authentik")
  pendingUser: String! @source(name: "pending_user", type: "String!", subgraph: "Authentik")
  pendingUserAvatar: String! @source(name: "pending_user_avatar", type: "String!", subgraph: "Authentik")
  registration: JSON!
}

"""Autosubmit challenge used to send and navigate a POST request"""
type AutosubmitChallenge @join__type(graph: AUTHENTIK) {
  flowInfo: ContextualFlowInfo @source(name: "flow_info", type: "ContextualFlowInfo", subgraph: "Authentik")
  component: String
  responseErrors: JSON @source(name: "response_errors", type: "JSON", subgraph: "Authentik")
  url: String!
  attrs: JSON!
  title: String
}

"""Site public key"""
type CaptchaChallenge @join__type(graph: AUTHENTIK) {
  flowInfo: ContextualFlowInfo @source(name: "flow_info", type: "ContextualFlowInfo", subgraph: "Authentik")
  component: String
  responseErrors: JSON @source(name: "response_errors", type: "JSON", subgraph: "Authentik")
  pendingUser: String! @source(name: "pending_user", type: "String!", subgraph: "Authentik")
  pendingUserAvatar: String! @source(name: "pending_user_avatar", type: "String!", subgraph: "Authentik")
  siteKey: String! @source(name: "site_key", type: "String!", subgraph: "Authentik")
  jsUrl: String! @source(name: "js_url", type: "String!", subgraph: "Authentik")
  interactive: Boolean!
}

"""Challenge info for consent screens"""
type ConsentChallenge @join__type(graph: AUTHENTIK) {
  flowInfo: ContextualFlowInfo @source(name: "flow_info", type: "ContextualFlowInfo", subgraph: "Authentik")
  component: String
  responseErrors: JSON @source(name: "response_errors", type: "JSON", subgraph: "Authentik")
  pendingUser: String! @source(name: "pending_user", type: "String!", subgraph: "Authentik")
  pendingUserAvatar: String! @source(name: "pending_user_avatar", type: "String!", subgraph: "Authentik")
  headerText: String @source(name: "header_text", type: "String", subgraph: "Authentik")
  permissions: [ConsentPermission]!
  additionalPermissions: [ConsentPermission]! @source(name: "additional_permissions", type: "[ConsentPermission]!", subgraph: "Authentik")
  token: String!
}

"""Permission used for consent"""
type ConsentPermission @join__type(graph: AUTHENTIK) {
  name: String!
  id: String!
}

"""Email challenge"""
type EmailChallenge @join__type(graph: AUTHENTIK) {
  flowInfo: ContextualFlowInfo @source(name: "flow_info", type: "ContextualFlowInfo", subgraph: "Authentik")
  component: String
  responseErrors: JSON @source(name: "response_errors", type: "JSON", subgraph: "Authentik")
}

"""
Challenge class when an unhandled error occurs during a stage. Normal users
are shown an error message, superusers are shown a full stacktrace.
"""
type FlowErrorChallenge @join__type(graph: AUTHENTIK) {
  flowInfo: ContextualFlowInfo @source(name: "flow_info", type: "ContextualFlowInfo", subgraph: "Authentik")
  component: String
  responseErrors: JSON @source(name: "response_errors", type: "JSON", subgraph: "Authentik")
  requestId: String! @source(name: "request_id", type: "String!", subgraph: "Authentik")
  error: String
  traceback: String
}

"""Challenge type to render a frame"""
type FrameChallenge @join__type(graph: AUTHENTIK) {
  flowInfo: ContextualFlowInfo @source(name: "flow_info", type: "ContextualFlowInfo", subgraph: "Authentik")
  component: String
  responseErrors: JSON @source(name: "response_errors", type: "JSON", subgraph: "Authentik")
  url: String!
  loadingOverlay: Boolean @source(name: "loading_overlay", type: "Boolean", subgraph: "Authentik")
  loadingText: String! @source(name: "loading_text", type: "String!", subgraph: "Authentik")
}

"""Identification challenges with all UI elements"""
type IdentificationChallenge @join__type(graph: AUTHENTIK) {
  flowInfo: ContextualFlowInfo @source(name: "flow_info", type: "ContextualFlowInfo", subgraph: "Authentik")
  component: String
  responseErrors: JSON @source(name: "response_errors", type: "JSON", subgraph: "Authentik")
  userFields: [String] @source(name: "user_fields", type: "[String]", subgraph: "Authentik")
  passwordFields: Boolean! @source(name: "password_fields", type: "Boolean!", subgraph: "Authentik")
  allowShowPassword: Boolean @source(name: "allow_show_password", type: "Boolean", subgraph: "Authentik")
  applicationPre: String @source(name: "application_pre", type: "String", subgraph: "Authentik")
  flowDesignation: FlowDesignationEnum! @source(name: "flow_designation", type: "FlowDesignationEnum!", subgraph: "Authentik")
  captchaStage: CaptchaChallenge @source(name: "captcha_stage", type: "CaptchaChallenge", subgraph: "Authentik")
  enrollUrl: String @source(name: "enroll_url", type: "String", subgraph: "Authentik")
  recoveryUrl: String @source(name: "recovery_url", type: "String", subgraph: "Authentik")
  passwordlessUrl: String @source(name: "passwordless_url", type: "String", subgraph: "Authentik")
  primaryAction: String! @source(name: "primary_action", type: "String!", subgraph: "Authentik")
  sources: [LoginSource]
  showSourceLabels: Boolean! @source(name: "show_source_labels", type: "Boolean!", subgraph: "Authentik")
}

"""Serializer for Login buttons of sources"""
type LoginSource @join__type(graph: AUTHENTIK) {
  name: String!
  iconUrl: String @source(name: "icon_url", type: "String", subgraph: "Authentik")
  challenge: LoginChallengeTypes!
}

"""Challenge type to redirect the client"""
type RedirectChallenge @join__type(graph: AUTHENTIK) {
  flowInfo: ContextualFlowInfo @source(name: "flow_info", type: "ContextualFlowInfo", subgraph: "Authentik")
  component: String
  responseErrors: JSON @source(name: "response_errors", type: "JSON", subgraph: "Authentik")
  to: String!
}

"""Challenge shown to the user in identification stage"""
type PlexAuthenticationChallenge @join__type(graph: AUTHENTIK) {
  flowInfo: ContextualFlowInfo @source(name: "flow_info", type: "ContextualFlowInfo", subgraph: "Authentik")
  component: String
  responseErrors: JSON @source(name: "response_errors", type: "JSON", subgraph: "Authentik")
  clientId: String! @source(name: "client_id", type: "String!", subgraph: "Authentik")
  slug: String!
}

"""OAuth Device code challenge"""
type OAuthDeviceCodeChallenge @join__type(graph: AUTHENTIK) {
  flowInfo: ContextualFlowInfo @source(name: "flow_info", type: "ContextualFlowInfo", subgraph: "Authentik")
  component: String
  responseErrors: JSON @source(name: "response_errors", type: "JSON", subgraph: "Authentik")
}

"""Final challenge after user enters their code"""
type OAuthDeviceCodeFinishChallenge @join__type(graph: AUTHENTIK) {
  flowInfo: ContextualFlowInfo @source(name: "flow_info", type: "ContextualFlowInfo", subgraph: "Authentik")
  component: String
  responseErrors: JSON @source(name: "response_errors", type: "JSON", subgraph: "Authentik")
}

"""Password challenge UI fields"""
type PasswordChallenge @join__type(graph: AUTHENTIK) {
  flowInfo: ContextualFlowInfo @source(name: "flow_info", type: "ContextualFlowInfo", subgraph: "Authentik")
  component: String
  responseErrors: JSON @source(name: "response_errors", type: "JSON", subgraph: "Authentik")
  pendingUser: String! @source(name: "pending_user", type: "String!", subgraph: "Authentik")
  pendingUserAvatar: String! @source(name: "pending_user_avatar", type: "String!", subgraph: "Authentik")
  recoveryUrl: String @source(name: "recovery_url", type: "String", subgraph: "Authentik")
  allowShowPassword: Boolean @source(name: "allow_show_password", type: "Boolean", subgraph: "Authentik")
}

"""Initial challenge being sent, define fields"""
type PromptChallenge @join__type(graph: AUTHENTIK) {
  flowInfo: ContextualFlowInfo @source(name: "flow_info", type: "ContextualFlowInfo", subgraph: "Authentik")
  component: String
  responseErrors: JSON @source(name: "response_errors", type: "JSON", subgraph: "Authentik")
  fields: [StagePrompt]!
}

"""Serializer for a single Prompt field"""
type StagePrompt @join__type(graph: AUTHENTIK) {
  fieldKey: String! @source(name: "field_key", type: "String!", subgraph: "Authentik")
  label: String!
  type: PromptTypeEnum!
  required: Boolean!
  placeholder: String!
  initialValue: String! @source(name: "initial_value", type: "String!", subgraph: "Authentik")
  order: Int!
  subText: String! @source(name: "sub_text", type: "String!", subgraph: "Authentik")
  choices: [String]
}

"""Challenge for ending a session"""
type SessionEndChallenge @join__type(graph: AUTHENTIK) {
  flowInfo: ContextualFlowInfo @source(name: "flow_info", type: "ContextualFlowInfo", subgraph: "Authentik")
  component: String
  responseErrors: JSON @source(name: "response_errors", type: "JSON", subgraph: "Authentik")
  pendingUser: String! @source(name: "pending_user", type: "String!", subgraph: "Authentik")
  pendingUserAvatar: String! @source(name: "pending_user_avatar", type: "String!", subgraph: "Authentik")
  applicationName: String @source(name: "application_name", type: "String", subgraph: "Authentik")
  applicationLaunchUrl: String @source(name: "application_launch_url", type: "String", subgraph: "Authentik")
  invalidationFlowUrl: String @source(name: "invalidation_flow_url", type: "String", subgraph: "Authentik")
  brandName: String! @source(name: "brand_name", type: "String!", subgraph: "Authentik")
}

"""challenge type to render HTML as-is"""
type ShellChallenge @join__type(graph: AUTHENTIK) {
  flowInfo: ContextualFlowInfo @source(name: "flow_info", type: "ContextualFlowInfo", subgraph: "Authentik")
  component: String
  responseErrors: JSON @source(name: "response_errors", type: "JSON", subgraph: "Authentik")
  body: String!
}

"""Empty challenge"""
type UserLoginChallenge @join__type(graph: AUTHENTIK) {
  flowInfo: ContextualFlowInfo @source(name: "flow_info", type: "ContextualFlowInfo", subgraph: "Authentik")
  component: String
  responseErrors: JSON @source(name: "response_errors", type: "JSON", subgraph: "Authentik")
  pendingUser: String! @source(name: "pending_user", type: "String!", subgraph: "Authentik")
  pendingUserAvatar: String! @source(name: "pending_user_avatar", type: "String!", subgraph: "Authentik")
}

"""Serializer for inspect endpoint"""
type FlowInspection @join__type(graph: AUTHENTIK) {
  plans: [FlowInspectorPlan]!
  currentPlan: FlowInspectorPlan @source(name: "current_plan", type: "FlowInspectorPlan", subgraph: "Authentik")
  isCompleted: Boolean! @source(name: "is_completed", type: "Boolean!", subgraph: "Authentik")
}

"""Serializer for an active FlowPlan"""
type FlowInspectorPlan @join__type(graph: AUTHENTIK) {
  currentStage: FlowStageBinding! @source(name: "current_stage", type: "FlowStageBinding!", subgraph: "Authentik")
  nextPlannedStage: FlowStageBinding! @source(name: "next_planned_stage", type: "FlowStageBinding!", subgraph: "Authentik")
  """Get the plan's context, sanitized"""
  planContext: JSON! @source(name: "plan_context", type: "JSON!", subgraph: "Authentik")
  """Get a unique session ID"""
  sessionId: String! @source(name: "session_id", type: "String!", subgraph: "Authentik")
}

type PaginatedFlowList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [Flow]!
}

"""Flow Serializer"""
type Flow @join__type(graph: AUTHENTIK) {
  pk: UUID!
  policybindingmodelPtrId: UUID! @source(name: "policybindingmodel_ptr_id", type: "UUID!", subgraph: "Authentik")
  name: String!
  slug: QueryFlowsInstancesListOneOf_0ResultsItemsSlug! @source(name: "slug", type: "query_flows_instances_list_oneOf_0_results_items_slug!", subgraph: "Authentik")
  """Shown as the Title in Flow pages."""
  title: String!
  designation: FlowDesignationEnum!
  """
  Get the URL to the background image. If the name is /static or starts with http
  it is returned as-is
  """
  background: String!
  stages: [UUID]!
  policies: [UUID]!
  """Get count of cached flows"""
  cacheCount: Int! @source(name: "cache_count", type: "Int!", subgraph: "Authentik")
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  """
  Enable compatibility mode, increases compatibility with password managers on mobile devices.
  """
  compatibilityMode: Boolean @source(name: "compatibility_mode", type: "Boolean", subgraph: "Authentik")
  """Get export URL for flow"""
  exportUrl: String! @source(name: "export_url", type: "String!", subgraph: "Authentik")
  layout: FlowLayoutEnum
  deniedAction: DeniedActionEnum @source(name: "denied_action", type: "DeniedActionEnum", subgraph: "Authentik")
  authentication: AuthenticationEnum
  additionalProperties: JSON @resolveRoot(subgraph: "Authentik")
}

"""response of the flow's diagram action"""
type FlowDiagram @join__type(graph: AUTHENTIK) {
  diagram: String!
}

"""Returns a single link"""
type Link @join__type(graph: AUTHENTIK) {
  link: String!
}

type FileContainer @source(name: "File_container", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  file: File @resolveRoot(subgraph: "Authentik") @source(name: "File", type: "File", subgraph: "Authentik")
}

"""Generic cache stats for an object"""
type Cache @join__type(graph: AUTHENTIK) {
  count: Int!
}

type PaginatedBlueprintInstanceList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [BlueprintInstance]!
}

"""Info about a single blueprint instance file"""
type BlueprintInstance @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  path: String
  context: JSON
  lastApplied: DateTime! @source(name: "last_applied", type: "DateTime!", subgraph: "Authentik")
  lastAppliedHash: String! @source(name: "last_applied_hash", type: "String!", subgraph: "Authentik")
  status: BlueprintInstanceStatusEnum!
  enabled: Boolean
  managedModels: [String]! @source(name: "managed_models", type: "[String]!", subgraph: "Authentik")
  metadata: JSON!
  content: String
}

type BlueprintFile @join__type(graph: AUTHENTIK) {
  path: String!
  lastM: DateTime! @source(name: "last_m", type: "DateTime!", subgraph: "Authentik")
  hash: String!
  meta: Metadata!
}

"""Serializer for blueprint metadata"""
type Metadata @join__type(graph: AUTHENTIK) {
  name: String!
  labels: JSON!
  additionalProperties: JSON @resolveRoot(subgraph: "Authentik")
}

type PaginatedTokenModelList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [TokenModel]!
}

"""Serializer for BaseGrantModel and RefreshToken"""
type TokenModel @join__type(graph: AUTHENTIK) {
  pk: Int!
  provider: OAuth2Provider!
  user: User!
  """Check if token is expired yet."""
  isExpired: Boolean! @source(name: "is_expired", type: "Boolean!", subgraph: "Authentik")
  expires: DateTime
  scope: [String]!
  """Get the token's id_token as JSON String"""
  idToken: String! @source(name: "id_token", type: "String!", subgraph: "Authentik")
  revoked: Boolean
}

"""OAuth2Provider Serializer"""
type OAuth2Provider @join__type(graph: AUTHENTIK) {
  pk: Int!
  name: String!
  """
  Flow used for authentication when the associated application is accessed by an un-authenticated user.
  """
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow used when authorizing this provider."""
  authorizationFlow: UUID! @source(name: "authorization_flow", type: "UUID!", subgraph: "Authentik")
  """Flow used ending the session from a provider."""
  invalidationFlow: UUID! @source(name: "invalidation_flow", type: "UUID!", subgraph: "Authentik")
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  """Get object component so that we know how to edit the object"""
  component: String!
  """Internal application name, used in URLs."""
  assignedApplicationSlug: String! @source(name: "assigned_application_slug", type: "String!", subgraph: "Authentik")
  """Application's display Name."""
  assignedApplicationName: String! @source(name: "assigned_application_name", type: "String!", subgraph: "Authentik")
  """Internal application name, used in URLs."""
  assignedBackchannelApplicationSlug: String! @source(name: "assigned_backchannel_application_slug", type: "String!", subgraph: "Authentik")
  """Application's display Name."""
  assignedBackchannelApplicationName: String! @source(name: "assigned_backchannel_application_name", type: "String!", subgraph: "Authentik")
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  clientType: ClientTypeEnum @source(name: "client_type", type: "ClientTypeEnum", subgraph: "Authentik")
  clientId: QueryOauth2AccessTokensListOneOf_0ResultsItemsProviderClientId @source(name: "client_id", type: "query_oauth2_access_tokens_list_oneOf_0_results_items_provider_client_id", subgraph: "Authentik")
  clientSecret: QueryOauth2AccessTokensListOneOf_0ResultsItemsProviderClientSecret @source(name: "client_secret", type: "query_oauth2_access_tokens_list_oneOf_0_results_items_provider_client_secret", subgraph: "Authentik")
  """
  Access codes not valid on or after current time + this value (Format: hours=1;minutes=2;seconds=3).
  """
  accessCodeValidity: String @source(name: "access_code_validity", type: "String", subgraph: "Authentik")
  """
  Tokens not valid on or after current time + this value (Format: hours=1;minutes=2;seconds=3).
  """
  accessTokenValidity: String @source(name: "access_token_validity", type: "String", subgraph: "Authentik")
  """
  Tokens not valid on or after current time + this value (Format: hours=1;minutes=2;seconds=3).
  """
  refreshTokenValidity: String @source(name: "refresh_token_validity", type: "String", subgraph: "Authentik")
  """
  Include User claims from scopes in the id_token, for applications that don't access the userinfo endpoint.
  """
  includeClaimsInIdToken: Boolean @source(name: "include_claims_in_id_token", type: "Boolean", subgraph: "Authentik")
  """Key used to sign the tokens."""
  signingKey: UUID @source(name: "signing_key", type: "UUID", subgraph: "Authentik")
  """
  Key used to encrypt the tokens. When set, tokens will be encrypted and returned as JWEs.
  """
  encryptionKey: UUID @source(name: "encryption_key", type: "UUID", subgraph: "Authentik")
  redirectUris: [RedirectUri]! @source(name: "redirect_uris", type: "[RedirectURI]!", subgraph: "Authentik")
  subMode: SubModeEnum @source(name: "sub_mode", type: "SubModeEnum", subgraph: "Authentik")
  issuerMode: IssuerModeEnum @source(name: "issuer_mode", type: "IssuerModeEnum", subgraph: "Authentik")
  jwksSources: [UUID] @source(name: "jwks_sources", type: "[UUID]", subgraph: "Authentik")
}

"""A single allowed redirect URI entry"""
type RedirectUri @source(name: "RedirectURI", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  matchingMode: MatchingModeEnum @source(name: "matching_mode", type: "MatchingModeEnum", subgraph: "Authentik")
  url: String!
}

type PaginatedExpiringBaseGrantModelList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [ExpiringBaseGrantModel]!
}

"""Serializer for BaseGrantModel and ExpiringBaseGrant"""
type ExpiringBaseGrantModel @join__type(graph: AUTHENTIK) {
  pk: Int!
  provider: OAuth2Provider!
  user: User!
  """Check if token is expired yet."""
  isExpired: Boolean! @source(name: "is_expired", type: "Boolean!", subgraph: "Authentik")
  expires: DateTime
  scope: [String]!
}

type PaginatedOutpostList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [Outpost]!
}

"""Outpost Serializer"""
type Outpost @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  type: OutpostTypeEnum!
  providers: [Int]!
  providersObj: [Provider]! @source(name: "providers_obj", type: "[Provider]!", subgraph: "Authentik")
  """
  Select Service-Connection authentik should use to manage this outpost. Leave empty if authentik should not handle the deployment.
  """
  serviceConnection: UUID @source(name: "service_connection", type: "UUID", subgraph: "Authentik")
  serviceConnectionObj: ServiceConnection! @source(name: "service_connection_obj", type: "ServiceConnection!", subgraph: "Authentik")
  refreshIntervalS: Int! @source(name: "refresh_interval_s", type: "Int!", subgraph: "Authentik")
  """Get Token identifier"""
  tokenIdentifier: String! @source(name: "token_identifier", type: "String!", subgraph: "Authentik")
  config: JSON!
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: String
}

"""ServiceConnection Serializer"""
type ServiceConnection @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """
  If enabled, use the local connection. Required Docker socket/Kubernetes Integration
  """
  local: Boolean
  """Return component used to edit this object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  additionalProperties: JSON @resolveRoot(subgraph: "Authentik")
}

"""Outpost health status"""
type OutpostHealth @join__type(graph: AUTHENTIK) {
  uid: String!
  lastSeen: DateTime! @source(name: "last_seen", type: "DateTime!", subgraph: "Authentik")
  version: String!
  golangVersion: String! @source(name: "golang_version", type: "String!", subgraph: "Authentik")
  opensslEnabled: Boolean! @source(name: "openssl_enabled", type: "Boolean!", subgraph: "Authentik")
  opensslVersion: String! @source(name: "openssl_version", type: "String!", subgraph: "Authentik")
  """Get FIPS enabled"""
  fipsEnabled: Boolean @source(name: "fips_enabled", type: "Boolean", subgraph: "Authentik")
  versionShould: String! @source(name: "version_should", type: "String!", subgraph: "Authentik")
  versionOutdated: Boolean! @source(name: "version_outdated", type: "Boolean!", subgraph: "Authentik")
  buildHash: String! @source(name: "build_hash", type: "String!", subgraph: "Authentik")
  buildHashShould: String! @source(name: "build_hash_should", type: "String!", subgraph: "Authentik")
  hostname: String!
}

"""Global default outpost config"""
type OutpostDefaultConfig @join__type(graph: AUTHENTIK) {
  config: JSON!
}

type PaginatedLdapOutpostConfigList @source(name: "PaginatedLDAPOutpostConfigList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [LdapOutpostConfig]! @source(name: "results", type: "[LDAPOutpostConfig]!", subgraph: "Authentik")
}

"""LDAPProvider Serializer"""
type LdapOutpostConfig @source(name: "LDAPOutpostConfig", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pk: Int!
  name: String!
  """DN under which objects are accessible."""
  baseDn: String @source(name: "base_dn", type: "String", subgraph: "Authentik")
  bindFlowSlug: String! @source(name: "bind_flow_slug", type: "String!", subgraph: "Authentik")
  """Get slug for unbind flow, defaulting to brand's default flow."""
  unbindFlowSlug: String @source(name: "unbind_flow_slug", type: "String", subgraph: "Authentik")
  """Prioritise backchannel slug over direct application slug"""
  applicationSlug: String! @source(name: "application_slug", type: "String!", subgraph: "Authentik")
  certificate: UUID
  tlsServerName: String @source(name: "tls_server_name", type: "String", subgraph: "Authentik")
  """
  The start for uidNumbers, this number is added to the user.pk to make sure that the numbers aren't too low for POSIX users. Default is 2000 to ensure that we don't collide with local users uidNumber
  """
  uidStartNumber: Int @source(name: "uid_start_number", type: "Int", subgraph: "Authentik")
  """
  The start for gidNumbers, this number is added to a number generated from the group.pk to make sure that the numbers aren't too low for POSIX groups. Default is 4000 to ensure that we don't collide with local groups or users primary groups gidNumber
  """
  gidStartNumber: Int @source(name: "gid_start_number", type: "Int", subgraph: "Authentik")
  searchMode: LdapapiAccessMode @source(name: "search_mode", type: "LDAPAPIAccessMode", subgraph: "Authentik")
  bindMode: LdapapiAccessMode @source(name: "bind_mode", type: "LDAPAPIAccessMode", subgraph: "Authentik")
  """
  When enabled, code-based multi-factor authentication can be used by appending a semicolon and the TOTP code to the password. This should only be enabled if all users that will bind to this provider have a TOTP device configured, as otherwise a password may incorrectly be rejected if it contains a semicolon.
  """
  mfaSupport: Boolean @source(name: "mfa_support", type: "Boolean", subgraph: "Authentik")
}

"""Base serializer class which doesn't implement create/update methods"""
type LdapCheckAccess @source(name: "LDAPCheckAccess", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  hasSearchPermission: Boolean @source(name: "has_search_permission", type: "Boolean", subgraph: "Authentik")
  access: PolicyTestResult!
}

type PaginatedProxyOutpostConfigList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [ProxyOutpostConfig]!
}

"""Proxy provider serializer for outposts"""
type ProxyOutpostConfig @join__type(graph: AUTHENTIK) {
  pk: Int!
  name: String!
  internalHost: URL @source(name: "internal_host", type: "URL", subgraph: "Authentik")
  externalHost: URL! @source(name: "external_host", type: "URL!", subgraph: "Authentik")
  """Validate SSL Certificates of upstream servers"""
  internalHostSslValidation: Boolean @source(name: "internal_host_ssl_validation", type: "Boolean", subgraph: "Authentik")
  clientId: QueryOutpostsProxyListOneOf_0ResultsItemsClientId @source(name: "client_id", type: "query_outposts_proxy_list_oneOf_0_results_items_client_id", subgraph: "Authentik")
  clientSecret: QueryOutpostsProxyListOneOf_0ResultsItemsClientSecret @source(name: "client_secret", type: "query_outposts_proxy_list_oneOf_0_results_items_client_secret", subgraph: "Authentik")
  oidcConfiguration: OpenIdConnectConfiguration! @source(name: "oidc_configuration", type: "OpenIDConnectConfiguration!", subgraph: "Authentik")
  cookieSecret: String @source(name: "cookie_secret", type: "String", subgraph: "Authentik")
  certificate: UUID
  """
  Regular expressions for which authentication is not required. Each new line is interpreted as a new Regular Expression.
  """
  skipPathRegex: String @source(name: "skip_path_regex", type: "String", subgraph: "Authentik")
  """
  Set a custom HTTP-Basic Authentication header based on values from authentik.
  """
  basicAuthEnabled: Boolean @source(name: "basic_auth_enabled", type: "Boolean", subgraph: "Authentik")
  """
  User/Group Attribute used for the password part of the HTTP-Basic Header.
  """
  basicAuthPasswordAttribute: String @source(name: "basic_auth_password_attribute", type: "String", subgraph: "Authentik")
  """
  User/Group Attribute used for the user part of the HTTP-Basic Header. If not set, the user's Email address is used.
  """
  basicAuthUserAttribute: String @source(name: "basic_auth_user_attribute", type: "String", subgraph: "Authentik")
  mode: ProxyMode
  cookieDomain: String @source(name: "cookie_domain", type: "String", subgraph: "Authentik")
  """Get token validity as second count"""
  accessTokenValidity: Float @source(name: "access_token_validity", type: "Float", subgraph: "Authentik")
  """
  When enabled, this provider will intercept the authorization header and authenticate requests based on its value.
  """
  interceptHeaderAuth: Boolean @source(name: "intercept_header_auth", type: "Boolean", subgraph: "Authentik")
  """
  Get all the scope names the outpost should request,
  including custom-defined ones
  """
  scopesToRequest: [String]! @source(name: "scopes_to_request", type: "[String]!", subgraph: "Authentik")
  """Internal application name, used in URLs."""
  assignedApplicationSlug: String! @source(name: "assigned_application_slug", type: "String!", subgraph: "Authentik")
  """Application's display Name."""
  assignedApplicationName: String! @source(name: "assigned_application_name", type: "String!", subgraph: "Authentik")
}

"""rest_framework Serializer for OIDC Configuration"""
type OpenIdConnectConfiguration @source(name: "OpenIDConnectConfiguration", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  issuer: String!
  authorizationEndpoint: String! @source(name: "authorization_endpoint", type: "String!", subgraph: "Authentik")
  tokenEndpoint: String! @source(name: "token_endpoint", type: "String!", subgraph: "Authentik")
  userinfoEndpoint: String! @source(name: "userinfo_endpoint", type: "String!", subgraph: "Authentik")
  endSessionEndpoint: String! @source(name: "end_session_endpoint", type: "String!", subgraph: "Authentik")
  introspectionEndpoint: String! @source(name: "introspection_endpoint", type: "String!", subgraph: "Authentik")
  jwksUri: String! @source(name: "jwks_uri", type: "String!", subgraph: "Authentik")
  responseTypesSupported: [String]! @source(name: "response_types_supported", type: "[String]!", subgraph: "Authentik")
  idTokenSigningAlgValuesSupported: [String]! @source(name: "id_token_signing_alg_values_supported", type: "[String]!", subgraph: "Authentik")
  subjectTypesSupported: [String]! @source(name: "subject_types_supported", type: "[String]!", subgraph: "Authentik")
  tokenEndpointAuthMethodsSupported: [String]! @source(name: "token_endpoint_auth_methods_supported", type: "[String]!", subgraph: "Authentik")
  additionalProperties: JSON @resolveRoot(subgraph: "Authentik")
}

type PaginatedRadiusOutpostConfigList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [RadiusOutpostConfig]!
}

"""RadiusProvider Serializer"""
type RadiusOutpostConfig @join__type(graph: AUTHENTIK) {
  pk: Int!
  name: String!
  applicationSlug: String! @source(name: "application_slug", type: "String!", subgraph: "Authentik")
  authFlowSlug: String! @source(name: "auth_flow_slug", type: "String!", subgraph: "Authentik")
  """
  List of CIDRs (comma-separated) that clients can connect from. A more specific CIDR will match before a looser one. Clients connecting from a non-specified CIDR will be dropped.
  """
  clientNetworks: String @source(name: "client_networks", type: "String", subgraph: "Authentik")
  """Shared secret between clients and server to hash packets."""
  sharedSecret: String @source(name: "shared_secret", type: "String", subgraph: "Authentik")
  """
  When enabled, code-based multi-factor authentication can be used by appending a semicolon and the TOTP code to the password. This should only be enabled if all users that will bind to this provider have a TOTP device configured, as otherwise a password may incorrectly be rejected if it contains a semicolon.
  """
  mfaSupport: Boolean @source(name: "mfa_support", type: "Boolean", subgraph: "Authentik")
}

"""Base serializer class which doesn't implement create/update methods"""
type RadiusCheckAccess @join__type(graph: AUTHENTIK) {
  attributes: String
  access: PolicyTestResult!
}

type PaginatedServiceConnectionList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [ServiceConnection]!
}

"""Serializer for Service connection state"""
type ServiceConnectionState @join__type(graph: AUTHENTIK) {
  healthy: Boolean!
  version: String!
}

type PaginatedDockerServiceConnectionList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [DockerServiceConnection]!
}

"""DockerServiceConnection Serializer"""
type DockerServiceConnection @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """
  If enabled, use the local connection. Required Docker socket/Kubernetes Integration
  """
  local: Boolean
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  """
  Can be in the format of 'unix://<path>' when connecting to a local docker daemon, or 'https://<hostname>:2376' when connecting to a remote system.
  """
  url: String!
  """
  CA which the endpoint's Certificate is verified against. Can be left empty for no validation.
  """
  tlsVerification: UUID @source(name: "tls_verification", type: "UUID", subgraph: "Authentik")
  """
  Certificate/Key used for authentication. Can be left empty for no authentication.
  """
  tlsAuthentication: UUID @source(name: "tls_authentication", type: "UUID", subgraph: "Authentik")
}

type PaginatedKubernetesServiceConnectionList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [KubernetesServiceConnection]!
}

"""KubernetesServiceConnection Serializer"""
type KubernetesServiceConnection @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """
  If enabled, use the local connection. Required Docker socket/Kubernetes Integration
  """
  local: Boolean
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  """
  Paste your kubeconfig here. authentik will automatically use the currently selected context.
  """
  kubeconfig: JSON
  """Verify SSL Certificates of the Kubernetes API endpoint"""
  verifySsl: Boolean @source(name: "verify_ssl", type: "Boolean", subgraph: "Authentik")
}

type PaginatedPolicyList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [Policy]!
}

"""Policy Serializer"""
type Policy @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """
  When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged.
  """
  executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
  """Get object component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  """Return objects policy is bound to"""
  boundTo: Int! @source(name: "bound_to", type: "Int!", subgraph: "Authentik")
  additionalProperties: JSON @resolveRoot(subgraph: "Authentik")
}

type PaginatedPolicyBindingList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [PolicyBinding]!
}

"""PolicyBinding Serializer"""
type PolicyBinding @join__type(graph: AUTHENTIK) {
  pk: UUID!
  policy: UUID
  group: UUID
  user: Int
  policyObj: Policy! @source(name: "policy_obj", type: "Policy!", subgraph: "Authentik")
  groupObj: Group! @source(name: "group_obj", type: "Group!", subgraph: "Authentik")
  userObj: User! @source(name: "user_obj", type: "User!", subgraph: "Authentik")
  target: UUID!
  """Negates the outcome of the policy. Messages are unaffected."""
  negate: Boolean
  enabled: Boolean
  order: Int!
  """Timeout after which Policy execution is terminated."""
  timeout: NonNegativeInt
  """Result if the Policy execution fails."""
  failureResult: Boolean @source(name: "failure_result", type: "Boolean", subgraph: "Authentik")
}

type PaginatedDummyPolicyList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [DummyPolicy]!
}

"""Dummy Policy Serializer"""
type DummyPolicy @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """
  When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged.
  """
  executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
  """Get object component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  """Return objects policy is bound to"""
  boundTo: Int! @source(name: "bound_to", type: "Int!", subgraph: "Authentik")
  result: Boolean
  waitMin: Int @source(name: "wait_min", type: "Int", subgraph: "Authentik")
  waitMax: Int @source(name: "wait_max", type: "Int", subgraph: "Authentik")
}

type PaginatedEventMatcherPolicyList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [EventMatcherPolicy]!
}

"""Event Matcher Policy Serializer"""
type EventMatcherPolicy @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """
  When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged.
  """
  executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
  """Get object component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  """Return objects policy is bound to"""
  boundTo: Int! @source(name: "bound_to", type: "Int!", subgraph: "Authentik")
  action: EventActions
  """
  Matches Event's Client IP (strict matching, for network matching use an Expression Policy)
  """
  clientIp: String @source(name: "client_ip", type: "String", subgraph: "Authentik")
  app: AppEnum
  model: ModelEnum
}

type PaginatedExpressionPolicyList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [ExpressionPolicy]!
}

"""Group Membership Policy Serializer"""
type ExpressionPolicy @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """
  When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged.
  """
  executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
  """Get object component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  """Return objects policy is bound to"""
  boundTo: Int! @source(name: "bound_to", type: "Int!", subgraph: "Authentik")
  expression: String!
}

type PaginatedGeoIpPolicyList @source(name: "PaginatedGeoIPPolicyList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [GeoIpPolicy]! @source(name: "results", type: "[GeoIPPolicy]!", subgraph: "Authentik")
}

"""GeoIP Policy Serializer"""
type GeoIpPolicy @source(name: "GeoIPPolicy", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """
  When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged.
  """
  executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
  """Get object component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  """Return objects policy is bound to"""
  boundTo: Int! @source(name: "bound_to", type: "Int!", subgraph: "Authentik")
  asns: [Int]
  countries: [CountryCodeEnum]!
  countriesObj: [DetailedCountryField]! @source(name: "countries_obj", type: "[DetailedCountryField]!", subgraph: "Authentik")
}

type DetailedCountryField @join__type(graph: AUTHENTIK) {
  code: CountryCodeEnum!
  name: String!
}

type DetailedCountry @join__type(graph: AUTHENTIK) {
  code: CountryCodeEnum!
  name: String!
}

type PaginatedPasswordPolicyList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [PasswordPolicy]!
}

"""Password Policy Serializer"""
type PasswordPolicy @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """
  When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged.
  """
  executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
  """Get object component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  """Return objects policy is bound to"""
  boundTo: Int! @source(name: "bound_to", type: "Int!", subgraph: "Authentik")
  """Field key to check, field keys defined in Prompt stages are available."""
  passwordField: String @source(name: "password_field", type: "String", subgraph: "Authentik")
  amountDigits: NonNegativeInt @source(name: "amount_digits", type: "NonNegativeInt", subgraph: "Authentik")
  amountUppercase: NonNegativeInt @source(name: "amount_uppercase", type: "NonNegativeInt", subgraph: "Authentik")
  amountLowercase: NonNegativeInt @source(name: "amount_lowercase", type: "NonNegativeInt", subgraph: "Authentik")
  amountSymbols: NonNegativeInt @source(name: "amount_symbols", type: "NonNegativeInt", subgraph: "Authentik")
  lengthMin: NonNegativeInt @source(name: "length_min", type: "NonNegativeInt", subgraph: "Authentik")
  symbolCharset: String @source(name: "symbol_charset", type: "String", subgraph: "Authentik")
  errorMessage: String @source(name: "error_message", type: "String", subgraph: "Authentik")
  checkStaticRules: Boolean @source(name: "check_static_rules", type: "Boolean", subgraph: "Authentik")
  checkHaveIBeenPwned: Boolean @source(name: "check_have_i_been_pwned", type: "Boolean", subgraph: "Authentik")
  checkZxcvbn: Boolean @source(name: "check_zxcvbn", type: "Boolean", subgraph: "Authentik")
  """How many times the password hash is allowed to be on haveibeenpwned"""
  hibpAllowedCount: NonNegativeInt @source(name: "hibp_allowed_count", type: "NonNegativeInt", subgraph: "Authentik")
  """
  If the zxcvbn score is equal or less than this value, the policy will fail.
  """
  zxcvbnScoreThreshold: NonNegativeInt @source(name: "zxcvbn_score_threshold", type: "NonNegativeInt", subgraph: "Authentik")
}

type PaginatedPasswordExpiryPolicyList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [PasswordExpiryPolicy]!
}

"""Password Expiry Policy Serializer"""
type PasswordExpiryPolicy @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """
  When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged.
  """
  executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
  """Get object component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  """Return objects policy is bound to"""
  boundTo: Int! @source(name: "bound_to", type: "Int!", subgraph: "Authentik")
  days: Int!
  denyOnly: Boolean @source(name: "deny_only", type: "Boolean", subgraph: "Authentik")
}

type PaginatedReputationPolicyList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [ReputationPolicy]!
}

"""Reputation Policy Serializer"""
type ReputationPolicy @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """
  When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged.
  """
  executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
  """Get object component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  """Return objects policy is bound to"""
  boundTo: Int! @source(name: "bound_to", type: "Int!", subgraph: "Authentik")
  checkIp: Boolean @source(name: "check_ip", type: "Boolean", subgraph: "Authentik")
  checkUsername: Boolean @source(name: "check_username", type: "Boolean", subgraph: "Authentik")
  threshold: Int
}

type PaginatedReputationList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [Reputation]!
}

"""Reputation Serializer"""
type Reputation @join__type(graph: AUTHENTIK) {
  pk: UUID
  identifier: String!
  ip: String!
  ipGeoData: JSON @source(name: "ip_geo_data", type: "JSON", subgraph: "Authentik")
  ipAsnData: JSON @source(name: "ip_asn_data", type: "JSON", subgraph: "Authentik")
  score: BigInt
  updated: DateTime!
}

type PaginatedPropertyMappingList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [PropertyMapping]!
}

"""PropertyMapping Serializer"""
type PropertyMapping @join__type(graph: AUTHENTIK) {
  pk: UUID!
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: String
  name: String!
  expression: String!
  """Get object's component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
}

type PaginatedNotificationWebhookMappingList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [NotificationWebhookMapping]!
}

"""NotificationWebhookMapping Serializer"""
type NotificationWebhookMapping @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  expression: String!
}

type PaginatedGoogleWorkspaceProviderMappingList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [GoogleWorkspaceProviderMapping]!
}

"""GoogleWorkspaceProviderMapping Serializer"""
type GoogleWorkspaceProviderMapping @join__type(graph: AUTHENTIK) {
  pk: UUID!
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: String
  name: String!
  expression: String!
  """Get object's component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
}

type PaginatedMicrosoftEntraProviderMappingList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [MicrosoftEntraProviderMapping]!
}

"""MicrosoftEntraProviderMapping Serializer"""
type MicrosoftEntraProviderMapping @join__type(graph: AUTHENTIK) {
  pk: UUID!
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: String
  name: String!
  expression: String!
  """Get object's component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
}

type PaginatedRacPropertyMappingList @source(name: "PaginatedRACPropertyMappingList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [RacPropertyMapping]! @source(name: "results", type: "[RACPropertyMapping]!", subgraph: "Authentik")
}

"""RACPropertyMapping Serializer"""
type RacPropertyMapping @source(name: "RACPropertyMapping", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pk: UUID!
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: String
  name: String!
  expression: String
  """Get object's component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  staticSettings: JSON! @source(name: "static_settings", type: "JSON!", subgraph: "Authentik")
}

type PaginatedRadiusProviderPropertyMappingList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [RadiusProviderPropertyMapping]!
}

"""RadiusProviderPropertyMapping Serializer"""
type RadiusProviderPropertyMapping @join__type(graph: AUTHENTIK) {
  pk: UUID!
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: String
  name: String!
  expression: String!
  """Get object's component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
}

type PaginatedSamlPropertyMappingList @source(name: "PaginatedSAMLPropertyMappingList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [SamlPropertyMapping]! @source(name: "results", type: "[SAMLPropertyMapping]!", subgraph: "Authentik")
}

"""SAMLPropertyMapping Serializer"""
type SamlPropertyMapping @source(name: "SAMLPropertyMapping", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pk: UUID!
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: String
  name: String!
  expression: String!
  """Get object's component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  samlName: String! @source(name: "saml_name", type: "String!", subgraph: "Authentik")
  friendlyName: String @source(name: "friendly_name", type: "String", subgraph: "Authentik")
}

type PaginatedScimMappingList @source(name: "PaginatedSCIMMappingList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [ScimMapping]! @source(name: "results", type: "[SCIMMapping]!", subgraph: "Authentik")
}

"""SCIMMapping Serializer"""
type ScimMapping @source(name: "SCIMMapping", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pk: UUID!
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: String
  name: String!
  expression: String!
  """Get object's component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
}

type PaginatedScopeMappingList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [ScopeMapping]!
}

"""ScopeMapping Serializer"""
type ScopeMapping @join__type(graph: AUTHENTIK) {
  pk: UUID!
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: String
  name: String!
  expression: String!
  """Get object's component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  """Scope name requested by the client"""
  scopeName: String! @source(name: "scope_name", type: "String!", subgraph: "Authentik")
  """
  Description shown to the user when consenting. If left empty, the user won't be informed.
  """
  description: String
}

type PaginatedKerberosSourcePropertyMappingList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [KerberosSourcePropertyMapping]!
}

"""Kerberos PropertyMapping Serializer"""
type KerberosSourcePropertyMapping @join__type(graph: AUTHENTIK) {
  pk: UUID!
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: String
  name: String!
  expression: String!
  """Get object's component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
}

type PaginatedLdapSourcePropertyMappingList @source(name: "PaginatedLDAPSourcePropertyMappingList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [LdapSourcePropertyMapping]! @source(name: "results", type: "[LDAPSourcePropertyMapping]!", subgraph: "Authentik")
}

"""LDAP PropertyMapping Serializer"""
type LdapSourcePropertyMapping @source(name: "LDAPSourcePropertyMapping", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pk: UUID!
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: String
  name: String!
  expression: String!
  """Get object's component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
}

type PaginatedOAuthSourcePropertyMappingList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [OAuthSourcePropertyMapping]!
}

"""OAuthSourcePropertyMapping Serializer"""
type OAuthSourcePropertyMapping @join__type(graph: AUTHENTIK) {
  pk: UUID!
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: String
  name: String!
  expression: String!
  """Get object's component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
}

type PaginatedPlexSourcePropertyMappingList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [PlexSourcePropertyMapping]!
}

"""PlexSourcePropertyMapping Serializer"""
type PlexSourcePropertyMapping @join__type(graph: AUTHENTIK) {
  pk: UUID!
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: String
  name: String!
  expression: String!
  """Get object's component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
}

type PaginatedSamlSourcePropertyMappingList @source(name: "PaginatedSAMLSourcePropertyMappingList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [SamlSourcePropertyMapping]! @source(name: "results", type: "[SAMLSourcePropertyMapping]!", subgraph: "Authentik")
}

"""SAMLSourcePropertyMapping Serializer"""
type SamlSourcePropertyMapping @source(name: "SAMLSourcePropertyMapping", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pk: UUID!
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: String
  name: String!
  expression: String!
  """Get object's component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
}

type PaginatedScimSourcePropertyMappingList @source(name: "PaginatedSCIMSourcePropertyMappingList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [ScimSourcePropertyMapping]! @source(name: "results", type: "[SCIMSourcePropertyMapping]!", subgraph: "Authentik")
}

"""SCIMSourcePropertyMapping Serializer"""
type ScimSourcePropertyMapping @source(name: "SCIMSourcePropertyMapping", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pk: UUID!
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: String
  name: String!
  expression: String!
  """Get object's component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
}

type PaginatedProviderList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [Provider]!
}

type PaginatedGoogleWorkspaceProviderList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [GoogleWorkspaceProvider]!
}

"""GoogleWorkspaceProvider Serializer"""
type GoogleWorkspaceProvider @join__type(graph: AUTHENTIK) {
  pk: Int!
  name: String!
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  """Property mappings used for group creation/updating."""
  propertyMappingsGroup: [UUID] @source(name: "property_mappings_group", type: "[UUID]", subgraph: "Authentik")
  """Get object component so that we know how to edit the object"""
  component: String!
  """Internal application name, used in URLs."""
  assignedBackchannelApplicationSlug: String! @source(name: "assigned_backchannel_application_slug", type: "String!", subgraph: "Authentik")
  """Application's display Name."""
  assignedBackchannelApplicationName: String! @source(name: "assigned_backchannel_application_name", type: "String!", subgraph: "Authentik")
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  delegatedSubject: EmailAddress! @source(name: "delegated_subject", type: "EmailAddress!", subgraph: "Authentik")
  credentials: JSON!
  scopes: String
  excludeUsersServiceAccount: Boolean @source(name: "exclude_users_service_account", type: "Boolean", subgraph: "Authentik")
  filterGroup: UUID @source(name: "filter_group", type: "UUID", subgraph: "Authentik")
  userDeleteAction: OutgoingSyncDeleteAction @source(name: "user_delete_action", type: "OutgoingSyncDeleteAction", subgraph: "Authentik")
  groupDeleteAction: OutgoingSyncDeleteAction @source(name: "group_delete_action", type: "OutgoingSyncDeleteAction", subgraph: "Authentik")
  defaultGroupEmailDomain: String! @source(name: "default_group_email_domain", type: "String!", subgraph: "Authentik")
}

"""Provider sync status"""
type SyncStatus @join__type(graph: AUTHENTIK) {
  isRunning: Boolean! @source(name: "is_running", type: "Boolean!", subgraph: "Authentik")
  tasks: [SystemTask]!
}

type PaginatedGoogleWorkspaceProviderGroupList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [GoogleWorkspaceProviderGroup]!
}

"""GoogleWorkspaceProviderGroup Serializer"""
type GoogleWorkspaceProviderGroup @join__type(graph: AUTHENTIK) {
  id: UUID!
  googleId: String! @source(name: "google_id", type: "String!", subgraph: "Authentik")
  group: UUID!
  groupObj: UserGroup! @source(name: "group_obj", type: "UserGroup!", subgraph: "Authentik")
  provider: Int!
  attributes: JSON!
}

type PaginatedGoogleWorkspaceProviderUserList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [GoogleWorkspaceProviderUser]!
}

"""GoogleWorkspaceProviderUser Serializer"""
type GoogleWorkspaceProviderUser @join__type(graph: AUTHENTIK) {
  id: UUID!
  googleId: String! @source(name: "google_id", type: "String!", subgraph: "Authentik")
  user: Int!
  userObj: GroupMember! @source(name: "user_obj", type: "GroupMember!", subgraph: "Authentik")
  provider: Int!
  attributes: JSON!
}

type PaginatedLdapProviderList @source(name: "PaginatedLDAPProviderList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [LdapProvider]! @source(name: "results", type: "[LDAPProvider]!", subgraph: "Authentik")
}

"""LDAPProvider Serializer"""
type LdapProvider @source(name: "LDAPProvider", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pk: Int!
  name: String!
  """
  Flow used for authentication when the associated application is accessed by an un-authenticated user.
  """
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow used when authorizing this provider."""
  authorizationFlow: UUID! @source(name: "authorization_flow", type: "UUID!", subgraph: "Authentik")
  """Flow used ending the session from a provider."""
  invalidationFlow: UUID! @source(name: "invalidation_flow", type: "UUID!", subgraph: "Authentik")
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  """Get object component so that we know how to edit the object"""
  component: String!
  """Internal application name, used in URLs."""
  assignedApplicationSlug: String! @source(name: "assigned_application_slug", type: "String!", subgraph: "Authentik")
  """Application's display Name."""
  assignedApplicationName: String! @source(name: "assigned_application_name", type: "String!", subgraph: "Authentik")
  """Internal application name, used in URLs."""
  assignedBackchannelApplicationSlug: String! @source(name: "assigned_backchannel_application_slug", type: "String!", subgraph: "Authentik")
  """Application's display Name."""
  assignedBackchannelApplicationName: String! @source(name: "assigned_backchannel_application_name", type: "String!", subgraph: "Authentik")
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  """DN under which objects are accessible."""
  baseDn: String @source(name: "base_dn", type: "String", subgraph: "Authentik")
  certificate: UUID
  tlsServerName: String @source(name: "tls_server_name", type: "String", subgraph: "Authentik")
  """
  The start for uidNumbers, this number is added to the user.pk to make sure that the numbers aren't too low for POSIX users. Default is 2000 to ensure that we don't collide with local users uidNumber
  """
  uidStartNumber: Int @source(name: "uid_start_number", type: "Int", subgraph: "Authentik")
  """
  The start for gidNumbers, this number is added to a number generated from the group.pk to make sure that the numbers aren't too low for POSIX groups. Default is 4000 to ensure that we don't collide with local groups or users primary groups gidNumber
  """
  gidStartNumber: Int @source(name: "gid_start_number", type: "Int", subgraph: "Authentik")
  outpostSet: [String]! @source(name: "outpost_set", type: "[String]!", subgraph: "Authentik")
  searchMode: LdapapiAccessMode @source(name: "search_mode", type: "LDAPAPIAccessMode", subgraph: "Authentik")
  bindMode: LdapapiAccessMode @source(name: "bind_mode", type: "LDAPAPIAccessMode", subgraph: "Authentik")
  """
  When enabled, code-based multi-factor authentication can be used by appending a semicolon and the TOTP code to the password. This should only be enabled if all users that will bind to this provider have a TOTP device configured, as otherwise a password may incorrectly be rejected if it contains a semicolon.
  """
  mfaSupport: Boolean @source(name: "mfa_support", type: "Boolean", subgraph: "Authentik")
}

type PaginatedMicrosoftEntraProviderList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [MicrosoftEntraProvider]!
}

"""MicrosoftEntraProvider Serializer"""
type MicrosoftEntraProvider @join__type(graph: AUTHENTIK) {
  pk: Int!
  name: String!
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  """Property mappings used for group creation/updating."""
  propertyMappingsGroup: [UUID] @source(name: "property_mappings_group", type: "[UUID]", subgraph: "Authentik")
  """Get object component so that we know how to edit the object"""
  component: String!
  """Internal application name, used in URLs."""
  assignedBackchannelApplicationSlug: String! @source(name: "assigned_backchannel_application_slug", type: "String!", subgraph: "Authentik")
  """Application's display Name."""
  assignedBackchannelApplicationName: String! @source(name: "assigned_backchannel_application_name", type: "String!", subgraph: "Authentik")
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  clientId: String! @source(name: "client_id", type: "String!", subgraph: "Authentik")
  clientSecret: String! @source(name: "client_secret", type: "String!", subgraph: "Authentik")
  tenantId: String! @source(name: "tenant_id", type: "String!", subgraph: "Authentik")
  excludeUsersServiceAccount: Boolean @source(name: "exclude_users_service_account", type: "Boolean", subgraph: "Authentik")
  filterGroup: UUID @source(name: "filter_group", type: "UUID", subgraph: "Authentik")
  userDeleteAction: OutgoingSyncDeleteAction @source(name: "user_delete_action", type: "OutgoingSyncDeleteAction", subgraph: "Authentik")
  groupDeleteAction: OutgoingSyncDeleteAction @source(name: "group_delete_action", type: "OutgoingSyncDeleteAction", subgraph: "Authentik")
}

type PaginatedMicrosoftEntraProviderGroupList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [MicrosoftEntraProviderGroup]!
}

"""MicrosoftEntraProviderGroup Serializer"""
type MicrosoftEntraProviderGroup @join__type(graph: AUTHENTIK) {
  id: UUID!
  microsoftId: String! @source(name: "microsoft_id", type: "String!", subgraph: "Authentik")
  group: UUID!
  groupObj: UserGroup! @source(name: "group_obj", type: "UserGroup!", subgraph: "Authentik")
  provider: Int!
  attributes: JSON!
}

type PaginatedMicrosoftEntraProviderUserList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [MicrosoftEntraProviderUser]!
}

"""MicrosoftEntraProviderUser Serializer"""
type MicrosoftEntraProviderUser @join__type(graph: AUTHENTIK) {
  id: UUID!
  microsoftId: String! @source(name: "microsoft_id", type: "String!", subgraph: "Authentik")
  user: Int!
  userObj: GroupMember! @source(name: "user_obj", type: "GroupMember!", subgraph: "Authentik")
  provider: Int!
  attributes: JSON!
}

type PaginatedOAuth2ProviderList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [OAuth2Provider]!
}

"""
Preview how the current user is mapped via the property mappings selected in a provider
"""
type PropertyMappingPreview @join__type(graph: AUTHENTIK) {
  preview: JSON!
}

"""OAuth2 Provider Metadata serializer"""
type OAuth2ProviderSetupUrLs @source(name: "OAuth2ProviderSetupURLs", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  issuer: String!
  authorize: String!
  token: String!
  userInfo: String! @source(name: "user_info", type: "String!", subgraph: "Authentik")
  providerInfo: String! @source(name: "provider_info", type: "String!", subgraph: "Authentik")
  logout: String!
  jwks: String!
}

type PaginatedProxyProviderList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [ProxyProvider]!
}

"""ProxyProvider Serializer"""
type ProxyProvider @join__type(graph: AUTHENTIK) {
  pk: Int!
  name: String!
  """
  Flow used for authentication when the associated application is accessed by an un-authenticated user.
  """
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow used when authorizing this provider."""
  authorizationFlow: UUID! @source(name: "authorization_flow", type: "UUID!", subgraph: "Authentik")
  """Flow used ending the session from a provider."""
  invalidationFlow: UUID! @source(name: "invalidation_flow", type: "UUID!", subgraph: "Authentik")
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  """Get object component so that we know how to edit the object"""
  component: String!
  """Internal application name, used in URLs."""
  assignedApplicationSlug: String! @source(name: "assigned_application_slug", type: "String!", subgraph: "Authentik")
  """Application's display Name."""
  assignedApplicationName: String! @source(name: "assigned_application_name", type: "String!", subgraph: "Authentik")
  """Internal application name, used in URLs."""
  assignedBackchannelApplicationSlug: String! @source(name: "assigned_backchannel_application_slug", type: "String!", subgraph: "Authentik")
  """Application's display Name."""
  assignedBackchannelApplicationName: String! @source(name: "assigned_backchannel_application_name", type: "String!", subgraph: "Authentik")
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  clientId: String! @source(name: "client_id", type: "String!", subgraph: "Authentik")
  internalHost: URL @source(name: "internal_host", type: "URL", subgraph: "Authentik")
  externalHost: URL! @source(name: "external_host", type: "URL!", subgraph: "Authentik")
  """Validate SSL Certificates of upstream servers"""
  internalHostSslValidation: Boolean @source(name: "internal_host_ssl_validation", type: "Boolean", subgraph: "Authentik")
  certificate: UUID
  """
  Regular expressions for which authentication is not required. Each new line is interpreted as a new Regular Expression.
  """
  skipPathRegex: String @source(name: "skip_path_regex", type: "String", subgraph: "Authentik")
  """
  Set a custom HTTP-Basic Authentication header based on values from authentik.
  """
  basicAuthEnabled: Boolean @source(name: "basic_auth_enabled", type: "Boolean", subgraph: "Authentik")
  """
  User/Group Attribute used for the password part of the HTTP-Basic Header.
  """
  basicAuthPasswordAttribute: String @source(name: "basic_auth_password_attribute", type: "String", subgraph: "Authentik")
  """
  User/Group Attribute used for the user part of the HTTP-Basic Header. If not set, the user's Email address is used.
  """
  basicAuthUserAttribute: String @source(name: "basic_auth_user_attribute", type: "String", subgraph: "Authentik")
  mode: ProxyMode
  """
  When enabled, this provider will intercept the authorization header and authenticate requests based on its value.
  """
  interceptHeaderAuth: Boolean @source(name: "intercept_header_auth", type: "Boolean", subgraph: "Authentik")
  redirectUris: [RedirectUri]! @source(name: "redirect_uris", type: "[RedirectURI]!", subgraph: "Authentik")
  cookieDomain: String @source(name: "cookie_domain", type: "String", subgraph: "Authentik")
  jwksSources: [UUID] @source(name: "jwks_sources", type: "[UUID]", subgraph: "Authentik")
  """
  Tokens not valid on or after current time + this value (Format: hours=1;minutes=2;seconds=3).
  """
  accessTokenValidity: String @source(name: "access_token_validity", type: "String", subgraph: "Authentik")
  """
  Tokens not valid on or after current time + this value (Format: hours=1;minutes=2;seconds=3).
  """
  refreshTokenValidity: String @source(name: "refresh_token_validity", type: "String", subgraph: "Authentik")
  outpostSet: [String]! @source(name: "outpost_set", type: "[String]!", subgraph: "Authentik")
}

type PaginatedRacProviderList @source(name: "PaginatedRACProviderList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [RacProvider]! @source(name: "results", type: "[RACProvider]!", subgraph: "Authentik")
}

"""RACProvider Serializer"""
type RacProvider @source(name: "RACProvider", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pk: Int!
  name: String!
  """
  Flow used for authentication when the associated application is accessed by an un-authenticated user.
  """
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow used when authorizing this provider."""
  authorizationFlow: UUID! @source(name: "authorization_flow", type: "UUID!", subgraph: "Authentik")
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  """Get object component so that we know how to edit the object"""
  component: String!
  """Internal application name, used in URLs."""
  assignedApplicationSlug: String! @source(name: "assigned_application_slug", type: "String!", subgraph: "Authentik")
  """Application's display Name."""
  assignedApplicationName: String! @source(name: "assigned_application_name", type: "String!", subgraph: "Authentik")
  """Internal application name, used in URLs."""
  assignedBackchannelApplicationSlug: String! @source(name: "assigned_backchannel_application_slug", type: "String!", subgraph: "Authentik")
  """Application's display Name."""
  assignedBackchannelApplicationName: String! @source(name: "assigned_backchannel_application_name", type: "String!", subgraph: "Authentik")
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  settings: JSON
  outpostSet: [String]! @source(name: "outpost_set", type: "[String]!", subgraph: "Authentik")
  """
  Determines how long a session lasts. Default of 0 means that the sessions lasts until the browser is closed. (Format: hours=-1;minutes=-2;seconds=-3)
  """
  connectionExpiry: String @source(name: "connection_expiry", type: "String", subgraph: "Authentik")
  """When set to true, connection tokens will be deleted upon disconnect."""
  deleteTokenOnDisconnect: Boolean @source(name: "delete_token_on_disconnect", type: "Boolean", subgraph: "Authentik")
  additionalProperties: JSON @resolveRoot(subgraph: "Authentik")
}

type PaginatedRadiusProviderList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [RadiusProvider]!
}

"""RadiusProvider Serializer"""
type RadiusProvider @join__type(graph: AUTHENTIK) {
  pk: Int!
  name: String!
  """
  Flow used for authentication when the associated application is accessed by an un-authenticated user.
  """
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow used when authorizing this provider."""
  authorizationFlow: UUID! @source(name: "authorization_flow", type: "UUID!", subgraph: "Authentik")
  """Flow used ending the session from a provider."""
  invalidationFlow: UUID! @source(name: "invalidation_flow", type: "UUID!", subgraph: "Authentik")
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  """Get object component so that we know how to edit the object"""
  component: String!
  """Internal application name, used in URLs."""
  assignedApplicationSlug: String! @source(name: "assigned_application_slug", type: "String!", subgraph: "Authentik")
  """Application's display Name."""
  assignedApplicationName: String! @source(name: "assigned_application_name", type: "String!", subgraph: "Authentik")
  """Internal application name, used in URLs."""
  assignedBackchannelApplicationSlug: String! @source(name: "assigned_backchannel_application_slug", type: "String!", subgraph: "Authentik")
  """Application's display Name."""
  assignedBackchannelApplicationName: String! @source(name: "assigned_backchannel_application_name", type: "String!", subgraph: "Authentik")
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  """
  List of CIDRs (comma-separated) that clients can connect from. A more specific CIDR will match before a looser one. Clients connecting from a non-specified CIDR will be dropped.
  """
  clientNetworks: String @source(name: "client_networks", type: "String", subgraph: "Authentik")
  """Shared secret between clients and server to hash packets."""
  sharedSecret: String @source(name: "shared_secret", type: "String", subgraph: "Authentik")
  outpostSet: [String]! @source(name: "outpost_set", type: "[String]!", subgraph: "Authentik")
  """
  When enabled, code-based multi-factor authentication can be used by appending a semicolon and the TOTP code to the password. This should only be enabled if all users that will bind to this provider have a TOTP device configured, as otherwise a password may incorrectly be rejected if it contains a semicolon.
  """
  mfaSupport: Boolean @source(name: "mfa_support", type: "Boolean", subgraph: "Authentik")
}

type PaginatedSamlProviderList @source(name: "PaginatedSAMLProviderList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [SamlProvider]! @source(name: "results", type: "[SAMLProvider]!", subgraph: "Authentik")
}

"""SAMLProvider Serializer"""
type SamlProvider @source(name: "SAMLProvider", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pk: Int!
  name: String!
  """
  Flow used for authentication when the associated application is accessed by an un-authenticated user.
  """
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow used when authorizing this provider."""
  authorizationFlow: UUID! @source(name: "authorization_flow", type: "UUID!", subgraph: "Authentik")
  """Flow used ending the session from a provider."""
  invalidationFlow: UUID! @source(name: "invalidation_flow", type: "UUID!", subgraph: "Authentik")
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  """Get object component so that we know how to edit the object"""
  component: String!
  """Internal application name, used in URLs."""
  assignedApplicationSlug: String! @source(name: "assigned_application_slug", type: "String!", subgraph: "Authentik")
  """Application's display Name."""
  assignedApplicationName: String! @source(name: "assigned_application_name", type: "String!", subgraph: "Authentik")
  """Internal application name, used in URLs."""
  assignedBackchannelApplicationSlug: String! @source(name: "assigned_backchannel_application_slug", type: "String!", subgraph: "Authentik")
  """Application's display Name."""
  assignedBackchannelApplicationName: String! @source(name: "assigned_backchannel_application_name", type: "String!", subgraph: "Authentik")
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  acsUrl: URL! @source(name: "acs_url", type: "URL!", subgraph: "Authentik")
  """
  Value of the audience restriction field of the assertion. When left empty, no audience restriction will be added.
  """
  audience: String
  """Also known as EntityID"""
  issuer: String
  """
  Assertion valid not before current time + this value (Format: hours=-1;minutes=-2;seconds=-3).
  """
  assertionValidNotBefore: String @source(name: "assertion_valid_not_before", type: "String", subgraph: "Authentik")
  """
  Assertion not valid on or after current time + this value (Format: hours=1;minutes=2;seconds=3).
  """
  assertionValidNotOnOrAfter: String @source(name: "assertion_valid_not_on_or_after", type: "String", subgraph: "Authentik")
  """
  Session not valid on or after current time + this value (Format: hours=1;minutes=2;seconds=3).
  """
  sessionValidNotOnOrAfter: String @source(name: "session_valid_not_on_or_after", type: "String", subgraph: "Authentik")
  """
  Configure how the NameID value will be created. When left empty, the NameIDPolicy of the incoming request will be considered
  """
  nameIdMapping: UUID @source(name: "name_id_mapping", type: "UUID", subgraph: "Authentik")
  digestAlgorithm: DigestAlgorithmEnum @source(name: "digest_algorithm", type: "DigestAlgorithmEnum", subgraph: "Authentik")
  signatureAlgorithm: SignatureAlgorithmEnum @source(name: "signature_algorithm", type: "SignatureAlgorithmEnum", subgraph: "Authentik")
  """Keypair used to sign outgoing Responses going to the Service Provider."""
  signingKp: UUID @source(name: "signing_kp", type: "UUID", subgraph: "Authentik")
  """
  When selected, incoming assertion's Signatures will be validated against this certificate. To allow unsigned Requests, leave on default.
  """
  verificationKp: UUID @source(name: "verification_kp", type: "UUID", subgraph: "Authentik")
  """
  When selected, incoming assertions are encrypted by the IdP using the public key of the encryption keypair. The assertion is decrypted by the SP using the the private key.
  """
  encryptionKp: UUID @source(name: "encryption_kp", type: "UUID", subgraph: "Authentik")
  signAssertion: Boolean @source(name: "sign_assertion", type: "Boolean", subgraph: "Authentik")
  signResponse: Boolean @source(name: "sign_response", type: "Boolean", subgraph: "Authentik")
  """
  This determines how authentik sends the response back to the Service Provider.
  """
  spBinding: ServiceProviderBinding @source(name: "sp_binding", type: "Service_Provider_Binding", subgraph: "Authentik")
  """Default relay_state value for IDP-initiated logins"""
  defaultRelayState: String @source(name: "default_relay_state", type: "String", subgraph: "Authentik")
  """Get metadata download URL"""
  urlDownloadMetadata: String! @source(name: "url_download_metadata", type: "String!", subgraph: "Authentik")
  """Get SSO Post URL"""
  urlSsoPost: String! @source(name: "url_sso_post", type: "String!", subgraph: "Authentik")
  """Get SSO Redirect URL"""
  urlSsoRedirect: String! @source(name: "url_sso_redirect", type: "String!", subgraph: "Authentik")
  """Get SSO IDP-Initiated URL"""
  urlSsoInit: String! @source(name: "url_sso_init", type: "String!", subgraph: "Authentik")
  """Get SLO POST URL"""
  urlSloPost: String! @source(name: "url_slo_post", type: "String!", subgraph: "Authentik")
  """Get SLO redirect URL"""
  urlSloRedirect: String! @source(name: "url_slo_redirect", type: "String!", subgraph: "Authentik")
}

"""
This determines how authentik sends the response back to the Service Provider.
"""
type ServiceProviderBinding @source(name: "Service_Provider_Binding", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  spBindingEnum: SpBindingEnum @resolveRoot(subgraph: "Authentik") @source(name: "SpBindingEnum", type: "SpBindingEnum", subgraph: "Authentik")
}

"""SAML Provider Metadata serializer"""
type SamlMetadata @source(name: "SAMLMetadata", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  metadata: String!
  downloadUrl: String! @source(name: "download_url", type: "String!", subgraph: "Authentik")
}

type PaginatedScimProviderList @source(name: "PaginatedSCIMProviderList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [ScimProvider]! @source(name: "results", type: "[SCIMProvider]!", subgraph: "Authentik")
}

"""SCIMProvider Serializer"""
type ScimProvider @source(name: "SCIMProvider", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pk: Int!
  name: String!
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  """Property mappings used for group creation/updating."""
  propertyMappingsGroup: [UUID] @source(name: "property_mappings_group", type: "[UUID]", subgraph: "Authentik")
  """Get object component so that we know how to edit the object"""
  component: String!
  """Internal application name, used in URLs."""
  assignedBackchannelApplicationSlug: String! @source(name: "assigned_backchannel_application_slug", type: "String!", subgraph: "Authentik")
  """Application's display Name."""
  assignedBackchannelApplicationName: String! @source(name: "assigned_backchannel_application_name", type: "String!", subgraph: "Authentik")
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  """Base URL to SCIM requests, usually ends in /v2"""
  url: String!
  verifyCertificates: Boolean @source(name: "verify_certificates", type: "Boolean", subgraph: "Authentik")
  """Authentication token"""
  token: String!
  excludeUsersServiceAccount: Boolean @source(name: "exclude_users_service_account", type: "Boolean", subgraph: "Authentik")
  filterGroup: UUID @source(name: "filter_group", type: "UUID", subgraph: "Authentik")
}

type PaginatedScimProviderGroupList @source(name: "PaginatedSCIMProviderGroupList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [ScimProviderGroup]! @source(name: "results", type: "[SCIMProviderGroup]!", subgraph: "Authentik")
}

"""SCIMProviderGroup Serializer"""
type ScimProviderGroup @source(name: "SCIMProviderGroup", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  id: UUID!
  scimId: String! @source(name: "scim_id", type: "String!", subgraph: "Authentik")
  group: UUID!
  groupObj: UserGroup! @source(name: "group_obj", type: "UserGroup!", subgraph: "Authentik")
  provider: Int!
}

type PaginatedScimProviderUserList @source(name: "PaginatedSCIMProviderUserList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [ScimProviderUser]! @source(name: "results", type: "[SCIMProviderUser]!", subgraph: "Authentik")
}

"""SCIMProviderUser Serializer"""
type ScimProviderUser @source(name: "SCIMProviderUser", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  id: UUID!
  scimId: String! @source(name: "scim_id", type: "String!", subgraph: "Authentik")
  user: Int!
  userObj: GroupMember! @source(name: "user_obj", type: "GroupMember!", subgraph: "Authentik")
  provider: Int!
}

type PaginatedConnectionTokenList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [ConnectionToken]!
}

"""ConnectionToken Serializer"""
type ConnectionToken @join__type(graph: AUTHENTIK) {
  pk: UUID
  provider: Int!
  providerObj: RacProvider! @source(name: "provider_obj", type: "RACProvider!", subgraph: "Authentik")
  endpoint: UUID!
  endpointObj: Endpoint! @source(name: "endpoint_obj", type: "Endpoint!", subgraph: "Authentik")
  user: GroupMember!
}

"""Endpoint Serializer"""
type Endpoint @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  provider: Int!
  providerObj: RacProvider! @source(name: "provider_obj", type: "RACProvider!", subgraph: "Authentik")
  protocol: ProtocolEnum!
  host: String!
  settings: JSON
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  authMode: AuthModeEnum! @source(name: "auth_mode", type: "AuthModeEnum!", subgraph: "Authentik")
  """
  Build actual launch URL (the provider itself does not have one, just
  individual endpoints)
  """
  launchUrl: String @source(name: "launch_url", type: "String", subgraph: "Authentik")
  maximumConnections: Int @source(name: "maximum_connections", type: "Int", subgraph: "Authentik")
  additionalProperties: JSON @resolveRoot(subgraph: "Authentik")
}

type PaginatedEndpointList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [Endpoint]!
}

type PaginatedPermissionList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [Permission]!
}

"""Global permission"""
type Permission @join__type(graph: AUTHENTIK) {
  id: Int!
  name: QueryRbacPermissionsListOneOf_0ResultsItemsName! @source(name: "name", type: "query_rbac_permissions_list_oneOf_0_results_items_name!", subgraph: "Authentik")
  codename: QueryRbacPermissionsListOneOf_0ResultsItemsCodename! @source(name: "codename", type: "query_rbac_permissions_list_oneOf_0_results_items_codename!", subgraph: "Authentik")
  model: String!
  appLabel: String! @source(name: "app_label", type: "String!", subgraph: "Authentik")
  """Human-readable app label"""
  appLabelVerbose: String! @source(name: "app_label_verbose", type: "String!", subgraph: "Authentik")
  """Human-readable model name"""
  modelVerbose: String! @source(name: "model_verbose", type: "String!", subgraph: "Authentik")
}

type PaginatedRoleAssignedObjectPermissionList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [RoleAssignedObjectPermission]!
}

"""Roles assigned object permission serializer"""
type RoleAssignedObjectPermission @join__type(graph: AUTHENTIK) {
  rolePk: String! @source(name: "role_pk", type: "String!", subgraph: "Authentik")
  name: String!
  permissions: [RoleObjectPermission]!
}

"""Role-bound object level permission"""
type RoleObjectPermission @join__type(graph: AUTHENTIK) {
  id: Int!
  codename: String!
  model: String!
  appLabel: String! @source(name: "app_label", type: "String!", subgraph: "Authentik")
  objectPk: String! @source(name: "object_pk", type: "String!", subgraph: "Authentik")
  name: String!
}

type PaginatedUserAssignedObjectPermissionList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [UserAssignedObjectPermission]!
}

"""Users assigned object permission serializer"""
type UserAssignedObjectPermission @join__type(graph: AUTHENTIK) {
  pk: Int!
  username: QueryRbacPermissionsAssignedByUsersListOneOf_0ResultsItemsUsername! @source(name: "username", type: "query_rbac_permissions_assigned_by_users_list_oneOf_0_results_items_username!", subgraph: "Authentik")
  """User's display name."""
  name: String!
  """
  Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
  """
  isActive: Boolean @source(name: "is_active", type: "Boolean", subgraph: "Authentik")
  lastLogin: DateTime @source(name: "last_login", type: "DateTime", subgraph: "Authentik")
  email: EmailAddress
  attributes: JSON
  uid: String!
  permissions: [UserObjectPermission]!
  isSuperuser: Boolean! @source(name: "is_superuser", type: "Boolean!", subgraph: "Authentik")
}

"""User-bound object level permission"""
type UserObjectPermission @join__type(graph: AUTHENTIK) {
  id: Int!
  codename: String!
  model: String!
  appLabel: String! @source(name: "app_label", type: "String!", subgraph: "Authentik")
  objectPk: String! @source(name: "object_pk", type: "String!", subgraph: "Authentik")
  name: String!
}

type PaginatedExtraRoleObjectPermissionList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [ExtraRoleObjectPermission]!
}

"""User permission with additional object-related data"""
type ExtraRoleObjectPermission @join__type(graph: AUTHENTIK) {
  id: Int!
  codename: String!
  model: String!
  appLabel: String! @source(name: "app_label", type: "String!", subgraph: "Authentik")
  objectPk: String! @source(name: "object_pk", type: "String!", subgraph: "Authentik")
  name: String!
  """Get app label from permission's model"""
  appLabelVerbose: String! @source(name: "app_label_verbose", type: "String!", subgraph: "Authentik")
  """Get model label from permission's model"""
  modelVerbose: String! @source(name: "model_verbose", type: "String!", subgraph: "Authentik")
  """
  Get model description from attached model. This operation takes at least
  one additional query, and the description is only shown if the user/role has the
  view_ permission on the object
  """
  objectDescription: String @source(name: "object_description", type: "String", subgraph: "Authentik")
}

type PaginatedExtraUserObjectPermissionList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [ExtraUserObjectPermission]!
}

"""User permission with additional object-related data"""
type ExtraUserObjectPermission @join__type(graph: AUTHENTIK) {
  id: Int!
  codename: String!
  model: String!
  appLabel: String! @source(name: "app_label", type: "String!", subgraph: "Authentik")
  objectPk: String! @source(name: "object_pk", type: "String!", subgraph: "Authentik")
  name: String!
  """Get app label from permission's model"""
  appLabelVerbose: String! @source(name: "app_label_verbose", type: "String!", subgraph: "Authentik")
  """Get model label from permission's model"""
  modelVerbose: String! @source(name: "model_verbose", type: "String!", subgraph: "Authentik")
  """
  Get model description from attached model. This operation takes at least
  one additional query, and the description is only shown if the user/role has the
  view_ permission on the object
  """
  objectDescription: String @source(name: "object_description", type: "String", subgraph: "Authentik")
}

type PaginatedRoleList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [Role]!
}

"""Serialize authentik Config into DRF Object"""
type Config @join__type(graph: AUTHENTIK) {
  errorReporting: ErrorReportingConfig! @source(name: "error_reporting", type: "ErrorReportingConfig!", subgraph: "Authentik")
  capabilities: [CapabilitiesEnum]!
  cacheTimeout: Int! @source(name: "cache_timeout", type: "Int!", subgraph: "Authentik")
  cacheTimeoutFlows: Int! @source(name: "cache_timeout_flows", type: "Int!", subgraph: "Authentik")
  cacheTimeoutPolicies: Int! @source(name: "cache_timeout_policies", type: "Int!", subgraph: "Authentik")
  cacheTimeoutReputation: Int! @source(name: "cache_timeout_reputation", type: "Int!", subgraph: "Authentik")
}

"""Config for error reporting"""
type ErrorReportingConfig @join__type(graph: AUTHENTIK) {
  enabled: Boolean!
  sentryDsn: String! @source(name: "sentry_dsn", type: "String!", subgraph: "Authentik")
  environment: String!
  sendPii: Boolean! @source(name: "send_pii", type: "Boolean!", subgraph: "Authentik")
  tracesSampleRate: Float! @source(name: "traces_sample_rate", type: "Float!", subgraph: "Authentik")
}

type JsonContainer @source(name: "JSON_container", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  json: JSON @resolveRoot(subgraph: "Authentik") @source(name: "JSON", type: "JSON", subgraph: "Authentik")
}

type PaginatedSourceList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [Source]!
}

"""Source Serializer"""
type Source @join__type(graph: AUTHENTIK) {
  pk: UUID!
  """Source's display Name."""
  name: String!
  slug: QuerySourcesAllListOneOf_0ResultsItemsSlug! @source(name: "slug", type: "query_sources_all_list_oneOf_0_results_items_slug!", subgraph: "Authentik")
  enabled: Boolean
  """Flow to use when authenticating existing users."""
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow to use when enrolling new users."""
  enrollmentFlow: UUID @source(name: "enrollment_flow", type: "UUID", subgraph: "Authentik")
  userPropertyMappings: [UUID] @source(name: "user_property_mappings", type: "[UUID]", subgraph: "Authentik")
  groupPropertyMappings: [UUID] @source(name: "group_property_mappings", type: "[UUID]", subgraph: "Authentik")
  """Get object component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  userMatchingMode: UserMatchingModeEnum @source(name: "user_matching_mode", type: "UserMatchingModeEnum", subgraph: "Authentik")
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: String
  userPathTemplate: String @source(name: "user_path_template", type: "String", subgraph: "Authentik")
  """
  Get the URL to the Icon. If the name is /static or
  starts with http it is returned as-is
  """
  icon: String
  additionalProperties: JSON @resolveRoot(subgraph: "Authentik")
}

"""Serializer for User settings for stages and sources"""
type UserSetting @join__type(graph: AUTHENTIK) {
  objectUid: String! @source(name: "object_uid", type: "String!", subgraph: "Authentik")
  component: String!
  title: String!
  configureUrl: String @source(name: "configure_url", type: "String", subgraph: "Authentik")
  iconUrl: String @source(name: "icon_url", type: "String", subgraph: "Authentik")
}

type PaginatedGroupKerberosSourceConnectionList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [GroupKerberosSourceConnection]!
}

"""OAuth Group-Source connection Serializer"""
type GroupKerberosSourceConnection @join__type(graph: AUTHENTIK) {
  pk: Int!
  group: UUID!
  source: Source!
  identifier: String!
  created: DateTime!
}

type PaginatedGroupOAuthSourceConnectionList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [GroupOAuthSourceConnection]!
}

"""OAuth Group-Source connection Serializer"""
type GroupOAuthSourceConnection @join__type(graph: AUTHENTIK) {
  pk: Int!
  group: UUID!
  source: Source!
  identifier: String!
  created: DateTime!
}

type PaginatedGroupPlexSourceConnectionList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [GroupPlexSourceConnection]!
}

"""Plex Group-Source connection Serializer"""
type GroupPlexSourceConnection @join__type(graph: AUTHENTIK) {
  pk: Int!
  group: UUID!
  source: Source!
  identifier: String!
  created: DateTime!
}

type PaginatedGroupSamlSourceConnectionList @source(name: "PaginatedGroupSAMLSourceConnectionList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [GroupSamlSourceConnection]! @source(name: "results", type: "[GroupSAMLSourceConnection]!", subgraph: "Authentik")
}

"""OAuth Group-Source connection Serializer"""
type GroupSamlSourceConnection @source(name: "GroupSAMLSourceConnection", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pk: Int!
  group: UUID!
  source: Source!
  identifier: String!
  created: DateTime!
}

type PaginatedKerberosSourceList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [KerberosSource]!
}

"""Kerberos Source Serializer"""
type KerberosSource @join__type(graph: AUTHENTIK) {
  pk: UUID!
  """Source's display Name."""
  name: String!
  slug: QuerySourcesKerberosListOneOf_0ResultsItemsSlug! @source(name: "slug", type: "query_sources_kerberos_list_oneOf_0_results_items_slug!", subgraph: "Authentik")
  enabled: Boolean
  """Flow to use when authenticating existing users."""
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow to use when enrolling new users."""
  enrollmentFlow: UUID @source(name: "enrollment_flow", type: "UUID", subgraph: "Authentik")
  userPropertyMappings: [UUID] @source(name: "user_property_mappings", type: "[UUID]", subgraph: "Authentik")
  groupPropertyMappings: [UUID] @source(name: "group_property_mappings", type: "[UUID]", subgraph: "Authentik")
  """Get object component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  userMatchingMode: UserMatchingModeEnum @source(name: "user_matching_mode", type: "UserMatchingModeEnum", subgraph: "Authentik")
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: String
  userPathTemplate: String @source(name: "user_path_template", type: "String", subgraph: "Authentik")
  icon: String!
  groupMatchingMode: GroupMatchingModeEnum @source(name: "group_matching_mode", type: "GroupMatchingModeEnum", subgraph: "Authentik")
  """Kerberos realm"""
  realm: String!
  """Custom krb5.conf to use. Uses the system one by default"""
  krb5Conf: String @source(name: "krb5_conf", type: "String", subgraph: "Authentik")
  """Sync users from Kerberos into authentik"""
  syncUsers: Boolean @source(name: "sync_users", type: "Boolean", subgraph: "Authentik")
  """When a user changes their password, sync it back to Kerberos"""
  syncUsersPassword: Boolean @source(name: "sync_users_password", type: "Boolean", subgraph: "Authentik")
  """Principal to authenticate to kadmin for sync."""
  syncPrincipal: String @source(name: "sync_principal", type: "String", subgraph: "Authentik")
  """
  Credentials cache to authenticate to kadmin for sync. Must be in the form TYPE:residual
  """
  syncCcache: String @source(name: "sync_ccache", type: "String", subgraph: "Authentik")
  """Get cached source connectivity"""
  connectivity: JSON
  """
  Force the use of a specific server name for SPNEGO. Must be in the form HTTP@hostname
  """
  spnegoServerName: String @source(name: "spnego_server_name", type: "String", subgraph: "Authentik")
  """Credential cache to use for SPNEGO in form type:residual"""
  spnegoCcache: String @source(name: "spnego_ccache", type: "String", subgraph: "Authentik")
  """
  If enabled, the authentik-stored password will be updated upon login with the Kerberos password backend
  """
  passwordLoginUpdateInternalPassword: Boolean @source(name: "password_login_update_internal_password", type: "Boolean", subgraph: "Authentik")
}

"""Kerberos Source sync status"""
type KerberosSyncStatus @join__type(graph: AUTHENTIK) {
  isRunning: Boolean! @source(name: "is_running", type: "Boolean!", subgraph: "Authentik")
  tasks: [SystemTask]!
}

type PaginatedLdapSourceList @source(name: "PaginatedLDAPSourceList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [LdapSource]! @source(name: "results", type: "[LDAPSource]!", subgraph: "Authentik")
}

"""LDAP Source Serializer"""
type LdapSource @source(name: "LDAPSource", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pk: UUID!
  """Source's display Name."""
  name: String!
  slug: QuerySourcesLdapListOneOf_0ResultsItemsSlug! @source(name: "slug", type: "query_sources_ldap_list_oneOf_0_results_items_slug!", subgraph: "Authentik")
  enabled: Boolean
  """Flow to use when authenticating existing users."""
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow to use when enrolling new users."""
  enrollmentFlow: UUID @source(name: "enrollment_flow", type: "UUID", subgraph: "Authentik")
  userPropertyMappings: [UUID] @source(name: "user_property_mappings", type: "[UUID]", subgraph: "Authentik")
  groupPropertyMappings: [UUID] @source(name: "group_property_mappings", type: "[UUID]", subgraph: "Authentik")
  """Get object component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  userMatchingMode: UserMatchingModeEnum @source(name: "user_matching_mode", type: "UserMatchingModeEnum", subgraph: "Authentik")
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: String
  userPathTemplate: String @source(name: "user_path_template", type: "String", subgraph: "Authentik")
  icon: String!
  serverUri: URL! @source(name: "server_uri", type: "URL!", subgraph: "Authentik")
  """
  Optionally verify the LDAP Server's Certificate against the CA Chain in this keypair.
  """
  peerCertificate: UUID @source(name: "peer_certificate", type: "UUID", subgraph: "Authentik")
  """
  Client certificate to authenticate against the LDAP Server's Certificate.
  """
  clientCertificate: UUID @source(name: "client_certificate", type: "UUID", subgraph: "Authentik")
  bindCn: String @source(name: "bind_cn", type: "String", subgraph: "Authentik")
  startTls: Boolean @source(name: "start_tls", type: "Boolean", subgraph: "Authentik")
  sni: Boolean
  baseDn: String! @source(name: "base_dn", type: "String!", subgraph: "Authentik")
  """Prepended to Base DN for User-queries."""
  additionalUserDn: String @source(name: "additional_user_dn", type: "String", subgraph: "Authentik")
  """Prepended to Base DN for Group-queries."""
  additionalGroupDn: String @source(name: "additional_group_dn", type: "String", subgraph: "Authentik")
  """Consider Objects matching this filter to be Users."""
  userObjectFilter: String @source(name: "user_object_filter", type: "String", subgraph: "Authentik")
  """Consider Objects matching this filter to be Groups."""
  groupObjectFilter: String @source(name: "group_object_filter", type: "String", subgraph: "Authentik")
  """Field which contains members of a group."""
  groupMembershipField: String @source(name: "group_membership_field", type: "String", subgraph: "Authentik")
  """Field which contains a unique Identifier."""
  objectUniquenessField: String @source(name: "object_uniqueness_field", type: "String", subgraph: "Authentik")
  """Update internal authentik password when login succeeds with LDAP"""
  passwordLoginUpdateInternalPassword: Boolean @source(name: "password_login_update_internal_password", type: "Boolean", subgraph: "Authentik")
  syncUsers: Boolean @source(name: "sync_users", type: "Boolean", subgraph: "Authentik")
  """
  When a user changes their password, sync it back to LDAP. This can only be enabled on a single LDAP source.
  """
  syncUsersPassword: Boolean @source(name: "sync_users_password", type: "Boolean", subgraph: "Authentik")
  syncGroups: Boolean @source(name: "sync_groups", type: "Boolean", subgraph: "Authentik")
  syncParentGroup: UUID @source(name: "sync_parent_group", type: "UUID", subgraph: "Authentik")
  """Get cached source connectivity"""
  connectivity: JSON
}

type LdapDebug @source(name: "LDAPDebug", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  user: [JSON]!
  group: [JSON]!
  membership: [JSON]!
}

type PaginatedOAuthSourceList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [OAuthSource]!
}

"""OAuth Source Serializer"""
type OAuthSource @join__type(graph: AUTHENTIK) {
  pk: UUID!
  """Source's display Name."""
  name: String!
  slug: QuerySourcesOauthListOneOf_0ResultsItemsSlug! @source(name: "slug", type: "query_sources_oauth_list_oneOf_0_results_items_slug!", subgraph: "Authentik")
  enabled: Boolean
  """Flow to use when authenticating existing users."""
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow to use when enrolling new users."""
  enrollmentFlow: UUID @source(name: "enrollment_flow", type: "UUID", subgraph: "Authentik")
  userPropertyMappings: [UUID] @source(name: "user_property_mappings", type: "[UUID]", subgraph: "Authentik")
  groupPropertyMappings: [UUID] @source(name: "group_property_mappings", type: "[UUID]", subgraph: "Authentik")
  """Get object component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  userMatchingMode: UserMatchingModeEnum @source(name: "user_matching_mode", type: "UserMatchingModeEnum", subgraph: "Authentik")
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: String
  userPathTemplate: String @source(name: "user_path_template", type: "String", subgraph: "Authentik")
  icon: String
  groupMatchingMode: GroupMatchingModeEnum @source(name: "group_matching_mode", type: "GroupMatchingModeEnum", subgraph: "Authentik")
  providerType: ProviderTypeEnum! @source(name: "provider_type", type: "ProviderTypeEnum!", subgraph: "Authentik")
  """
  URL used to request the initial token. This URL is only required for OAuth 1.
  """
  requestTokenUrl: QuerySourcesOauthListOneOf_0ResultsItemsRequestTokenUrl @source(name: "request_token_url", type: "query_sources_oauth_list_oneOf_0_results_items_request_token_url", subgraph: "Authentik")
  """URL the user is redirect to to conest the flow."""
  authorizationUrl: QuerySourcesOauthListOneOf_0ResultsItemsAuthorizationUrl @source(name: "authorization_url", type: "query_sources_oauth_list_oneOf_0_results_items_authorization_url", subgraph: "Authentik")
  """URL used by authentik to retrieve tokens."""
  accessTokenUrl: QuerySourcesOauthListOneOf_0ResultsItemsAccessTokenUrl @source(name: "access_token_url", type: "query_sources_oauth_list_oneOf_0_results_items_access_token_url", subgraph: "Authentik")
  """URL used by authentik to get user information."""
  profileUrl: QuerySourcesOauthListOneOf_0ResultsItemsProfileUrl @source(name: "profile_url", type: "query_sources_oauth_list_oneOf_0_results_items_profile_url", subgraph: "Authentik")
  consumerKey: String! @source(name: "consumer_key", type: "String!", subgraph: "Authentik")
  """Get OAuth Callback URL"""
  callbackUrl: String! @source(name: "callback_url", type: "String!", subgraph: "Authentik")
  additionalScopes: String @source(name: "additional_scopes", type: "String", subgraph: "Authentik")
  type: SourceType!
  oidcWellKnownUrl: String @source(name: "oidc_well_known_url", type: "String", subgraph: "Authentik")
  oidcJwksUrl: String @source(name: "oidc_jwks_url", type: "String", subgraph: "Authentik")
  oidcJwks: JSON @source(name: "oidc_jwks", type: "JSON", subgraph: "Authentik")
}

"""Serializer for SourceType"""
type SourceType @join__type(graph: AUTHENTIK) {
  name: String!
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  urlsCustomizable: Boolean! @source(name: "urls_customizable", type: "Boolean!", subgraph: "Authentik")
  requestTokenUrl: String @source(name: "request_token_url", type: "String", subgraph: "Authentik")
  authorizationUrl: String @source(name: "authorization_url", type: "String", subgraph: "Authentik")
  accessTokenUrl: String @source(name: "access_token_url", type: "String", subgraph: "Authentik")
  profileUrl: String @source(name: "profile_url", type: "String", subgraph: "Authentik")
  oidcWellKnownUrl: String @source(name: "oidc_well_known_url", type: "String", subgraph: "Authentik")
  oidcJwksUrl: String @source(name: "oidc_jwks_url", type: "String", subgraph: "Authentik")
  additionalProperties: JSON @resolveRoot(subgraph: "Authentik")
}

type PaginatedPlexSourceList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [PlexSource]!
}

"""Plex Source Serializer"""
type PlexSource @join__type(graph: AUTHENTIK) {
  pk: UUID!
  """Source's display Name."""
  name: String!
  slug: QuerySourcesPlexListOneOf_0ResultsItemsSlug! @source(name: "slug", type: "query_sources_plex_list_oneOf_0_results_items_slug!", subgraph: "Authentik")
  enabled: Boolean
  """Flow to use when authenticating existing users."""
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow to use when enrolling new users."""
  enrollmentFlow: UUID @source(name: "enrollment_flow", type: "UUID", subgraph: "Authentik")
  userPropertyMappings: [UUID] @source(name: "user_property_mappings", type: "[UUID]", subgraph: "Authentik")
  groupPropertyMappings: [UUID] @source(name: "group_property_mappings", type: "[UUID]", subgraph: "Authentik")
  """Get object component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  userMatchingMode: UserMatchingModeEnum @source(name: "user_matching_mode", type: "UserMatchingModeEnum", subgraph: "Authentik")
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: String
  userPathTemplate: String @source(name: "user_path_template", type: "String", subgraph: "Authentik")
  icon: String!
  groupMatchingMode: GroupMatchingModeEnum @source(name: "group_matching_mode", type: "GroupMatchingModeEnum", subgraph: "Authentik")
  """Client identifier used to talk to Plex."""
  clientId: String @source(name: "client_id", type: "String", subgraph: "Authentik")
  """
  Which servers a user has to be a member of to be granted access. Empty list allows every server.
  """
  allowedServers: [String] @source(name: "allowed_servers", type: "[String]", subgraph: "Authentik")
  """Allow friends to authenticate, even if you don't share a server."""
  allowFriends: Boolean @source(name: "allow_friends", type: "Boolean", subgraph: "Authentik")
  """Plex token used to check friends"""
  plexToken: String! @source(name: "plex_token", type: "String!", subgraph: "Authentik")
}

type PaginatedSamlSourceList @source(name: "PaginatedSAMLSourceList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [SamlSource]! @source(name: "results", type: "[SAMLSource]!", subgraph: "Authentik")
}

"""SAMLSource Serializer"""
type SamlSource @source(name: "SAMLSource", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pk: UUID!
  """Source's display Name."""
  name: String!
  slug: QuerySourcesSamlListOneOf_0ResultsItemsSlug! @source(name: "slug", type: "query_sources_saml_list_oneOf_0_results_items_slug!", subgraph: "Authentik")
  enabled: Boolean
  """Flow to use when authenticating existing users."""
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow to use when enrolling new users."""
  enrollmentFlow: UUID @source(name: "enrollment_flow", type: "UUID", subgraph: "Authentik")
  userPropertyMappings: [UUID] @source(name: "user_property_mappings", type: "[UUID]", subgraph: "Authentik")
  groupPropertyMappings: [UUID] @source(name: "group_property_mappings", type: "[UUID]", subgraph: "Authentik")
  """Get object component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  userMatchingMode: UserMatchingModeEnum @source(name: "user_matching_mode", type: "UserMatchingModeEnum", subgraph: "Authentik")
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: String
  userPathTemplate: String @source(name: "user_path_template", type: "String", subgraph: "Authentik")
  icon: String!
  groupMatchingMode: GroupMatchingModeEnum @source(name: "group_matching_mode", type: "GroupMatchingModeEnum", subgraph: "Authentik")
  """Flow used before authentication."""
  preAuthenticationFlow: UUID! @source(name: "pre_authentication_flow", type: "UUID!", subgraph: "Authentik")
  """Also known as Entity ID. Defaults the Metadata URL."""
  issuer: String
  """URL that the initial Login request is sent to."""
  ssoUrl: URL! @source(name: "sso_url", type: "URL!", subgraph: "Authentik")
  """Optional URL if your IDP supports Single-Logout."""
  sloUrl: URL @source(name: "slo_url", type: "URL", subgraph: "Authentik")
  """
  Allows authentication flows initiated by the IdP. This can be a security risk, as no validation of the request ID is done.
  """
  allowIdpInitiated: Boolean @source(name: "allow_idp_initiated", type: "Boolean", subgraph: "Authentik")
  nameIdPolicy: NameIdPolicyEnum @source(name: "name_id_policy", type: "NameIdPolicyEnum", subgraph: "Authentik")
  bindingType: BindingTypeEnum @source(name: "binding_type", type: "BindingTypeEnum", subgraph: "Authentik")
  """
  When selected, incoming assertion's Signatures will be validated against this certificate. To allow unsigned Requests, leave on default.
  """
  verificationKp: UUID @source(name: "verification_kp", type: "UUID", subgraph: "Authentik")
  """
  Keypair used to sign outgoing Responses going to the Identity Provider.
  """
  signingKp: UUID @source(name: "signing_kp", type: "UUID", subgraph: "Authentik")
  digestAlgorithm: DigestAlgorithmEnum @source(name: "digest_algorithm", type: "DigestAlgorithmEnum", subgraph: "Authentik")
  signatureAlgorithm: SignatureAlgorithmEnum @source(name: "signature_algorithm", type: "SignatureAlgorithmEnum", subgraph: "Authentik")
  """
  Time offset when temporary users should be deleted. This only applies if your IDP uses the NameID Format 'transient', and the user doesn't log out manually. (Format: hours=1;minutes=2;seconds=3).
  """
  temporaryUserDeleteAfter: String @source(name: "temporary_user_delete_after", type: "String", subgraph: "Authentik")
  """
  When selected, incoming assertions are encrypted by the IdP using the public key of the encryption keypair. The assertion is decrypted by the SP using the the private key.
  """
  encryptionKp: UUID @source(name: "encryption_kp", type: "UUID", subgraph: "Authentik")
}

type PaginatedScimSourceList @source(name: "PaginatedSCIMSourceList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [ScimSource]! @source(name: "results", type: "[SCIMSource]!", subgraph: "Authentik")
}

"""SCIMSource Serializer"""
type ScimSource @source(name: "SCIMSource", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pk: UUID!
  """Source's display Name."""
  name: String!
  slug: QuerySourcesScimListOneOf_0ResultsItemsSlug! @source(name: "slug", type: "query_sources_scim_list_oneOf_0_results_items_slug!", subgraph: "Authentik")
  enabled: Boolean
  userPropertyMappings: [UUID] @source(name: "user_property_mappings", type: "[UUID]", subgraph: "Authentik")
  groupPropertyMappings: [UUID] @source(name: "group_property_mappings", type: "[UUID]", subgraph: "Authentik")
  """Get object component so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: String
  userPathTemplate: String @source(name: "user_path_template", type: "String", subgraph: "Authentik")
  """Get Root URL"""
  rootUrl: String! @source(name: "root_url", type: "String!", subgraph: "Authentik")
  tokenObj: Token! @source(name: "token_obj", type: "Token!", subgraph: "Authentik")
}

type PaginatedScimSourceGroupList @source(name: "PaginatedSCIMSourceGroupList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [ScimSourceGroup]! @source(name: "results", type: "[SCIMSourceGroup]!", subgraph: "Authentik")
}

"""SCIMSourceGroup Serializer"""
type ScimSourceGroup @source(name: "SCIMSourceGroup", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  id: String!
  group: UUID!
  groupObj: UserGroup! @source(name: "group_obj", type: "UserGroup!", subgraph: "Authentik")
  source: UUID!
  attributes: JSON
}

type PaginatedScimSourceUserList @source(name: "PaginatedSCIMSourceUserList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [ScimSourceUser]! @source(name: "results", type: "[SCIMSourceUser]!", subgraph: "Authentik")
}

"""SCIMSourceUser Serializer"""
type ScimSourceUser @source(name: "SCIMSourceUser", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  id: String!
  user: Int!
  userObj: GroupMember! @source(name: "user_obj", type: "GroupMember!", subgraph: "Authentik")
  source: UUID!
  attributes: JSON
}

type PaginatedUserSourceConnectionList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [UserSourceConnection]!
}

"""OAuth Source Serializer"""
type UserSourceConnection @join__type(graph: AUTHENTIK) {
  pk: Int!
  user: Int!
  source: Source!
  created: DateTime!
}

type PaginatedUserKerberosSourceConnectionList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [UserKerberosSourceConnection]!
}

"""Kerberos Source Serializer"""
type UserKerberosSourceConnection @join__type(graph: AUTHENTIK) {
  pk: Int!
  user: Int!
  source: Source!
  created: DateTime!
  identifier: String!
}

type PaginatedUserOAuthSourceConnectionList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [UserOAuthSourceConnection]!
}

"""OAuth Source Serializer"""
type UserOAuthSourceConnection @join__type(graph: AUTHENTIK) {
  pk: Int!
  user: Int!
  source: Source!
  created: DateTime!
  identifier: QuerySourcesUserConnectionsOauthListOneOf_0ResultsItemsIdentifier! @source(name: "identifier", type: "query_sources_user_connections_oauth_list_oneOf_0_results_items_identifier!", subgraph: "Authentik")
}

type PaginatedUserPlexSourceConnectionList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [UserPlexSourceConnection]!
}

"""Plex Source connection Serializer"""
type UserPlexSourceConnection @join__type(graph: AUTHENTIK) {
  pk: Int!
  user: Int!
  source: Source!
  created: DateTime!
  identifier: String!
}

type PaginatedUserSamlSourceConnectionList @source(name: "PaginatedUserSAMLSourceConnectionList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [UserSamlSourceConnection]! @source(name: "results", type: "[UserSAMLSourceConnection]!", subgraph: "Authentik")
}

"""SAML Source Serializer"""
type UserSamlSourceConnection @source(name: "UserSAMLSourceConnection", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pk: Int!
  user: Int!
  source: Source!
  created: DateTime!
  identifier: String!
}

type PaginatedStageList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [Stage]!
}

type PaginatedAuthenticatorDuoStageList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [AuthenticatorDuoStage]!
}

"""AuthenticatorDuoStage Serializer"""
type AuthenticatorDuoStage @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """Get object type so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  flowSet: [FlowSet] @source(name: "flow_set", type: "[FlowSet]", subgraph: "Authentik")
  """
  Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
  """
  configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
  friendlyName: String @source(name: "friendly_name", type: "String", subgraph: "Authentik")
  clientId: String! @source(name: "client_id", type: "String!", subgraph: "Authentik")
  apiHostname: String! @source(name: "api_hostname", type: "String!", subgraph: "Authentik")
  adminIntegrationKey: String @source(name: "admin_integration_key", type: "String", subgraph: "Authentik")
}

type PaginatedAuthenticatorEndpointGdtcStageList @source(name: "PaginatedAuthenticatorEndpointGDTCStageList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [AuthenticatorEndpointGdtcStage]! @source(name: "results", type: "[AuthenticatorEndpointGDTCStage]!", subgraph: "Authentik")
}

"""AuthenticatorEndpointGDTCStage Serializer"""
type AuthenticatorEndpointGdtcStage @source(name: "AuthenticatorEndpointGDTCStage", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """Get object type so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  flowSet: [FlowSet] @source(name: "flow_set", type: "[FlowSet]", subgraph: "Authentik")
  """
  Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
  """
  configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
  friendlyName: String @source(name: "friendly_name", type: "String", subgraph: "Authentik")
  credentials: JSON!
}

type PaginatedAuthenticatorSmsStageList @source(name: "PaginatedAuthenticatorSMSStageList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [AuthenticatorSmsStage]! @source(name: "results", type: "[AuthenticatorSMSStage]!", subgraph: "Authentik")
}

"""AuthenticatorSMSStage Serializer"""
type AuthenticatorSmsStage @source(name: "AuthenticatorSMSStage", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """Get object type so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  flowSet: [FlowSet] @source(name: "flow_set", type: "[FlowSet]", subgraph: "Authentik")
  """
  Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
  """
  configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
  friendlyName: String @source(name: "friendly_name", type: "String", subgraph: "Authentik")
  provider: ProviderEnum!
  fromNumber: String! @source(name: "from_number", type: "String!", subgraph: "Authentik")
  accountSid: String! @source(name: "account_sid", type: "String!", subgraph: "Authentik")
  auth: String!
  authPassword: String @source(name: "auth_password", type: "String", subgraph: "Authentik")
  authType: AuthTypeEnum @source(name: "auth_type", type: "AuthTypeEnum", subgraph: "Authentik")
  """
  When enabled, the Phone number is only used during enrollment to verify the users authenticity. Only a hash of the phone number is saved to ensure it is not reused in the future.
  """
  verifyOnly: Boolean @source(name: "verify_only", type: "Boolean", subgraph: "Authentik")
  """Optionally modify the payload being sent to custom providers."""
  mapping: UUID
}

type PaginatedAuthenticatorStaticStageList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [AuthenticatorStaticStage]!
}

"""AuthenticatorStaticStage Serializer"""
type AuthenticatorStaticStage @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """Get object type so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  flowSet: [FlowSet] @source(name: "flow_set", type: "[FlowSet]", subgraph: "Authentik")
  """
  Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
  """
  configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
  friendlyName: String @source(name: "friendly_name", type: "String", subgraph: "Authentik")
  tokenCount: NonNegativeInt @source(name: "token_count", type: "NonNegativeInt", subgraph: "Authentik")
  tokenLength: NonNegativeInt @source(name: "token_length", type: "NonNegativeInt", subgraph: "Authentik")
}

type PaginatedAuthenticatorTotpStageList @source(name: "PaginatedAuthenticatorTOTPStageList", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [AuthenticatorTotpStage]! @source(name: "results", type: "[AuthenticatorTOTPStage]!", subgraph: "Authentik")
}

"""AuthenticatorTOTPStage Serializer"""
type AuthenticatorTotpStage @source(name: "AuthenticatorTOTPStage", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """Get object type so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  flowSet: [FlowSet] @source(name: "flow_set", type: "[FlowSet]", subgraph: "Authentik")
  """
  Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
  """
  configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
  friendlyName: String @source(name: "friendly_name", type: "String", subgraph: "Authentik")
  digits: DigitsEnum!
}

type PaginatedAuthenticatorValidateStageList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [AuthenticatorValidateStage]!
}

"""AuthenticatorValidateStage Serializer"""
type AuthenticatorValidateStage @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """Get object type so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  flowSet: [FlowSet] @source(name: "flow_set", type: "[FlowSet]", subgraph: "Authentik")
  notConfiguredAction: NotConfiguredActionEnum @source(name: "not_configured_action", type: "NotConfiguredActionEnum", subgraph: "Authentik")
  """Device classes which can be used to authenticate"""
  deviceClasses: [DeviceClassesEnum] @source(name: "device_classes", type: "[DeviceClassesEnum]", subgraph: "Authentik")
  """
  Stages used to configure Authenticator when user doesn't have any compatible devices. After this configuration Stage passes, the user is not prompted again.
  """
  configurationStages: [UUID] @source(name: "configuration_stages", type: "[UUID]", subgraph: "Authentik")
  """
  If any of the user's device has been used within this threshold, this stage will be skipped
  """
  lastAuthThreshold: String @source(name: "last_auth_threshold", type: "String", subgraph: "Authentik")
  webauthnUserVerification: UserVerificationEnum @source(name: "webauthn_user_verification", type: "UserVerificationEnum", subgraph: "Authentik")
  webauthnAllowedDeviceTypes: [UUID] @source(name: "webauthn_allowed_device_types", type: "[UUID]", subgraph: "Authentik")
  webauthnAllowedDeviceTypesObj: [WebAuthnDeviceType]! @source(name: "webauthn_allowed_device_types_obj", type: "[WebAuthnDeviceType]!", subgraph: "Authentik")
}

type PaginatedAuthenticatorWebAuthnStageList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [AuthenticatorWebAuthnStage]!
}

"""AuthenticatorWebAuthnStage Serializer"""
type AuthenticatorWebAuthnStage @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """Get object type so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  flowSet: [FlowSet] @source(name: "flow_set", type: "[FlowSet]", subgraph: "Authentik")
  """
  Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
  """
  configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
  friendlyName: String @source(name: "friendly_name", type: "String", subgraph: "Authentik")
  userVerification: UserVerificationEnum @source(name: "user_verification", type: "UserVerificationEnum", subgraph: "Authentik")
  authenticatorAttachment: AuthenticatorAttachmentEnum @source(name: "authenticator_attachment", type: "AuthenticatorAttachmentEnum", subgraph: "Authentik")
  residentKeyRequirement: ResidentKeyRequirementEnum @source(name: "resident_key_requirement", type: "ResidentKeyRequirementEnum", subgraph: "Authentik")
  deviceTypeRestrictions: [UUID] @source(name: "device_type_restrictions", type: "[UUID]", subgraph: "Authentik")
  deviceTypeRestrictionsObj: [WebAuthnDeviceType]! @source(name: "device_type_restrictions_obj", type: "[WebAuthnDeviceType]!", subgraph: "Authentik")
}

type PaginatedWebAuthnDeviceTypeList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [WebAuthnDeviceType]!
}

type PaginatedCaptchaStageList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [CaptchaStage]!
}

"""CaptchaStage Serializer"""
type CaptchaStage @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """Get object type so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  flowSet: [FlowSet] @source(name: "flow_set", type: "[FlowSet]", subgraph: "Authentik")
  """Public key, acquired your captcha Provider."""
  publicKey: String! @source(name: "public_key", type: "String!", subgraph: "Authentik")
  jsUrl: String @source(name: "js_url", type: "String", subgraph: "Authentik")
  apiUrl: String @source(name: "api_url", type: "String", subgraph: "Authentik")
  interactive: Boolean
  scoreMinThreshold: Float @source(name: "score_min_threshold", type: "Float", subgraph: "Authentik")
  scoreMaxThreshold: Float @source(name: "score_max_threshold", type: "Float", subgraph: "Authentik")
  """
  When enabled and the received captcha score is outside of the given threshold, the stage will show an error message. When not enabled, the flow will continue, but the data from the captcha will be available in the context for policy decisions
  """
  errorOnInvalidScore: Boolean @source(name: "error_on_invalid_score", type: "Boolean", subgraph: "Authentik")
}

type PaginatedConsentStageList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [ConsentStage]!
}

"""ConsentStage Serializer"""
type ConsentStage @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """Get object type so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  flowSet: [FlowSet] @source(name: "flow_set", type: "[FlowSet]", subgraph: "Authentik")
  mode: ConsentStageModeEnum
  """
  Offset after which consent expires. (Format: hours=1;minutes=2;seconds=3).
  """
  consentExpireIn: String @source(name: "consent_expire_in", type: "String", subgraph: "Authentik")
}

type PaginatedDenyStageList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [DenyStage]!
}

"""DenyStage Serializer"""
type DenyStage @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """Get object type so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  flowSet: [FlowSet] @source(name: "flow_set", type: "[FlowSet]", subgraph: "Authentik")
  denyMessage: String @source(name: "deny_message", type: "String", subgraph: "Authentik")
}

type PaginatedDummyStageList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [DummyStage]!
}

"""DummyStage Serializer"""
type DummyStage @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """Get object type so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  flowSet: [FlowSet] @source(name: "flow_set", type: "[FlowSet]", subgraph: "Authentik")
  throwError: Boolean @source(name: "throw_error", type: "Boolean", subgraph: "Authentik")
}

type PaginatedEmailStageList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [EmailStage]!
}

"""EmailStage Serializer"""
type EmailStage @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """Get object type so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  flowSet: [FlowSet] @source(name: "flow_set", type: "[FlowSet]", subgraph: "Authentik")
  """
  When enabled, global Email connection settings will be used and connection settings below will be ignored.
  """
  useGlobalSettings: Boolean @source(name: "use_global_settings", type: "Boolean", subgraph: "Authentik")
  host: String
  port: Int
  username: String
  useTls: Boolean @source(name: "use_tls", type: "Boolean", subgraph: "Authentik")
  useSsl: Boolean @source(name: "use_ssl", type: "Boolean", subgraph: "Authentik")
  timeout: Int
  fromAddress: EmailAddress @source(name: "from_address", type: "EmailAddress", subgraph: "Authentik")
  """Time in minutes the token sent is valid."""
  tokenExpiry: Int @source(name: "token_expiry", type: "Int", subgraph: "Authentik")
  subject: String
  template: String
  """Activate users upon completion of stage."""
  activateUserOnSuccess: Boolean @source(name: "activate_user_on_success", type: "Boolean", subgraph: "Authentik")
}

type PaginatedIdentificationStageList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [IdentificationStage]!
}

"""IdentificationStage Serializer"""
type IdentificationStage @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """Get object type so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  flowSet: [FlowSet] @source(name: "flow_set", type: "[FlowSet]", subgraph: "Authentik")
  """
  Fields of the user object to match against. (Hold shift to select multiple options)
  """
  userFields: [UserFieldsEnum] @source(name: "user_fields", type: "[UserFieldsEnum]", subgraph: "Authentik")
  """
  When set, shows a password field, instead of showing the password field as separate step.
  """
  passwordStage: UUID @source(name: "password_stage", type: "UUID", subgraph: "Authentik")
  """
  When set, adds functionality exactly like a Captcha stage, but baked into the Identification stage.
  """
  captchaStage: UUID @source(name: "captcha_stage", type: "UUID", subgraph: "Authentik")
  """When enabled, user fields are matched regardless of their casing."""
  caseInsensitiveMatching: Boolean @source(name: "case_insensitive_matching", type: "Boolean", subgraph: "Authentik")
  """
  When a valid username/email has been entered, and this option is enabled, the user's username and avatar will be shown. Otherwise, the text that the user entered will be shown
  """
  showMatchedUser: Boolean @source(name: "show_matched_user", type: "Boolean", subgraph: "Authentik")
  """Optional enrollment flow, which is linked at the bottom of the page."""
  enrollmentFlow: UUID @source(name: "enrollment_flow", type: "UUID", subgraph: "Authentik")
  """Optional recovery flow, which is linked at the bottom of the page."""
  recoveryFlow: UUID @source(name: "recovery_flow", type: "UUID", subgraph: "Authentik")
  """Optional passwordless flow, which is linked at the bottom of the page."""
  passwordlessFlow: UUID @source(name: "passwordless_flow", type: "UUID", subgraph: "Authentik")
  """Specify which sources should be shown."""
  sources: [UUID]
  showSourceLabels: Boolean @source(name: "show_source_labels", type: "Boolean", subgraph: "Authentik")
  """
  When enabled, the stage will succeed and continue even when incorrect user info is entered.
  """
  pretendUserExists: Boolean @source(name: "pretend_user_exists", type: "Boolean", subgraph: "Authentik")
}

type PaginatedInvitationList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [Invitation]!
}

"""Invitation Serializer"""
type Invitation @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: QueryStagesInvitationInvitationsListOneOf_0ResultsItemsName! @source(name: "name", type: "query_stages_invitation_invitations_list_oneOf_0_results_items_name!", subgraph: "Authentik")
  expires: DateTime
  fixedData: JSON @source(name: "fixed_data", type: "JSON", subgraph: "Authentik")
  createdBy: GroupMember! @source(name: "created_by", type: "GroupMember!", subgraph: "Authentik")
  """When enabled, the invitation will be deleted after usage."""
  singleUse: Boolean @source(name: "single_use", type: "Boolean", subgraph: "Authentik")
  """When set, only the configured flow can use this invitation."""
  flow: UUID
  flowObj: Flow! @source(name: "flow_obj", type: "Flow!", subgraph: "Authentik")
}

type PaginatedInvitationStageList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [InvitationStage]!
}

"""InvitationStage Serializer"""
type InvitationStage @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """Get object type so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  flowSet: [FlowSet] @source(name: "flow_set", type: "[FlowSet]", subgraph: "Authentik")
  """
  If this flag is set, this Stage will jump to the next Stage when no Invitation is given. By default this Stage will cancel the Flow when no invitation is given.
  """
  continueFlowWithoutInvitation: Boolean @source(name: "continue_flow_without_invitation", type: "Boolean", subgraph: "Authentik")
}

type PaginatedPasswordStageList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [PasswordStage]!
}

"""PasswordStage Serializer"""
type PasswordStage @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """Get object type so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  flowSet: [FlowSet] @source(name: "flow_set", type: "[FlowSet]", subgraph: "Authentik")
  """Selection of backends to test the password against."""
  backends: [BackendsEnum]!
  """
  Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
  """
  configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
  """
  How many attempts a user has before the flow is canceled. To lock the user out, use a reputation policy and a user_write stage.
  """
  failedAttemptsBeforeCancel: Int @source(name: "failed_attempts_before_cancel", type: "Int", subgraph: "Authentik")
  """
  When enabled, provides a 'show password' button with the password input field.
  """
  allowShowPassword: Boolean @source(name: "allow_show_password", type: "Boolean", subgraph: "Authentik")
}

type PaginatedPromptList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [Prompt]!
}

"""Prompt Serializer"""
type Prompt @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """Name of the form field, also used to store the value"""
  fieldKey: String! @source(name: "field_key", type: "String!", subgraph: "Authentik")
  label: String!
  type: PromptTypeEnum!
  required: Boolean
  """
  Optionally provide a short hint that describes the expected input value. When creating a fixed choice field, enable interpreting as expression and return a list to return multiple choices.
  """
  placeholder: String
  """
  Optionally pre-fill the input with an initial value. When creating a fixed choice field, enable interpreting as expression and return a list to return multiple default choices.
  """
  initialValue: String @source(name: "initial_value", type: "String", subgraph: "Authentik")
  order: Int
  promptstageSet: [Stage] @source(name: "promptstage_set", type: "[Stage]", subgraph: "Authentik")
  subText: String @source(name: "sub_text", type: "String", subgraph: "Authentik")
  placeholderExpression: Boolean @source(name: "placeholder_expression", type: "Boolean", subgraph: "Authentik")
  initialValueExpression: Boolean @source(name: "initial_value_expression", type: "Boolean", subgraph: "Authentik")
}

type PaginatedPromptStageList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [PromptStage]!
}

"""PromptStage Serializer"""
type PromptStage @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """Get object type so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  flowSet: [FlowSet] @source(name: "flow_set", type: "[FlowSet]", subgraph: "Authentik")
  fields: [UUID]!
  validationPolicies: [UUID] @source(name: "validation_policies", type: "[UUID]", subgraph: "Authentik")
}

type PaginatedSourceStageList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [SourceStage]!
}

"""SourceStage Serializer"""
type SourceStage @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """Get object type so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  flowSet: [FlowSet] @source(name: "flow_set", type: "[FlowSet]", subgraph: "Authentik")
  source: UUID!
  """
  Amount of time a user can take to return from the source to continue the flow (Format: hours=-1;minutes=-2;seconds=-3)
  """
  resumeTimeout: String @source(name: "resume_timeout", type: "String", subgraph: "Authentik")
}

type PaginatedUserDeleteStageList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [UserDeleteStage]!
}

"""UserDeleteStage Serializer"""
type UserDeleteStage @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """Get object type so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  flowSet: [FlowSet] @source(name: "flow_set", type: "[FlowSet]", subgraph: "Authentik")
}

type PaginatedUserLoginStageList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [UserLoginStage]!
}

"""UserLoginStage Serializer"""
type UserLoginStage @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """Get object type so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  flowSet: [FlowSet] @source(name: "flow_set", type: "[FlowSet]", subgraph: "Authentik")
  """
  Determines how long a session lasts. Default of 0 means that the sessions lasts until the browser is closed. (Format: hours=-1;minutes=-2;seconds=-3)
  """
  sessionDuration: String @source(name: "session_duration", type: "String", subgraph: "Authentik")
  """Terminate all other sessions of the user logging in."""
  terminateOtherSessions: Boolean @source(name: "terminate_other_sessions", type: "Boolean", subgraph: "Authentik")
  """
  Offset the session will be extended by when the user picks the remember me option. Default of 0 means that the remember me option will not be shown. (Format: hours=-1;minutes=-2;seconds=-3)
  """
  rememberMeOffset: String @source(name: "remember_me_offset", type: "String", subgraph: "Authentik")
  networkBinding: NetworkBindingEnum @source(name: "network_binding", type: "NetworkBindingEnum", subgraph: "Authentik")
  geoipBinding: GeoipBindingEnum @source(name: "geoip_binding", type: "GeoipBindingEnum", subgraph: "Authentik")
}

type PaginatedUserLogoutStageList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [UserLogoutStage]!
}

"""UserLogoutStage Serializer"""
type UserLogoutStage @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """Get object type so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  flowSet: [FlowSet] @source(name: "flow_set", type: "[FlowSet]", subgraph: "Authentik")
}

type PaginatedUserWriteStageList @join__type(graph: AUTHENTIK) {
  pagination: Pagination!
  results: [UserWriteStage]!
}

"""UserWriteStage Serializer"""
type UserWriteStage @join__type(graph: AUTHENTIK) {
  pk: UUID!
  name: String!
  """Get object type so that we know how to edit the object"""
  component: String!
  """Return object's verbose_name"""
  verboseName: String! @source(name: "verbose_name", type: "String!", subgraph: "Authentik")
  """Return object's plural verbose_name"""
  verboseNamePlural: String! @source(name: "verbose_name_plural", type: "String!", subgraph: "Authentik")
  """Return internal model name"""
  metaModelName: String! @source(name: "meta_model_name", type: "String!", subgraph: "Authentik")
  flowSet: [FlowSet] @source(name: "flow_set", type: "[FlowSet]", subgraph: "Authentik")
  userCreationMode: UserCreationModeEnum @source(name: "user_creation_mode", type: "UserCreationModeEnum", subgraph: "Authentik")
  """When set, newly created users are inactive and cannot login."""
  createUsersAsInactive: Boolean @source(name: "create_users_as_inactive", type: "Boolean", subgraph: "Authentik")
  """Optionally add newly created users to this group."""
  createUsersGroup: UUID @source(name: "create_users_group", type: "UUID", subgraph: "Authentik")
  userType: UserTypeEnum @source(name: "user_type", type: "UserTypeEnum", subgraph: "Authentik")
  userPathTemplate: String @source(name: "user_path_template", type: "String", subgraph: "Authentik")
}

type Mutation @source(name: "Mutation", subgraph: "Churros") @join__type(graph: AUTHENTIK) @join__type(graph: CHURROS) {
  """Settings view"""
  adminSettingsUpdate(input: SettingsRequestInput @source(name: "input", type: "SettingsRequest_Input", subgraph: "Authentik")): AdminSettingsUpdateResponse @httpOperation(subgraph: "Authentik", path: "/admin/settings/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "admin_settings_update", type: "admin_settings_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Settings view"""
  adminSettingsPartialUpdate(input: PatchedSettingsRequestInput @source(name: "input", type: "PatchedSettingsRequest_Input", subgraph: "Authentik")): AdminSettingsPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/admin/settings/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "admin_settings_partial_update", type: "admin_settings_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Get system information."""
  adminSystemCreate: AdminSystemCreateResponse @httpOperation(subgraph: "Authentik", path: "/admin/system/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: POST) @source(name: "admin_system_create", type: "admin_system_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for Duo authenticator devices (for admins)"""
  authenticatorsAdminDuoCreate(input: DuoDeviceRequestInput @source(name: "input", type: "DuoDeviceRequest_Input", subgraph: "Authentik")): AuthenticatorsAdminDuoCreateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/duo/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "authenticators_admin_duo_create", type: "authenticators_admin_duo_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for Duo authenticator devices (for admins)"""
  authenticatorsAdminDuoUpdate(
    """A unique integer value identifying this Duo Device."""
    id: Int!
    input: DuoDeviceRequestInput @source(name: "input", type: "DuoDeviceRequest_Input", subgraph: "Authentik")
  ): AuthenticatorsAdminDuoUpdateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/duo/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "authenticators_admin_duo_update", type: "authenticators_admin_duo_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for Duo authenticator devices (for admins)"""
  authenticatorsAdminDuoPartialUpdate(
    """A unique integer value identifying this Duo Device."""
    id: Int!
    input: PatchedDuoDeviceRequestInput @source(name: "input", type: "PatchedDuoDeviceRequest_Input", subgraph: "Authentik")
  ): AuthenticatorsAdminDuoPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/duo/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "authenticators_admin_duo_partial_update", type: "authenticators_admin_duo_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for Duo authenticator devices (for admins)"""
  authenticatorsAdminDuoDestroy(
    """A unique integer value identifying this Duo Device."""
    id: Int!
  ): AuthenticatorsAdminDuoDestroyResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/duo/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "authenticators_admin_duo_destroy", type: "authenticators_admin_duo_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for Endpoint authenticator devices (for admins)"""
  authenticatorsAdminEndpointCreate(input: EndpointDeviceRequestInput @source(name: "input", type: "EndpointDeviceRequest_Input", subgraph: "Authentik")): AuthenticatorsAdminEndpointCreateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/endpoint/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "authenticators_admin_endpoint_create", type: "authenticators_admin_endpoint_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for Endpoint authenticator devices (for admins)"""
  authenticatorsAdminEndpointUpdate(
    """A UUID string identifying this Endpoint Device."""
    uuid: UUID!
    input: EndpointDeviceRequestInput @source(name: "input", type: "EndpointDeviceRequest_Input", subgraph: "Authentik")
  ): AuthenticatorsAdminEndpointUpdateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/endpoint/{args.uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "authenticators_admin_endpoint_update", type: "authenticators_admin_endpoint_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for Endpoint authenticator devices (for admins)"""
  authenticatorsAdminEndpointPartialUpdate(
    """A UUID string identifying this Endpoint Device."""
    uuid: UUID!
    input: PatchedEndpointDeviceRequestInput @source(name: "input", type: "PatchedEndpointDeviceRequest_Input", subgraph: "Authentik")
  ): AuthenticatorsAdminEndpointPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/endpoint/{args.uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "authenticators_admin_endpoint_partial_update", type: "authenticators_admin_endpoint_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for Endpoint authenticator devices (for admins)"""
  authenticatorsAdminEndpointDestroy(
    """A UUID string identifying this Endpoint Device."""
    uuid: UUID!
  ): AuthenticatorsAdminEndpointDestroyResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/endpoint/{args.uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "authenticators_admin_endpoint_destroy", type: "authenticators_admin_endpoint_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for sms authenticator devices (for admins)"""
  authenticatorsAdminSmsCreate(input: SmsDeviceRequestInput @source(name: "input", type: "SMSDeviceRequest_Input", subgraph: "Authentik")): AuthenticatorsAdminSmsCreateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/sms/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "authenticators_admin_sms_create", type: "authenticators_admin_sms_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for sms authenticator devices (for admins)"""
  authenticatorsAdminSmsUpdate(
    """A unique integer value identifying this SMS Device."""
    id: Int!
    input: SmsDeviceRequestInput @source(name: "input", type: "SMSDeviceRequest_Input", subgraph: "Authentik")
  ): AuthenticatorsAdminSmsUpdateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/sms/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "authenticators_admin_sms_update", type: "authenticators_admin_sms_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for sms authenticator devices (for admins)"""
  authenticatorsAdminSmsPartialUpdate(
    """A unique integer value identifying this SMS Device."""
    id: Int!
    input: PatchedSmsDeviceRequestInput @source(name: "input", type: "PatchedSMSDeviceRequest_Input", subgraph: "Authentik")
  ): AuthenticatorsAdminSmsPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/sms/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "authenticators_admin_sms_partial_update", type: "authenticators_admin_sms_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for sms authenticator devices (for admins)"""
  authenticatorsAdminSmsDestroy(
    """A unique integer value identifying this SMS Device."""
    id: Int!
  ): AuthenticatorsAdminSmsDestroyResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/sms/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "authenticators_admin_sms_destroy", type: "authenticators_admin_sms_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for static authenticator devices (for admins)"""
  authenticatorsAdminStaticCreate(input: StaticDeviceRequestInput @source(name: "input", type: "StaticDeviceRequest_Input", subgraph: "Authentik")): AuthenticatorsAdminStaticCreateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/static/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "authenticators_admin_static_create", type: "authenticators_admin_static_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for static authenticator devices (for admins)"""
  authenticatorsAdminStaticUpdate(
    """A unique integer value identifying this Static Device."""
    id: Int!
    input: StaticDeviceRequestInput @source(name: "input", type: "StaticDeviceRequest_Input", subgraph: "Authentik")
  ): AuthenticatorsAdminStaticUpdateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/static/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "authenticators_admin_static_update", type: "authenticators_admin_static_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for static authenticator devices (for admins)"""
  authenticatorsAdminStaticPartialUpdate(
    """A unique integer value identifying this Static Device."""
    id: Int!
    input: PatchedStaticDeviceRequestInput @source(name: "input", type: "PatchedStaticDeviceRequest_Input", subgraph: "Authentik")
  ): AuthenticatorsAdminStaticPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/static/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "authenticators_admin_static_partial_update", type: "authenticators_admin_static_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for static authenticator devices (for admins)"""
  authenticatorsAdminStaticDestroy(
    """A unique integer value identifying this Static Device."""
    id: Int!
  ): AuthenticatorsAdminStaticDestroyResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/static/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "authenticators_admin_static_destroy", type: "authenticators_admin_static_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for totp authenticator devices (for admins)"""
  authenticatorsAdminTotpCreate(input: TotpDeviceRequestInput @source(name: "input", type: "TOTPDeviceRequest_Input", subgraph: "Authentik")): AuthenticatorsAdminTotpCreateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/totp/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "authenticators_admin_totp_create", type: "authenticators_admin_totp_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for totp authenticator devices (for admins)"""
  authenticatorsAdminTotpUpdate(
    """A unique integer value identifying this TOTP Device."""
    id: Int!
    input: TotpDeviceRequestInput @source(name: "input", type: "TOTPDeviceRequest_Input", subgraph: "Authentik")
  ): AuthenticatorsAdminTotpUpdateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/totp/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "authenticators_admin_totp_update", type: "authenticators_admin_totp_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for totp authenticator devices (for admins)"""
  authenticatorsAdminTotpPartialUpdate(
    """A unique integer value identifying this TOTP Device."""
    id: Int!
    input: PatchedTotpDeviceRequestInput @source(name: "input", type: "PatchedTOTPDeviceRequest_Input", subgraph: "Authentik")
  ): AuthenticatorsAdminTotpPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/totp/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "authenticators_admin_totp_partial_update", type: "authenticators_admin_totp_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for totp authenticator devices (for admins)"""
  authenticatorsAdminTotpDestroy(
    """A unique integer value identifying this TOTP Device."""
    id: Int!
  ): AuthenticatorsAdminTotpDestroyResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/totp/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "authenticators_admin_totp_destroy", type: "authenticators_admin_totp_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for WebAuthn authenticator devices (for admins)"""
  authenticatorsAdminWebauthnCreate(input: WebAuthnDeviceRequestInput @source(name: "input", type: "WebAuthnDeviceRequest_Input", subgraph: "Authentik")): AuthenticatorsAdminWebauthnCreateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/webauthn/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "authenticators_admin_webauthn_create", type: "authenticators_admin_webauthn_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for WebAuthn authenticator devices (for admins)"""
  authenticatorsAdminWebauthnUpdate(
    """A unique integer value identifying this WebAuthn Device."""
    id: Int!
    input: WebAuthnDeviceRequestInput @source(name: "input", type: "WebAuthnDeviceRequest_Input", subgraph: "Authentik")
  ): AuthenticatorsAdminWebauthnUpdateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/webauthn/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "authenticators_admin_webauthn_update", type: "authenticators_admin_webauthn_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for WebAuthn authenticator devices (for admins)"""
  authenticatorsAdminWebauthnPartialUpdate(
    """A unique integer value identifying this WebAuthn Device."""
    id: Int!
    input: PatchedWebAuthnDeviceRequestInput @source(name: "input", type: "PatchedWebAuthnDeviceRequest_Input", subgraph: "Authentik")
  ): AuthenticatorsAdminWebauthnPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/webauthn/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "authenticators_admin_webauthn_partial_update", type: "authenticators_admin_webauthn_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for WebAuthn authenticator devices (for admins)"""
  authenticatorsAdminWebauthnDestroy(
    """A unique integer value identifying this WebAuthn Device."""
    id: Int!
  ): AuthenticatorsAdminWebauthnDestroyResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/admin/webauthn/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "authenticators_admin_webauthn_destroy", type: "authenticators_admin_webauthn_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for Duo authenticator devices"""
  authenticatorsDuoUpdate(
    """A unique integer value identifying this Duo Device."""
    id: Int!
    input: DuoDeviceRequestInput @source(name: "input", type: "DuoDeviceRequest_Input", subgraph: "Authentik")
  ): AuthenticatorsDuoUpdateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/duo/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "authenticators_duo_update", type: "authenticators_duo_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for Duo authenticator devices"""
  authenticatorsDuoPartialUpdate(
    """A unique integer value identifying this Duo Device."""
    id: Int!
    input: PatchedDuoDeviceRequestInput @source(name: "input", type: "PatchedDuoDeviceRequest_Input", subgraph: "Authentik")
  ): AuthenticatorsDuoPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/duo/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "authenticators_duo_partial_update", type: "authenticators_duo_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for Duo authenticator devices"""
  authenticatorsDuoDestroy(
    """A unique integer value identifying this Duo Device."""
    id: Int!
  ): AuthenticatorsDuoDestroyResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/duo/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "authenticators_duo_destroy", type: "authenticators_duo_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for sms authenticator devices"""
  authenticatorsSmsUpdate(
    """A unique integer value identifying this SMS Device."""
    id: Int!
    input: SmsDeviceRequestInput @source(name: "input", type: "SMSDeviceRequest_Input", subgraph: "Authentik")
  ): AuthenticatorsSmsUpdateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/sms/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "authenticators_sms_update", type: "authenticators_sms_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for sms authenticator devices"""
  authenticatorsSmsPartialUpdate(
    """A unique integer value identifying this SMS Device."""
    id: Int!
    input: PatchedSmsDeviceRequestInput @source(name: "input", type: "PatchedSMSDeviceRequest_Input", subgraph: "Authentik")
  ): AuthenticatorsSmsPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/sms/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "authenticators_sms_partial_update", type: "authenticators_sms_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for sms authenticator devices"""
  authenticatorsSmsDestroy(
    """A unique integer value identifying this SMS Device."""
    id: Int!
  ): AuthenticatorsSmsDestroyResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/sms/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "authenticators_sms_destroy", type: "authenticators_sms_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for static authenticator devices"""
  authenticatorsStaticUpdate(
    """A unique integer value identifying this Static Device."""
    id: Int!
    input: StaticDeviceRequestInput @source(name: "input", type: "StaticDeviceRequest_Input", subgraph: "Authentik")
  ): AuthenticatorsStaticUpdateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/static/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "authenticators_static_update", type: "authenticators_static_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for static authenticator devices"""
  authenticatorsStaticPartialUpdate(
    """A unique integer value identifying this Static Device."""
    id: Int!
    input: PatchedStaticDeviceRequestInput @source(name: "input", type: "PatchedStaticDeviceRequest_Input", subgraph: "Authentik")
  ): AuthenticatorsStaticPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/static/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "authenticators_static_partial_update", type: "authenticators_static_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for static authenticator devices"""
  authenticatorsStaticDestroy(
    """A unique integer value identifying this Static Device."""
    id: Int!
  ): AuthenticatorsStaticDestroyResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/static/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "authenticators_static_destroy", type: "authenticators_static_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for totp authenticator devices"""
  authenticatorsTotpUpdate(
    """A unique integer value identifying this TOTP Device."""
    id: Int!
    input: TotpDeviceRequestInput @source(name: "input", type: "TOTPDeviceRequest_Input", subgraph: "Authentik")
  ): AuthenticatorsTotpUpdateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/totp/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "authenticators_totp_update", type: "authenticators_totp_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for totp authenticator devices"""
  authenticatorsTotpPartialUpdate(
    """A unique integer value identifying this TOTP Device."""
    id: Int!
    input: PatchedTotpDeviceRequestInput @source(name: "input", type: "PatchedTOTPDeviceRequest_Input", subgraph: "Authentik")
  ): AuthenticatorsTotpPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/totp/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "authenticators_totp_partial_update", type: "authenticators_totp_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for totp authenticator devices"""
  authenticatorsTotpDestroy(
    """A unique integer value identifying this TOTP Device."""
    id: Int!
  ): AuthenticatorsTotpDestroyResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/totp/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "authenticators_totp_destroy", type: "authenticators_totp_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for WebAuthn authenticator devices"""
  authenticatorsWebauthnUpdate(
    """A unique integer value identifying this WebAuthn Device."""
    id: Int!
    input: WebAuthnDeviceRequestInput @source(name: "input", type: "WebAuthnDeviceRequest_Input", subgraph: "Authentik")
  ): AuthenticatorsWebauthnUpdateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/webauthn/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "authenticators_webauthn_update", type: "authenticators_webauthn_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for WebAuthn authenticator devices"""
  authenticatorsWebauthnPartialUpdate(
    """A unique integer value identifying this WebAuthn Device."""
    id: Int!
    input: PatchedWebAuthnDeviceRequestInput @source(name: "input", type: "PatchedWebAuthnDeviceRequest_Input", subgraph: "Authentik")
  ): AuthenticatorsWebauthnPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/webauthn/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "authenticators_webauthn_partial_update", type: "authenticators_webauthn_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Viewset for WebAuthn authenticator devices"""
  authenticatorsWebauthnDestroy(
    """A unique integer value identifying this WebAuthn Device."""
    id: Int!
  ): AuthenticatorsWebauthnDestroyResponse @httpOperation(subgraph: "Authentik", path: "/authenticators/webauthn/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "authenticators_webauthn_destroy", type: "authenticators_webauthn_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Application Viewset"""
  coreApplicationsCreate(input: ApplicationRequestInput @source(name: "input", type: "ApplicationRequest_Input", subgraph: "Authentik")): CoreApplicationsCreateResponse @httpOperation(subgraph: "Authentik", path: "/core/applications/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "core_applications_create", type: "core_applications_create_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Application Viewset"""
  coreApplicationsUpdate(
    """Internal application name, used in URLs."""
    slug: String!
    input: ApplicationRequestInput @source(name: "input", type: "ApplicationRequest_Input", subgraph: "Authentik")
  ): CoreApplicationsUpdateResponse @httpOperation(subgraph: "Authentik", path: "/core/applications/{args.slug}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "core_applications_update", type: "core_applications_update_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Application Viewset"""
  coreApplicationsPartialUpdate(
    """Internal application name, used in URLs."""
    slug: String!
    input: PatchedApplicationRequestInput @source(name: "input", type: "PatchedApplicationRequest_Input", subgraph: "Authentik")
  ): CoreApplicationsPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/core/applications/{args.slug}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "core_applications_partial_update", type: "core_applications_partial_update_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Application Viewset"""
  coreApplicationsDestroy(
    """Internal application name, used in URLs."""
    slug: String!
  ): CoreApplicationsDestroyResponse @httpOperation(subgraph: "Authentik", path: "/core/applications/{args.slug}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "core_applications_destroy", type: "core_applications_destroy_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Set application icon"""
  coreApplicationsSetIconCreate(
    """Internal application name, used in URLs."""
    slug: String!
    input: FileUploadRequestInput @source(name: "input", type: "FileUploadRequest_Input", subgraph: "Authentik")
  ): GenericError @httpOperation(subgraph: "Authentik", path: "/core/applications/{args.slug}/set_icon/", operationSpecificHeaders: [["Content-Type", "multipart/form-data"], ["accept", "application/json"]], httpMethod: POST) @source(name: "core_applications_set_icon_create", type: "GenericError", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Set application icon (as URL)"""
  coreApplicationsSetIconUrlCreate(
    """Internal application name, used in URLs."""
    slug: String!
    input: FilePathRequestInput @source(name: "input", type: "FilePathRequest_Input", subgraph: "Authentik")
  ): GenericError @httpOperation(subgraph: "Authentik", path: "/core/applications/{args.slug}/set_icon_url/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "core_applications_set_icon_url_create", type: "GenericError", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """AuthenticatedSession Viewset"""
  coreAuthenticatedSessionsDestroy(
    """A UUID string identifying this Authenticated Session."""
    uuid: UUID!
  ): CoreAuthenticatedSessionsDestroyResponse @httpOperation(subgraph: "Authentik", path: "/core/authenticated_sessions/{args.uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "core_authenticated_sessions_destroy", type: "core_authenticated_sessions_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Brand Viewset"""
  coreBrandsCreate(input: BrandRequestInput @source(name: "input", type: "BrandRequest_Input", subgraph: "Authentik")): CoreBrandsCreateResponse @httpOperation(subgraph: "Authentik", path: "/core/brands/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "core_brands_create", type: "core_brands_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Brand Viewset"""
  coreBrandsUpdate(
    """A UUID string identifying this Brand."""
    brandUuid: UUID! @source(name: "brand_uuid", type: "UUID!", subgraph: "Authentik")
    input: BrandRequestInput @source(name: "input", type: "BrandRequest_Input", subgraph: "Authentik")
  ): CoreBrandsUpdateResponse @httpOperation(subgraph: "Authentik", path: "/core/brands/{args.brand_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "core_brands_update", type: "core_brands_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Brand Viewset"""
  coreBrandsPartialUpdate(
    """A UUID string identifying this Brand."""
    brandUuid: UUID! @source(name: "brand_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedBrandRequestInput @source(name: "input", type: "PatchedBrandRequest_Input", subgraph: "Authentik")
  ): CoreBrandsPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/core/brands/{args.brand_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "core_brands_partial_update", type: "core_brands_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Brand Viewset"""
  coreBrandsDestroy(
    """A UUID string identifying this Brand."""
    brandUuid: UUID! @source(name: "brand_uuid", type: "UUID!", subgraph: "Authentik")
  ): CoreBrandsDestroyResponse @httpOperation(subgraph: "Authentik", path: "/core/brands/{args.brand_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "core_brands_destroy", type: "core_brands_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Group Viewset"""
  coreGroupsCreate(input: GroupRequestInput @source(name: "input", type: "GroupRequest_Input", subgraph: "Authentik")): CoreGroupsCreateResponse @httpOperation(subgraph: "Authentik", path: "/core/groups/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "core_groups_create", type: "core_groups_create_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Group Viewset"""
  coreGroupsUpdate(
    """A UUID string identifying this Group."""
    groupUuid: UUID! @source(name: "group_uuid", type: "UUID!", subgraph: "Authentik")
    input: GroupRequestInput @source(name: "input", type: "GroupRequest_Input", subgraph: "Authentik")
  ): CoreGroupsUpdateResponse @httpOperation(subgraph: "Authentik", path: "/core/groups/{args.group_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "core_groups_update", type: "core_groups_update_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Group Viewset"""
  coreGroupsPartialUpdate(
    """A UUID string identifying this Group."""
    groupUuid: UUID! @source(name: "group_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedGroupRequestInput @source(name: "input", type: "PatchedGroupRequest_Input", subgraph: "Authentik")
  ): CoreGroupsPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/core/groups/{args.group_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "core_groups_partial_update", type: "core_groups_partial_update_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Group Viewset"""
  coreGroupsDestroy(
    """A UUID string identifying this Group."""
    groupUuid: UUID! @source(name: "group_uuid", type: "UUID!", subgraph: "Authentik")
  ): CoreGroupsDestroyResponse @httpOperation(subgraph: "Authentik", path: "/core/groups/{args.group_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "core_groups_destroy", type: "core_groups_destroy_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Add user to group"""
  coreGroupsAddUserCreate(
    """A UUID string identifying this Group."""
    groupUuid: UUID! @source(name: "group_uuid", type: "UUID!", subgraph: "Authentik")
    input: UserAccountRequestInput @source(name: "input", type: "UserAccountRequest_Input", subgraph: "Authentik")
  ): CoreGroupsAddUserCreateResponse @httpOperation(subgraph: "Authentik", path: "/core/groups/{args.group_uuid}/add_user/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "core_groups_add_user_create", type: "core_groups_add_user_create_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Add user to group"""
  coreGroupsRemoveUserCreate(
    """A UUID string identifying this Group."""
    groupUuid: UUID! @source(name: "group_uuid", type: "UUID!", subgraph: "Authentik")
    input: UserAccountRequestInput @source(name: "input", type: "UserAccountRequest_Input", subgraph: "Authentik")
  ): CoreGroupsRemoveUserCreateResponse @httpOperation(subgraph: "Authentik", path: "/core/groups/{args.group_uuid}/remove_user/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "core_groups_remove_user_create", type: "core_groups_remove_user_create_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Token Viewset"""
  coreTokensCreate(input: TokenRequestInput @source(name: "input", type: "TokenRequest_Input", subgraph: "Authentik")): CoreTokensCreateResponse @httpOperation(subgraph: "Authentik", path: "/core/tokens/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "core_tokens_create", type: "core_tokens_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Token Viewset"""
  coreTokensUpdate(identifier: String!, input: TokenRequestInput @source(name: "input", type: "TokenRequest_Input", subgraph: "Authentik")): CoreTokensUpdateResponse @httpOperation(subgraph: "Authentik", path: "/core/tokens/{args.identifier}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "core_tokens_update", type: "core_tokens_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Token Viewset"""
  coreTokensPartialUpdate(identifier: String!, input: PatchedTokenRequestInput @source(name: "input", type: "PatchedTokenRequest_Input", subgraph: "Authentik")): CoreTokensPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/core/tokens/{args.identifier}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "core_tokens_partial_update", type: "core_tokens_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Token Viewset"""
  coreTokensDestroy(identifier: String!): CoreTokensDestroyResponse @httpOperation(subgraph: "Authentik", path: "/core/tokens/{args.identifier}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "core_tokens_destroy", type: "core_tokens_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """
  Set token key. Action is logged as event. `authentik_core.set_token_key` permission
  is required.
  """
  coreTokensSetKeyCreate(identifier: String!, input: TokenSetKeyRequestInput @source(name: "input", type: "TokenSetKeyRequest_Input", subgraph: "Authentik")): CoreTokensSetKeyCreateResponse @httpOperation(subgraph: "Authentik", path: "/core/tokens/{args.identifier}/set_key/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "core_tokens_set_key_create", type: "core_tokens_set_key_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Convert data into a blueprint, validate it and apply it"""
  coreTransactionalApplicationsUpdate(input: TransactionApplicationRequestInput @source(name: "input", type: "TransactionApplicationRequest_Input", subgraph: "Authentik")): CoreTransactionalApplicationsUpdateResponse @httpOperation(subgraph: "Authentik", path: "/core/transactional/applications/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "core_transactional_applications_update", type: "core_transactional_applications_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserConsent Viewset"""
  coreUserConsentDestroy(
    """A unique integer value identifying this User Consent."""
    id: Int!
  ): CoreUserConsentDestroyResponse @httpOperation(subgraph: "Authentik", path: "/core/user_consent/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "core_user_consent_destroy", type: "core_user_consent_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """User Viewset"""
  coreUsersCreate(input: UserRequestInput @source(name: "input", type: "UserRequest_Input", subgraph: "Authentik")): CoreUsersCreateResponse @httpOperation(subgraph: "Authentik", path: "/core/users/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "core_users_create", type: "core_users_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """User Viewset"""
  coreUsersUpdate(
    """A unique integer value identifying this User."""
    id: Int!
    input: UserRequestInput @source(name: "input", type: "UserRequest_Input", subgraph: "Authentik")
  ): CoreUsersUpdateResponse @httpOperation(subgraph: "Authentik", path: "/core/users/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "core_users_update", type: "core_users_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """User Viewset"""
  coreUsersPartialUpdate(
    """A unique integer value identifying this User."""
    id: Int!
    input: PatchedUserRequestInput @source(name: "input", type: "PatchedUserRequest_Input", subgraph: "Authentik")
  ): CoreUsersPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/core/users/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "core_users_partial_update", type: "core_users_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """User Viewset"""
  coreUsersDestroy(
    """A unique integer value identifying this User."""
    id: Int!
  ): CoreUsersDestroyResponse @httpOperation(subgraph: "Authentik", path: "/core/users/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "core_users_destroy", type: "core_users_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Impersonate a user"""
  coreUsersImpersonateCreate(
    """A unique integer value identifying this User."""
    id: Int!
  ): CoreUsersImpersonateCreateResponse @httpOperation(subgraph: "Authentik", path: "/core/users/{args.id}/impersonate/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: POST) @source(name: "core_users_impersonate_create", type: "core_users_impersonate_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Create a temporary link that a user can use to recover their accounts"""
  coreUsersRecoveryCreate(
    """A unique integer value identifying this User."""
    id: Int!
  ): CoreUsersRecoveryCreateResponse @httpOperation(subgraph: "Authentik", path: "/core/users/{args.id}/recovery/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: POST) @source(name: "core_users_recovery_create", type: "core_users_recovery_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Create a temporary link that a user can use to recover their accounts"""
  coreUsersRecoveryEmailCreate(
    """A unique integer value identifying this User."""
    id: Int!
    emailStage: String! @source(name: "email_stage", type: "String!", subgraph: "Authentik")
  ): CoreUsersRecoveryEmailCreateResponse @httpOperation(subgraph: "Authentik", path: "/core/users/{args.id}/recovery_email/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: POST, queryParamArgMap: "{\"email_stage\":\"email_stage\"}") @source(name: "core_users_recovery_email_create", type: "core_users_recovery_email_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Set password for user"""
  coreUsersSetPasswordCreate(
    """A unique integer value identifying this User."""
    id: Int!
    input: UserPasswordSetRequestInput @source(name: "input", type: "UserPasswordSetRequest_Input", subgraph: "Authentik")
  ): CoreUsersSetPasswordCreateResponse @httpOperation(subgraph: "Authentik", path: "/core/users/{args.id}/set_password/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "core_users_set_password_create", type: "core_users_set_password_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Create a new user account that is marked as a service account"""
  coreUsersServiceAccountCreate(input: UserServiceAccountRequestInput @source(name: "input", type: "UserServiceAccountRequest_Input", subgraph: "Authentik")): CoreUsersServiceAccountCreateResponse @httpOperation(subgraph: "Authentik", path: "/core/users/service_account/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "core_users_service_account_create", type: "core_users_service_account_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """CertificateKeyPair Viewset"""
  cryptoCertificatekeypairsCreate(input: CertificateKeyPairRequestInput @source(name: "input", type: "CertificateKeyPairRequest_Input", subgraph: "Authentik")): CryptoCertificatekeypairsCreateResponse @httpOperation(subgraph: "Authentik", path: "/crypto/certificatekeypairs/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "crypto_certificatekeypairs_create", type: "crypto_certificatekeypairs_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """CertificateKeyPair Viewset"""
  cryptoCertificatekeypairsUpdate(
    """A UUID string identifying this Certificate-Key Pair."""
    kpUuid: UUID! @source(name: "kp_uuid", type: "UUID!", subgraph: "Authentik")
    input: CertificateKeyPairRequestInput @source(name: "input", type: "CertificateKeyPairRequest_Input", subgraph: "Authentik")
  ): CryptoCertificatekeypairsUpdateResponse @httpOperation(subgraph: "Authentik", path: "/crypto/certificatekeypairs/{args.kp_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "crypto_certificatekeypairs_update", type: "crypto_certificatekeypairs_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """CertificateKeyPair Viewset"""
  cryptoCertificatekeypairsPartialUpdate(
    """A UUID string identifying this Certificate-Key Pair."""
    kpUuid: UUID! @source(name: "kp_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedCertificateKeyPairRequestInput @source(name: "input", type: "PatchedCertificateKeyPairRequest_Input", subgraph: "Authentik")
  ): CryptoCertificatekeypairsPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/crypto/certificatekeypairs/{args.kp_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "crypto_certificatekeypairs_partial_update", type: "crypto_certificatekeypairs_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """CertificateKeyPair Viewset"""
  cryptoCertificatekeypairsDestroy(
    """A UUID string identifying this Certificate-Key Pair."""
    kpUuid: UUID! @source(name: "kp_uuid", type: "UUID!", subgraph: "Authentik")
  ): CryptoCertificatekeypairsDestroyResponse @httpOperation(subgraph: "Authentik", path: "/crypto/certificatekeypairs/{args.kp_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "crypto_certificatekeypairs_destroy", type: "crypto_certificatekeypairs_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Generate a new, self-signed certificate-key pair"""
  cryptoCertificatekeypairsGenerateCreate(input: CertificateGenerationRequestInput @source(name: "input", type: "CertificateGenerationRequest_Input", subgraph: "Authentik")): CryptoCertificatekeypairsGenerateCreateResponse @httpOperation(subgraph: "Authentik", path: "/crypto/certificatekeypairs/generate/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "crypto_certificatekeypairs_generate_create", type: "crypto_certificatekeypairs_generate_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """License Viewset"""
  enterpriseLicenseCreate(input: LicenseRequestInput @source(name: "input", type: "LicenseRequest_Input", subgraph: "Authentik")): EnterpriseLicenseCreateResponse @httpOperation(subgraph: "Authentik", path: "/enterprise/license/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "enterprise_license_create", type: "enterprise_license_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """License Viewset"""
  enterpriseLicenseUpdate(
    """A UUID string identifying this License."""
    licenseUuid: UUID! @source(name: "license_uuid", type: "UUID!", subgraph: "Authentik")
    input: LicenseRequestInput @source(name: "input", type: "LicenseRequest_Input", subgraph: "Authentik")
  ): EnterpriseLicenseUpdateResponse @httpOperation(subgraph: "Authentik", path: "/enterprise/license/{args.license_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "enterprise_license_update", type: "enterprise_license_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """License Viewset"""
  enterpriseLicensePartialUpdate(
    """A UUID string identifying this License."""
    licenseUuid: UUID! @source(name: "license_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedLicenseRequestInput @source(name: "input", type: "PatchedLicenseRequest_Input", subgraph: "Authentik")
  ): EnterpriseLicensePartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/enterprise/license/{args.license_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "enterprise_license_partial_update", type: "enterprise_license_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """License Viewset"""
  enterpriseLicenseDestroy(
    """A UUID string identifying this License."""
    licenseUuid: UUID! @source(name: "license_uuid", type: "UUID!", subgraph: "Authentik")
  ): EnterpriseLicenseDestroyResponse @httpOperation(subgraph: "Authentik", path: "/enterprise/license/{args.license_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "enterprise_license_destroy", type: "enterprise_license_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Event Read-Only Viewset"""
  eventsEventsCreate(input: EventRequestInput @source(name: "input", type: "EventRequest_Input", subgraph: "Authentik")): EventsEventsCreateResponse @httpOperation(subgraph: "Authentik", path: "/events/events/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "events_events_create", type: "events_events_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Event Read-Only Viewset"""
  eventsEventsUpdate(
    """A UUID string identifying this Event."""
    eventUuid: UUID! @source(name: "event_uuid", type: "UUID!", subgraph: "Authentik")
    input: EventRequestInput @source(name: "input", type: "EventRequest_Input", subgraph: "Authentik")
  ): EventsEventsUpdateResponse @httpOperation(subgraph: "Authentik", path: "/events/events/{args.event_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "events_events_update", type: "events_events_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Event Read-Only Viewset"""
  eventsEventsPartialUpdate(
    """A UUID string identifying this Event."""
    eventUuid: UUID! @source(name: "event_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedEventRequestInput @source(name: "input", type: "PatchedEventRequest_Input", subgraph: "Authentik")
  ): EventsEventsPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/events/events/{args.event_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "events_events_partial_update", type: "events_events_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Event Read-Only Viewset"""
  eventsEventsDestroy(
    """A UUID string identifying this Event."""
    eventUuid: UUID! @source(name: "event_uuid", type: "UUID!", subgraph: "Authentik")
  ): EventsEventsDestroyResponse @httpOperation(subgraph: "Authentik", path: "/events/events/{args.event_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "events_events_destroy", type: "events_events_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Notification Viewset"""
  eventsNotificationsUpdate(
    """A UUID string identifying this Notification."""
    uuid: UUID!
    input: NotificationRequestInput @source(name: "input", type: "NotificationRequest_Input", subgraph: "Authentik")
  ): EventsNotificationsUpdateResponse @httpOperation(subgraph: "Authentik", path: "/events/notifications/{args.uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "events_notifications_update", type: "events_notifications_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Notification Viewset"""
  eventsNotificationsPartialUpdate(
    """A UUID string identifying this Notification."""
    uuid: UUID!
    input: PatchedNotificationRequestInput @source(name: "input", type: "PatchedNotificationRequest_Input", subgraph: "Authentik")
  ): EventsNotificationsPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/events/notifications/{args.uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "events_notifications_partial_update", type: "events_notifications_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Notification Viewset"""
  eventsNotificationsDestroy(
    """A UUID string identifying this Notification."""
    uuid: UUID!
  ): EventsNotificationsDestroyResponse @httpOperation(subgraph: "Authentik", path: "/events/notifications/{args.uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "events_notifications_destroy", type: "events_notifications_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Mark all the user's notifications as seen"""
  eventsNotificationsMarkAllSeenCreate: EventsNotificationsMarkAllSeenCreateResponse @httpOperation(subgraph: "Authentik", path: "/events/notifications/mark_all_seen/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: POST) @source(name: "events_notifications_mark_all_seen_create", type: "events_notifications_mark_all_seen_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """NotificationRule Viewset"""
  eventsRulesCreate(input: NotificationRuleRequestInput @source(name: "input", type: "NotificationRuleRequest_Input", subgraph: "Authentik")): EventsRulesCreateResponse @httpOperation(subgraph: "Authentik", path: "/events/rules/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "events_rules_create", type: "events_rules_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """NotificationRule Viewset"""
  eventsRulesUpdate(
    """A UUID string identifying this Notification Rule."""
    pbmUuid: UUID! @source(name: "pbm_uuid", type: "UUID!", subgraph: "Authentik")
    input: NotificationRuleRequestInput @source(name: "input", type: "NotificationRuleRequest_Input", subgraph: "Authentik")
  ): EventsRulesUpdateResponse @httpOperation(subgraph: "Authentik", path: "/events/rules/{args.pbm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "events_rules_update", type: "events_rules_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """NotificationRule Viewset"""
  eventsRulesPartialUpdate(
    """A UUID string identifying this Notification Rule."""
    pbmUuid: UUID! @source(name: "pbm_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedNotificationRuleRequestInput @source(name: "input", type: "PatchedNotificationRuleRequest_Input", subgraph: "Authentik")
  ): EventsRulesPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/events/rules/{args.pbm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "events_rules_partial_update", type: "events_rules_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """NotificationRule Viewset"""
  eventsRulesDestroy(
    """A UUID string identifying this Notification Rule."""
    pbmUuid: UUID! @source(name: "pbm_uuid", type: "UUID!", subgraph: "Authentik")
  ): EventsRulesDestroyResponse @httpOperation(subgraph: "Authentik", path: "/events/rules/{args.pbm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "events_rules_destroy", type: "events_rules_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Run task"""
  eventsSystemTasksRunCreate(
    """A UUID string identifying this System Task."""
    uuid: UUID!
  ): EventsSystemTasksRunCreateResponse @httpOperation(subgraph: "Authentik", path: "/events/system_tasks/{args.uuid}/run/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: POST) @source(name: "events_system_tasks_run_create", type: "events_system_tasks_run_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """NotificationTransport Viewset"""
  eventsTransportsCreate(input: NotificationTransportRequestInput @source(name: "input", type: "NotificationTransportRequest_Input", subgraph: "Authentik")): EventsTransportsCreateResponse @httpOperation(subgraph: "Authentik", path: "/events/transports/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "events_transports_create", type: "events_transports_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """NotificationTransport Viewset"""
  eventsTransportsUpdate(
    """A UUID string identifying this Notification Transport."""
    uuid: UUID!
    input: NotificationTransportRequestInput @source(name: "input", type: "NotificationTransportRequest_Input", subgraph: "Authentik")
  ): EventsTransportsUpdateResponse @httpOperation(subgraph: "Authentik", path: "/events/transports/{args.uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "events_transports_update", type: "events_transports_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """NotificationTransport Viewset"""
  eventsTransportsPartialUpdate(
    """A UUID string identifying this Notification Transport."""
    uuid: UUID!
    input: PatchedNotificationTransportRequestInput @source(name: "input", type: "PatchedNotificationTransportRequest_Input", subgraph: "Authentik")
  ): EventsTransportsPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/events/transports/{args.uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "events_transports_partial_update", type: "events_transports_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """NotificationTransport Viewset"""
  eventsTransportsDestroy(
    """A UUID string identifying this Notification Transport."""
    uuid: UUID!
  ): EventsTransportsDestroyResponse @httpOperation(subgraph: "Authentik", path: "/events/transports/{args.uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "events_transports_destroy", type: "events_transports_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """
  Send example notification using selected transport. Requires
  Modify permissions.
  """
  eventsTransportsTestCreate(
    """A UUID string identifying this Notification Transport."""
    uuid: UUID!
  ): EventsTransportsTestCreateResponse @httpOperation(subgraph: "Authentik", path: "/events/transports/{args.uuid}/test/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: POST) @source(name: "events_transports_test_create", type: "events_transports_test_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """FlowStageBinding Viewset"""
  flowsBindingsCreate(input: FlowStageBindingRequestInput @source(name: "input", type: "FlowStageBindingRequest_Input", subgraph: "Authentik")): FlowsBindingsCreateResponse @httpOperation(subgraph: "Authentik", path: "/flows/bindings/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "flows_bindings_create", type: "flows_bindings_create_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """FlowStageBinding Viewset"""
  flowsBindingsUpdate(
    """A UUID string identifying this Flow Stage Binding."""
    fsbUuid: UUID! @source(name: "fsb_uuid", type: "UUID!", subgraph: "Authentik")
    input: FlowStageBindingRequestInput @source(name: "input", type: "FlowStageBindingRequest_Input", subgraph: "Authentik")
  ): FlowsBindingsUpdateResponse @httpOperation(subgraph: "Authentik", path: "/flows/bindings/{args.fsb_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "flows_bindings_update", type: "flows_bindings_update_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """FlowStageBinding Viewset"""
  flowsBindingsPartialUpdate(
    """A UUID string identifying this Flow Stage Binding."""
    fsbUuid: UUID! @source(name: "fsb_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedFlowStageBindingRequestInput @source(name: "input", type: "PatchedFlowStageBindingRequest_Input", subgraph: "Authentik")
  ): FlowsBindingsPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/flows/bindings/{args.fsb_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "flows_bindings_partial_update", type: "flows_bindings_partial_update_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """FlowStageBinding Viewset"""
  flowsBindingsDestroy(
    """A UUID string identifying this Flow Stage Binding."""
    fsbUuid: UUID! @source(name: "fsb_uuid", type: "UUID!", subgraph: "Authentik")
  ): FlowsBindingsDestroyResponse @httpOperation(subgraph: "Authentik", path: "/flows/bindings/{args.fsb_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "flows_bindings_destroy", type: "flows_bindings_destroy_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """
  Solve the previously retrieved challenge and advanced to the next stage.
  """
  flowsExecutorSolve(
    flowSlug: String! @source(name: "flow_slug", type: "String!", subgraph: "Authentik")
    """Querystring as received"""
    query: String!
    input: FlowChallengeResponseRequestInput @source(name: "input", type: "FlowChallengeResponseRequest_Input", subgraph: "Authentik")
  ): FlowsExecutorSolveResponse @httpOperation(subgraph: "Authentik", path: "/flows/executor/{args.flow_slug}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST, queryParamArgMap: "{\"query\":\"query\"}") @source(name: "flows_executor_solve", type: "flows_executor_solve_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Flow Viewset"""
  flowsInstancesCreate(input: FlowRequestInput @source(name: "input", type: "FlowRequest_Input", subgraph: "Authentik")): FlowsInstancesCreateResponse @httpOperation(subgraph: "Authentik", path: "/flows/instances/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "flows_instances_create", type: "flows_instances_create_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Flow Viewset"""
  flowsInstancesUpdate(
    """Visible in the URL."""
    slug: String!
    input: FlowRequestInput @source(name: "input", type: "FlowRequest_Input", subgraph: "Authentik")
  ): FlowsInstancesUpdateResponse @httpOperation(subgraph: "Authentik", path: "/flows/instances/{args.slug}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "flows_instances_update", type: "flows_instances_update_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Flow Viewset"""
  flowsInstancesPartialUpdate(
    """Visible in the URL."""
    slug: String!
    input: PatchedFlowRequestInput @source(name: "input", type: "PatchedFlowRequest_Input", subgraph: "Authentik")
  ): FlowsInstancesPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/flows/instances/{args.slug}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "flows_instances_partial_update", type: "flows_instances_partial_update_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Flow Viewset"""
  flowsInstancesDestroy(
    """Visible in the URL."""
    slug: String!
  ): FlowsInstancesDestroyResponse @httpOperation(subgraph: "Authentik", path: "/flows/instances/{args.slug}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "flows_instances_destroy", type: "flows_instances_destroy_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Set Flow background"""
  flowsInstancesSetBackgroundCreate(
    """Visible in the URL."""
    slug: String!
    input: FileUploadRequestInput @source(name: "input", type: "FileUploadRequest_Input", subgraph: "Authentik")
  ): GenericError @httpOperation(subgraph: "Authentik", path: "/flows/instances/{args.slug}/set_background/", operationSpecificHeaders: [["Content-Type", "multipart/form-data"], ["accept", "application/json"]], httpMethod: POST) @source(name: "flows_instances_set_background_create", type: "GenericError", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Set Flow background (as URL)"""
  flowsInstancesSetBackgroundUrlCreate(
    """Visible in the URL."""
    slug: String!
    input: FilePathRequestInput @source(name: "input", type: "FilePathRequest_Input", subgraph: "Authentik")
  ): GenericError @httpOperation(subgraph: "Authentik", path: "/flows/instances/{args.slug}/set_background_url/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "flows_instances_set_background_url_create", type: "GenericError", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Clear flow cache"""
  flowsInstancesCacheClearCreate: FlowsInstancesCacheClearCreateResponse @httpOperation(subgraph: "Authentik", path: "/flows/instances/cache_clear/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: POST) @source(name: "flows_instances_cache_clear_create", type: "flows_instances_cache_clear_create_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Import flow from .yaml file"""
  flowsInstancesImportCreate(input: FileUploadRequestInput @source(name: "input", type: "FileUploadRequest_Input", subgraph: "Authentik")): FlowsInstancesImportCreateResponse @httpOperation(subgraph: "Authentik", path: "/flows/instances/import/", operationSpecificHeaders: [["Content-Type", "multipart/form-data"], ["accept", "application/json"]], httpMethod: POST) @source(name: "flows_instances_import_create", type: "flows_instances_import_create_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Blueprint instances"""
  managedBlueprintsCreate(input: BlueprintInstanceRequestInput @source(name: "input", type: "BlueprintInstanceRequest_Input", subgraph: "Authentik")): ManagedBlueprintsCreateResponse @httpOperation(subgraph: "Authentik", path: "/managed/blueprints/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "managed_blueprints_create", type: "managed_blueprints_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Blueprint instances"""
  managedBlueprintsUpdate(
    """A UUID string identifying this Blueprint Instance."""
    instanceUuid: UUID! @source(name: "instance_uuid", type: "UUID!", subgraph: "Authentik")
    input: BlueprintInstanceRequestInput @source(name: "input", type: "BlueprintInstanceRequest_Input", subgraph: "Authentik")
  ): ManagedBlueprintsUpdateResponse @httpOperation(subgraph: "Authentik", path: "/managed/blueprints/{args.instance_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "managed_blueprints_update", type: "managed_blueprints_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Blueprint instances"""
  managedBlueprintsPartialUpdate(
    """A UUID string identifying this Blueprint Instance."""
    instanceUuid: UUID! @source(name: "instance_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedBlueprintInstanceRequestInput @source(name: "input", type: "PatchedBlueprintInstanceRequest_Input", subgraph: "Authentik")
  ): ManagedBlueprintsPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/managed/blueprints/{args.instance_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "managed_blueprints_partial_update", type: "managed_blueprints_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Blueprint instances"""
  managedBlueprintsDestroy(
    """A UUID string identifying this Blueprint Instance."""
    instanceUuid: UUID! @source(name: "instance_uuid", type: "UUID!", subgraph: "Authentik")
  ): ManagedBlueprintsDestroyResponse @httpOperation(subgraph: "Authentik", path: "/managed/blueprints/{args.instance_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "managed_blueprints_destroy", type: "managed_blueprints_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Apply a blueprint"""
  managedBlueprintsApplyCreate(
    """A UUID string identifying this Blueprint Instance."""
    instanceUuid: UUID! @source(name: "instance_uuid", type: "UUID!", subgraph: "Authentik")
  ): ManagedBlueprintsApplyCreateResponse @httpOperation(subgraph: "Authentik", path: "/managed/blueprints/{args.instance_uuid}/apply/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: POST) @source(name: "managed_blueprints_apply_create", type: "managed_blueprints_apply_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AccessToken Viewset"""
  oauth2AccessTokensDestroy(
    """A unique integer value identifying this OAuth2 Access Token."""
    id: Int!
  ): Oauth2AccessTokensDestroyResponse @httpOperation(subgraph: "Authentik", path: "/oauth2/access_tokens/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "oauth2_access_tokens_destroy", type: "oauth2_access_tokens_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthorizationCode Viewset"""
  oauth2AuthorizationCodesDestroy(
    """A unique integer value identifying this Authorization Code."""
    id: Int!
  ): Oauth2AuthorizationCodesDestroyResponse @httpOperation(subgraph: "Authentik", path: "/oauth2/authorization_codes/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "oauth2_authorization_codes_destroy", type: "oauth2_authorization_codes_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RefreshToken Viewset"""
  oauth2RefreshTokensDestroy(
    """A unique integer value identifying this OAuth2 Refresh Token."""
    id: Int!
  ): Oauth2RefreshTokensDestroyResponse @httpOperation(subgraph: "Authentik", path: "/oauth2/refresh_tokens/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "oauth2_refresh_tokens_destroy", type: "oauth2_refresh_tokens_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Outpost Viewset"""
  outpostsInstancesCreate(input: OutpostRequestInput @source(name: "input", type: "OutpostRequest_Input", subgraph: "Authentik")): OutpostsInstancesCreateResponse @httpOperation(subgraph: "Authentik", path: "/outposts/instances/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "outposts_instances_create", type: "outposts_instances_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Outpost Viewset"""
  outpostsInstancesUpdate(
    """A UUID string identifying this Outpost."""
    uuid: UUID!
    input: OutpostRequestInput @source(name: "input", type: "OutpostRequest_Input", subgraph: "Authentik")
  ): OutpostsInstancesUpdateResponse @httpOperation(subgraph: "Authentik", path: "/outposts/instances/{args.uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "outposts_instances_update", type: "outposts_instances_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Outpost Viewset"""
  outpostsInstancesPartialUpdate(
    """A UUID string identifying this Outpost."""
    uuid: UUID!
    input: PatchedOutpostRequestInput @source(name: "input", type: "PatchedOutpostRequest_Input", subgraph: "Authentik")
  ): OutpostsInstancesPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/outposts/instances/{args.uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "outposts_instances_partial_update", type: "outposts_instances_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Outpost Viewset"""
  outpostsInstancesDestroy(
    """A UUID string identifying this Outpost."""
    uuid: UUID!
  ): OutpostsInstancesDestroyResponse @httpOperation(subgraph: "Authentik", path: "/outposts/instances/{args.uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "outposts_instances_destroy", type: "outposts_instances_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """ServiceConnection Viewset"""
  outpostsServiceConnectionsAllDestroy(
    """A UUID string identifying this Outpost Service-Connection."""
    uuid: UUID!
  ): OutpostsServiceConnectionsAllDestroyResponse @httpOperation(subgraph: "Authentik", path: "/outposts/service_connections/all/{args.uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "outposts_service_connections_all_destroy", type: "outposts_service_connections_all_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """DockerServiceConnection Viewset"""
  outpostsServiceConnectionsDockerCreate(input: DockerServiceConnectionRequestInput @source(name: "input", type: "DockerServiceConnectionRequest_Input", subgraph: "Authentik")): OutpostsServiceConnectionsDockerCreateResponse @httpOperation(subgraph: "Authentik", path: "/outposts/service_connections/docker/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "outposts_service_connections_docker_create", type: "outposts_service_connections_docker_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """DockerServiceConnection Viewset"""
  outpostsServiceConnectionsDockerUpdate(
    """A UUID string identifying this Docker Service-Connection."""
    uuid: UUID!
    input: DockerServiceConnectionRequestInput @source(name: "input", type: "DockerServiceConnectionRequest_Input", subgraph: "Authentik")
  ): OutpostsServiceConnectionsDockerUpdateResponse @httpOperation(subgraph: "Authentik", path: "/outposts/service_connections/docker/{args.uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "outposts_service_connections_docker_update", type: "outposts_service_connections_docker_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """DockerServiceConnection Viewset"""
  outpostsServiceConnectionsDockerPartialUpdate(
    """A UUID string identifying this Docker Service-Connection."""
    uuid: UUID!
    input: PatchedDockerServiceConnectionRequestInput @source(name: "input", type: "PatchedDockerServiceConnectionRequest_Input", subgraph: "Authentik")
  ): OutpostsServiceConnectionsDockerPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/outposts/service_connections/docker/{args.uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "outposts_service_connections_docker_partial_update", type: "outposts_service_connections_docker_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """DockerServiceConnection Viewset"""
  outpostsServiceConnectionsDockerDestroy(
    """A UUID string identifying this Docker Service-Connection."""
    uuid: UUID!
  ): OutpostsServiceConnectionsDockerDestroyResponse @httpOperation(subgraph: "Authentik", path: "/outposts/service_connections/docker/{args.uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "outposts_service_connections_docker_destroy", type: "outposts_service_connections_docker_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """KubernetesServiceConnection Viewset"""
  outpostsServiceConnectionsKubernetesCreate(input: KubernetesServiceConnectionRequestInput @source(name: "input", type: "KubernetesServiceConnectionRequest_Input", subgraph: "Authentik")): OutpostsServiceConnectionsKubernetesCreateResponse @httpOperation(subgraph: "Authentik", path: "/outposts/service_connections/kubernetes/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "outposts_service_connections_kubernetes_create", type: "outposts_service_connections_kubernetes_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """KubernetesServiceConnection Viewset"""
  outpostsServiceConnectionsKubernetesUpdate(
    """A UUID string identifying this Kubernetes Service-Connection."""
    uuid: UUID!
    input: KubernetesServiceConnectionRequestInput @source(name: "input", type: "KubernetesServiceConnectionRequest_Input", subgraph: "Authentik")
  ): OutpostsServiceConnectionsKubernetesUpdateResponse @httpOperation(subgraph: "Authentik", path: "/outposts/service_connections/kubernetes/{args.uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "outposts_service_connections_kubernetes_update", type: "outposts_service_connections_kubernetes_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """KubernetesServiceConnection Viewset"""
  outpostsServiceConnectionsKubernetesPartialUpdate(
    """A UUID string identifying this Kubernetes Service-Connection."""
    uuid: UUID!
    input: PatchedKubernetesServiceConnectionRequestInput @source(name: "input", type: "PatchedKubernetesServiceConnectionRequest_Input", subgraph: "Authentik")
  ): OutpostsServiceConnectionsKubernetesPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/outposts/service_connections/kubernetes/{args.uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "outposts_service_connections_kubernetes_partial_update", type: "outposts_service_connections_kubernetes_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """KubernetesServiceConnection Viewset"""
  outpostsServiceConnectionsKubernetesDestroy(
    """A UUID string identifying this Kubernetes Service-Connection."""
    uuid: UUID!
  ): OutpostsServiceConnectionsKubernetesDestroyResponse @httpOperation(subgraph: "Authentik", path: "/outposts/service_connections/kubernetes/{args.uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "outposts_service_connections_kubernetes_destroy", type: "outposts_service_connections_kubernetes_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Policy Viewset"""
  policiesAllDestroy(
    """A UUID string identifying this Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
  ): PoliciesAllDestroyResponse @httpOperation(subgraph: "Authentik", path: "/policies/all/{args.policy_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "policies_all_destroy", type: "policies_all_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Test policy"""
  policiesAllTestCreate(
    """A UUID string identifying this Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
    input: PolicyTestRequestInput @source(name: "input", type: "PolicyTestRequest_Input", subgraph: "Authentik")
  ): PoliciesAllTestCreateResponse @httpOperation(subgraph: "Authentik", path: "/policies/all/{args.policy_uuid}/test/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "policies_all_test_create", type: "policies_all_test_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Clear policy cache"""
  policiesAllCacheClearCreate: PoliciesAllCacheClearCreateResponse @httpOperation(subgraph: "Authentik", path: "/policies/all/cache_clear/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: POST) @source(name: "policies_all_cache_clear_create", type: "policies_all_cache_clear_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PolicyBinding Viewset"""
  policiesBindingsCreate(input: PolicyBindingRequestInput @source(name: "input", type: "PolicyBindingRequest_Input", subgraph: "Authentik")): PoliciesBindingsCreateResponse @httpOperation(subgraph: "Authentik", path: "/policies/bindings/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "policies_bindings_create", type: "policies_bindings_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PolicyBinding Viewset"""
  policiesBindingsUpdate(
    """A UUID string identifying this Policy Binding."""
    policyBindingUuid: UUID! @source(name: "policy_binding_uuid", type: "UUID!", subgraph: "Authentik")
    input: PolicyBindingRequestInput @source(name: "input", type: "PolicyBindingRequest_Input", subgraph: "Authentik")
  ): PoliciesBindingsUpdateResponse @httpOperation(subgraph: "Authentik", path: "/policies/bindings/{args.policy_binding_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "policies_bindings_update", type: "policies_bindings_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PolicyBinding Viewset"""
  policiesBindingsPartialUpdate(
    """A UUID string identifying this Policy Binding."""
    policyBindingUuid: UUID! @source(name: "policy_binding_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedPolicyBindingRequestInput @source(name: "input", type: "PatchedPolicyBindingRequest_Input", subgraph: "Authentik")
  ): PoliciesBindingsPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/policies/bindings/{args.policy_binding_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "policies_bindings_partial_update", type: "policies_bindings_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PolicyBinding Viewset"""
  policiesBindingsDestroy(
    """A UUID string identifying this Policy Binding."""
    policyBindingUuid: UUID! @source(name: "policy_binding_uuid", type: "UUID!", subgraph: "Authentik")
  ): PoliciesBindingsDestroyResponse @httpOperation(subgraph: "Authentik", path: "/policies/bindings/{args.policy_binding_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "policies_bindings_destroy", type: "policies_bindings_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Dummy Viewset"""
  policiesDummyCreate(input: DummyPolicyRequestInput @source(name: "input", type: "DummyPolicyRequest_Input", subgraph: "Authentik")): PoliciesDummyCreateResponse @httpOperation(subgraph: "Authentik", path: "/policies/dummy/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "policies_dummy_create", type: "policies_dummy_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Dummy Viewset"""
  policiesDummyUpdate(
    """A UUID string identifying this Dummy Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
    input: DummyPolicyRequestInput @source(name: "input", type: "DummyPolicyRequest_Input", subgraph: "Authentik")
  ): PoliciesDummyUpdateResponse @httpOperation(subgraph: "Authentik", path: "/policies/dummy/{args.policy_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "policies_dummy_update", type: "policies_dummy_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Dummy Viewset"""
  policiesDummyPartialUpdate(
    """A UUID string identifying this Dummy Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedDummyPolicyRequestInput @source(name: "input", type: "PatchedDummyPolicyRequest_Input", subgraph: "Authentik")
  ): PoliciesDummyPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/policies/dummy/{args.policy_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "policies_dummy_partial_update", type: "policies_dummy_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Dummy Viewset"""
  policiesDummyDestroy(
    """A UUID string identifying this Dummy Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
  ): PoliciesDummyDestroyResponse @httpOperation(subgraph: "Authentik", path: "/policies/dummy/{args.policy_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "policies_dummy_destroy", type: "policies_dummy_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Event Matcher Policy Viewset"""
  policiesEventMatcherCreate(input: EventMatcherPolicyRequestInput @source(name: "input", type: "EventMatcherPolicyRequest_Input", subgraph: "Authentik")): PoliciesEventMatcherCreateResponse @httpOperation(subgraph: "Authentik", path: "/policies/event_matcher/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "policies_event_matcher_create", type: "policies_event_matcher_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Event Matcher Policy Viewset"""
  policiesEventMatcherUpdate(
    """A UUID string identifying this Event Matcher Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
    input: EventMatcherPolicyRequestInput @source(name: "input", type: "EventMatcherPolicyRequest_Input", subgraph: "Authentik")
  ): PoliciesEventMatcherUpdateResponse @httpOperation(subgraph: "Authentik", path: "/policies/event_matcher/{args.policy_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "policies_event_matcher_update", type: "policies_event_matcher_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Event Matcher Policy Viewset"""
  policiesEventMatcherPartialUpdate(
    """A UUID string identifying this Event Matcher Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedEventMatcherPolicyRequestInput @source(name: "input", type: "PatchedEventMatcherPolicyRequest_Input", subgraph: "Authentik")
  ): PoliciesEventMatcherPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/policies/event_matcher/{args.policy_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "policies_event_matcher_partial_update", type: "policies_event_matcher_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Event Matcher Policy Viewset"""
  policiesEventMatcherDestroy(
    """A UUID string identifying this Event Matcher Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
  ): PoliciesEventMatcherDestroyResponse @httpOperation(subgraph: "Authentik", path: "/policies/event_matcher/{args.policy_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "policies_event_matcher_destroy", type: "policies_event_matcher_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  policiesExpressionCreate(input: ExpressionPolicyRequestInput @source(name: "input", type: "ExpressionPolicyRequest_Input", subgraph: "Authentik")): PoliciesExpressionCreateResponse @httpOperation(subgraph: "Authentik", path: "/policies/expression/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "policies_expression_create", type: "policies_expression_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  policiesExpressionUpdate(
    """A UUID string identifying this Expression Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
    input: ExpressionPolicyRequestInput @source(name: "input", type: "ExpressionPolicyRequest_Input", subgraph: "Authentik")
  ): PoliciesExpressionUpdateResponse @httpOperation(subgraph: "Authentik", path: "/policies/expression/{args.policy_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "policies_expression_update", type: "policies_expression_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  policiesExpressionPartialUpdate(
    """A UUID string identifying this Expression Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedExpressionPolicyRequestInput @source(name: "input", type: "PatchedExpressionPolicyRequest_Input", subgraph: "Authentik")
  ): PoliciesExpressionPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/policies/expression/{args.policy_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "policies_expression_partial_update", type: "policies_expression_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  policiesExpressionDestroy(
    """A UUID string identifying this Expression Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
  ): PoliciesExpressionDestroyResponse @httpOperation(subgraph: "Authentik", path: "/policies/expression/{args.policy_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "policies_expression_destroy", type: "policies_expression_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """GeoIP Viewset"""
  policiesGeoipCreate(input: GeoIpPolicyRequestInput @source(name: "input", type: "GeoIPPolicyRequest_Input", subgraph: "Authentik")): PoliciesGeoipCreateResponse @httpOperation(subgraph: "Authentik", path: "/policies/geoip/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "policies_geoip_create", type: "policies_geoip_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """GeoIP Viewset"""
  policiesGeoipUpdate(
    """A UUID string identifying this GeoIP Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
    input: GeoIpPolicyRequestInput @source(name: "input", type: "GeoIPPolicyRequest_Input", subgraph: "Authentik")
  ): PoliciesGeoipUpdateResponse @httpOperation(subgraph: "Authentik", path: "/policies/geoip/{args.policy_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "policies_geoip_update", type: "policies_geoip_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """GeoIP Viewset"""
  policiesGeoipPartialUpdate(
    """A UUID string identifying this GeoIP Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedGeoIpPolicyRequestInput @source(name: "input", type: "PatchedGeoIPPolicyRequest_Input", subgraph: "Authentik")
  ): PoliciesGeoipPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/policies/geoip/{args.policy_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "policies_geoip_partial_update", type: "policies_geoip_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """GeoIP Viewset"""
  policiesGeoipDestroy(
    """A UUID string identifying this GeoIP Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
  ): PoliciesGeoipDestroyResponse @httpOperation(subgraph: "Authentik", path: "/policies/geoip/{args.policy_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "policies_geoip_destroy", type: "policies_geoip_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Password Policy Viewset"""
  policiesPasswordCreate(input: PasswordPolicyRequestInput @source(name: "input", type: "PasswordPolicyRequest_Input", subgraph: "Authentik")): PoliciesPasswordCreateResponse @httpOperation(subgraph: "Authentik", path: "/policies/password/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "policies_password_create", type: "policies_password_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Password Policy Viewset"""
  policiesPasswordUpdate(
    """A UUID string identifying this Password Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
    input: PasswordPolicyRequestInput @source(name: "input", type: "PasswordPolicyRequest_Input", subgraph: "Authentik")
  ): PoliciesPasswordUpdateResponse @httpOperation(subgraph: "Authentik", path: "/policies/password/{args.policy_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "policies_password_update", type: "policies_password_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Password Policy Viewset"""
  policiesPasswordPartialUpdate(
    """A UUID string identifying this Password Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedPasswordPolicyRequestInput @source(name: "input", type: "PatchedPasswordPolicyRequest_Input", subgraph: "Authentik")
  ): PoliciesPasswordPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/policies/password/{args.policy_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "policies_password_partial_update", type: "policies_password_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Password Policy Viewset"""
  policiesPasswordDestroy(
    """A UUID string identifying this Password Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
  ): PoliciesPasswordDestroyResponse @httpOperation(subgraph: "Authentik", path: "/policies/password/{args.policy_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "policies_password_destroy", type: "policies_password_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Password Expiry Viewset"""
  policiesPasswordExpiryCreate(input: PasswordExpiryPolicyRequestInput @source(name: "input", type: "PasswordExpiryPolicyRequest_Input", subgraph: "Authentik")): PoliciesPasswordExpiryCreateResponse @httpOperation(subgraph: "Authentik", path: "/policies/password_expiry/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "policies_password_expiry_create", type: "policies_password_expiry_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Password Expiry Viewset"""
  policiesPasswordExpiryUpdate(
    """A UUID string identifying this Password Expiry Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
    input: PasswordExpiryPolicyRequestInput @source(name: "input", type: "PasswordExpiryPolicyRequest_Input", subgraph: "Authentik")
  ): PoliciesPasswordExpiryUpdateResponse @httpOperation(subgraph: "Authentik", path: "/policies/password_expiry/{args.policy_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "policies_password_expiry_update", type: "policies_password_expiry_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Password Expiry Viewset"""
  policiesPasswordExpiryPartialUpdate(
    """A UUID string identifying this Password Expiry Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedPasswordExpiryPolicyRequestInput @source(name: "input", type: "PatchedPasswordExpiryPolicyRequest_Input", subgraph: "Authentik")
  ): PoliciesPasswordExpiryPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/policies/password_expiry/{args.policy_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "policies_password_expiry_partial_update", type: "policies_password_expiry_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Password Expiry Viewset"""
  policiesPasswordExpiryDestroy(
    """A UUID string identifying this Password Expiry Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
  ): PoliciesPasswordExpiryDestroyResponse @httpOperation(subgraph: "Authentik", path: "/policies/password_expiry/{args.policy_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "policies_password_expiry_destroy", type: "policies_password_expiry_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Reputation Policy Viewset"""
  policiesReputationCreate(input: ReputationPolicyRequestInput @source(name: "input", type: "ReputationPolicyRequest_Input", subgraph: "Authentik")): PoliciesReputationCreateResponse @httpOperation(subgraph: "Authentik", path: "/policies/reputation/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "policies_reputation_create", type: "policies_reputation_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Reputation Policy Viewset"""
  policiesReputationUpdate(
    """A UUID string identifying this Reputation Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
    input: ReputationPolicyRequestInput @source(name: "input", type: "ReputationPolicyRequest_Input", subgraph: "Authentik")
  ): PoliciesReputationUpdateResponse @httpOperation(subgraph: "Authentik", path: "/policies/reputation/{args.policy_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "policies_reputation_update", type: "policies_reputation_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Reputation Policy Viewset"""
  policiesReputationPartialUpdate(
    """A UUID string identifying this Reputation Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedReputationPolicyRequestInput @source(name: "input", type: "PatchedReputationPolicyRequest_Input", subgraph: "Authentik")
  ): PoliciesReputationPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/policies/reputation/{args.policy_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "policies_reputation_partial_update", type: "policies_reputation_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Reputation Policy Viewset"""
  policiesReputationDestroy(
    """A UUID string identifying this Reputation Policy."""
    policyUuid: UUID! @source(name: "policy_uuid", type: "UUID!", subgraph: "Authentik")
  ): PoliciesReputationDestroyResponse @httpOperation(subgraph: "Authentik", path: "/policies/reputation/{args.policy_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "policies_reputation_destroy", type: "policies_reputation_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Reputation Viewset"""
  policiesReputationScoresDestroy(
    """A UUID string identifying this Reputation Score."""
    reputationUuid: UUID! @source(name: "reputation_uuid", type: "UUID!", subgraph: "Authentik")
  ): PoliciesReputationScoresDestroyResponse @httpOperation(subgraph: "Authentik", path: "/policies/reputation/scores/{args.reputation_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "policies_reputation_scores_destroy", type: "policies_reputation_scores_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PropertyMapping Viewset"""
  propertymappingsAllDestroy(
    """A UUID string identifying this Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsAllDestroyResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/all/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "propertymappings_all_destroy", type: "propertymappings_all_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Test Property Mapping"""
  propertymappingsAllTestCreate(
    """A UUID string identifying this Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    formatResult: Boolean @source(name: "format_result", type: "Boolean", subgraph: "Authentik")
    input: PropertyMappingTestRequestInput @source(name: "input", type: "PropertyMappingTestRequest_Input", subgraph: "Authentik")
  ): PropertymappingsAllTestCreateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/all/{args.pm_uuid}/test/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST, queryParamArgMap: "{\"format_result\":\"format_result\"}") @source(name: "propertymappings_all_test_create", type: "propertymappings_all_test_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """NotificationWebhookMapping Viewset"""
  propertymappingsNotificationCreate(input: NotificationWebhookMappingRequestInput @source(name: "input", type: "NotificationWebhookMappingRequest_Input", subgraph: "Authentik")): PropertymappingsNotificationCreateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/notification/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "propertymappings_notification_create", type: "propertymappings_notification_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """NotificationWebhookMapping Viewset"""
  propertymappingsNotificationUpdate(
    """A UUID string identifying this Webhook Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: NotificationWebhookMappingRequestInput @source(name: "input", type: "NotificationWebhookMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsNotificationUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/notification/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "propertymappings_notification_update", type: "propertymappings_notification_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """NotificationWebhookMapping Viewset"""
  propertymappingsNotificationPartialUpdate(
    """A UUID string identifying this Webhook Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedNotificationWebhookMappingRequestInput @source(name: "input", type: "PatchedNotificationWebhookMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsNotificationPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/notification/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "propertymappings_notification_partial_update", type: "propertymappings_notification_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """NotificationWebhookMapping Viewset"""
  propertymappingsNotificationDestroy(
    """A UUID string identifying this Webhook Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsNotificationDestroyResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/notification/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "propertymappings_notification_destroy", type: "propertymappings_notification_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """GoogleWorkspaceProviderMapping Viewset"""
  propertymappingsProviderGoogleWorkspaceCreate(input: GoogleWorkspaceProviderMappingRequestInput @source(name: "input", type: "GoogleWorkspaceProviderMappingRequest_Input", subgraph: "Authentik")): PropertymappingsProviderGoogleWorkspaceCreateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/google_workspace/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "propertymappings_provider_google_workspace_create", type: "propertymappings_provider_google_workspace_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """GoogleWorkspaceProviderMapping Viewset"""
  propertymappingsProviderGoogleWorkspaceUpdate(
    """A UUID string identifying this Google Workspace Provider Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: GoogleWorkspaceProviderMappingRequestInput @source(name: "input", type: "GoogleWorkspaceProviderMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsProviderGoogleWorkspaceUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/google_workspace/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "propertymappings_provider_google_workspace_update", type: "propertymappings_provider_google_workspace_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """GoogleWorkspaceProviderMapping Viewset"""
  propertymappingsProviderGoogleWorkspacePartialUpdate(
    """A UUID string identifying this Google Workspace Provider Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedGoogleWorkspaceProviderMappingRequestInput @source(name: "input", type: "PatchedGoogleWorkspaceProviderMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsProviderGoogleWorkspacePartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/google_workspace/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "propertymappings_provider_google_workspace_partial_update", type: "propertymappings_provider_google_workspace_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """GoogleWorkspaceProviderMapping Viewset"""
  propertymappingsProviderGoogleWorkspaceDestroy(
    """A UUID string identifying this Google Workspace Provider Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsProviderGoogleWorkspaceDestroyResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/google_workspace/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "propertymappings_provider_google_workspace_destroy", type: "propertymappings_provider_google_workspace_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """MicrosoftEntraProviderMapping Viewset"""
  propertymappingsProviderMicrosoftEntraCreate(input: MicrosoftEntraProviderMappingRequestInput @source(name: "input", type: "MicrosoftEntraProviderMappingRequest_Input", subgraph: "Authentik")): PropertymappingsProviderMicrosoftEntraCreateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/microsoft_entra/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "propertymappings_provider_microsoft_entra_create", type: "propertymappings_provider_microsoft_entra_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """MicrosoftEntraProviderMapping Viewset"""
  propertymappingsProviderMicrosoftEntraUpdate(
    """A UUID string identifying this Microsoft Entra Provider Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: MicrosoftEntraProviderMappingRequestInput @source(name: "input", type: "MicrosoftEntraProviderMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsProviderMicrosoftEntraUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/microsoft_entra/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "propertymappings_provider_microsoft_entra_update", type: "propertymappings_provider_microsoft_entra_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """MicrosoftEntraProviderMapping Viewset"""
  propertymappingsProviderMicrosoftEntraPartialUpdate(
    """A UUID string identifying this Microsoft Entra Provider Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedMicrosoftEntraProviderMappingRequestInput @source(name: "input", type: "PatchedMicrosoftEntraProviderMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsProviderMicrosoftEntraPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/microsoft_entra/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "propertymappings_provider_microsoft_entra_partial_update", type: "propertymappings_provider_microsoft_entra_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """MicrosoftEntraProviderMapping Viewset"""
  propertymappingsProviderMicrosoftEntraDestroy(
    """A UUID string identifying this Microsoft Entra Provider Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsProviderMicrosoftEntraDestroyResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/microsoft_entra/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "propertymappings_provider_microsoft_entra_destroy", type: "propertymappings_provider_microsoft_entra_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RACPropertyMapping Viewset"""
  propertymappingsProviderRacCreate(input: RacPropertyMappingRequestInput @source(name: "input", type: "RACPropertyMappingRequest_Input", subgraph: "Authentik")): PropertymappingsProviderRacCreateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/rac/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "propertymappings_provider_rac_create", type: "propertymappings_provider_rac_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RACPropertyMapping Viewset"""
  propertymappingsProviderRacUpdate(
    """A UUID string identifying this RAC Provider Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: RacPropertyMappingRequestInput @source(name: "input", type: "RACPropertyMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsProviderRacUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/rac/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "propertymappings_provider_rac_update", type: "propertymappings_provider_rac_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RACPropertyMapping Viewset"""
  propertymappingsProviderRacPartialUpdate(
    """A UUID string identifying this RAC Provider Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedRacPropertyMappingRequestInput @source(name: "input", type: "PatchedRACPropertyMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsProviderRacPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/rac/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "propertymappings_provider_rac_partial_update", type: "propertymappings_provider_rac_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RACPropertyMapping Viewset"""
  propertymappingsProviderRacDestroy(
    """A UUID string identifying this RAC Provider Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsProviderRacDestroyResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/rac/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "propertymappings_provider_rac_destroy", type: "propertymappings_provider_rac_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RadiusProviderPropertyMapping Viewset"""
  propertymappingsProviderRadiusCreate(input: RadiusProviderPropertyMappingRequestInput @source(name: "input", type: "RadiusProviderPropertyMappingRequest_Input", subgraph: "Authentik")): PropertymappingsProviderRadiusCreateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/radius/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "propertymappings_provider_radius_create", type: "propertymappings_provider_radius_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RadiusProviderPropertyMapping Viewset"""
  propertymappingsProviderRadiusUpdate(
    """A UUID string identifying this Radius Provider Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: RadiusProviderPropertyMappingRequestInput @source(name: "input", type: "RadiusProviderPropertyMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsProviderRadiusUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/radius/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "propertymappings_provider_radius_update", type: "propertymappings_provider_radius_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RadiusProviderPropertyMapping Viewset"""
  propertymappingsProviderRadiusPartialUpdate(
    """A UUID string identifying this Radius Provider Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedRadiusProviderPropertyMappingRequestInput @source(name: "input", type: "PatchedRadiusProviderPropertyMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsProviderRadiusPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/radius/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "propertymappings_provider_radius_partial_update", type: "propertymappings_provider_radius_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RadiusProviderPropertyMapping Viewset"""
  propertymappingsProviderRadiusDestroy(
    """A UUID string identifying this Radius Provider Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsProviderRadiusDestroyResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/radius/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "propertymappings_provider_radius_destroy", type: "propertymappings_provider_radius_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SAMLPropertyMapping Viewset"""
  propertymappingsProviderSamlCreate(input: SamlPropertyMappingRequestInput @source(name: "input", type: "SAMLPropertyMappingRequest_Input", subgraph: "Authentik")): PropertymappingsProviderSamlCreateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/saml/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "propertymappings_provider_saml_create", type: "propertymappings_provider_saml_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SAMLPropertyMapping Viewset"""
  propertymappingsProviderSamlUpdate(
    """A UUID string identifying this SAML Provider Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: SamlPropertyMappingRequestInput @source(name: "input", type: "SAMLPropertyMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsProviderSamlUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/saml/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "propertymappings_provider_saml_update", type: "propertymappings_provider_saml_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SAMLPropertyMapping Viewset"""
  propertymappingsProviderSamlPartialUpdate(
    """A UUID string identifying this SAML Provider Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedSamlPropertyMappingRequestInput @source(name: "input", type: "PatchedSAMLPropertyMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsProviderSamlPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/saml/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "propertymappings_provider_saml_partial_update", type: "propertymappings_provider_saml_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SAMLPropertyMapping Viewset"""
  propertymappingsProviderSamlDestroy(
    """A UUID string identifying this SAML Provider Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsProviderSamlDestroyResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/saml/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "propertymappings_provider_saml_destroy", type: "propertymappings_provider_saml_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMMapping Viewset"""
  propertymappingsProviderScimCreate(input: ScimMappingRequestInput @source(name: "input", type: "SCIMMappingRequest_Input", subgraph: "Authentik")): PropertymappingsProviderScimCreateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/scim/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "propertymappings_provider_scim_create", type: "propertymappings_provider_scim_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMMapping Viewset"""
  propertymappingsProviderScimUpdate(
    """A UUID string identifying this SCIM Provider Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: ScimMappingRequestInput @source(name: "input", type: "SCIMMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsProviderScimUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/scim/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "propertymappings_provider_scim_update", type: "propertymappings_provider_scim_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMMapping Viewset"""
  propertymappingsProviderScimPartialUpdate(
    """A UUID string identifying this SCIM Provider Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedScimMappingRequestInput @source(name: "input", type: "PatchedSCIMMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsProviderScimPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/scim/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "propertymappings_provider_scim_partial_update", type: "propertymappings_provider_scim_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMMapping Viewset"""
  propertymappingsProviderScimDestroy(
    """A UUID string identifying this SCIM Provider Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsProviderScimDestroyResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/scim/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "propertymappings_provider_scim_destroy", type: "propertymappings_provider_scim_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """ScopeMapping Viewset"""
  propertymappingsProviderScopeCreate(input: ScopeMappingRequestInput @source(name: "input", type: "ScopeMappingRequest_Input", subgraph: "Authentik")): PropertymappingsProviderScopeCreateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/scope/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "propertymappings_provider_scope_create", type: "propertymappings_provider_scope_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """ScopeMapping Viewset"""
  propertymappingsProviderScopeUpdate(
    """A UUID string identifying this Scope Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: ScopeMappingRequestInput @source(name: "input", type: "ScopeMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsProviderScopeUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/scope/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "propertymappings_provider_scope_update", type: "propertymappings_provider_scope_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """ScopeMapping Viewset"""
  propertymappingsProviderScopePartialUpdate(
    """A UUID string identifying this Scope Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedScopeMappingRequestInput @source(name: "input", type: "PatchedScopeMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsProviderScopePartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/scope/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "propertymappings_provider_scope_partial_update", type: "propertymappings_provider_scope_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """ScopeMapping Viewset"""
  propertymappingsProviderScopeDestroy(
    """A UUID string identifying this Scope Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsProviderScopeDestroyResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/provider/scope/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "propertymappings_provider_scope_destroy", type: "propertymappings_provider_scope_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """KerberosSource PropertyMapping Viewset"""
  propertymappingsSourceKerberosCreate(input: KerberosSourcePropertyMappingRequestInput @source(name: "input", type: "KerberosSourcePropertyMappingRequest_Input", subgraph: "Authentik")): PropertymappingsSourceKerberosCreateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/kerberos/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "propertymappings_source_kerberos_create", type: "propertymappings_source_kerberos_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """KerberosSource PropertyMapping Viewset"""
  propertymappingsSourceKerberosUpdate(
    """A UUID string identifying this Kerberos Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: KerberosSourcePropertyMappingRequestInput @source(name: "input", type: "KerberosSourcePropertyMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsSourceKerberosUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/kerberos/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "propertymappings_source_kerberos_update", type: "propertymappings_source_kerberos_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """KerberosSource PropertyMapping Viewset"""
  propertymappingsSourceKerberosPartialUpdate(
    """A UUID string identifying this Kerberos Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedKerberosSourcePropertyMappingRequestInput @source(name: "input", type: "PatchedKerberosSourcePropertyMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsSourceKerberosPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/kerberos/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "propertymappings_source_kerberos_partial_update", type: "propertymappings_source_kerberos_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """KerberosSource PropertyMapping Viewset"""
  propertymappingsSourceKerberosDestroy(
    """A UUID string identifying this Kerberos Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsSourceKerberosDestroyResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/kerberos/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "propertymappings_source_kerberos_destroy", type: "propertymappings_source_kerberos_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """LDAP PropertyMapping Viewset"""
  propertymappingsSourceLdapCreate(input: LdapSourcePropertyMappingRequestInput @source(name: "input", type: "LDAPSourcePropertyMappingRequest_Input", subgraph: "Authentik")): PropertymappingsSourceLdapCreateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/ldap/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "propertymappings_source_ldap_create", type: "propertymappings_source_ldap_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """LDAP PropertyMapping Viewset"""
  propertymappingsSourceLdapUpdate(
    """A UUID string identifying this LDAP Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: LdapSourcePropertyMappingRequestInput @source(name: "input", type: "LDAPSourcePropertyMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsSourceLdapUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/ldap/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "propertymappings_source_ldap_update", type: "propertymappings_source_ldap_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """LDAP PropertyMapping Viewset"""
  propertymappingsSourceLdapPartialUpdate(
    """A UUID string identifying this LDAP Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedLdapSourcePropertyMappingRequestInput @source(name: "input", type: "PatchedLDAPSourcePropertyMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsSourceLdapPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/ldap/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "propertymappings_source_ldap_partial_update", type: "propertymappings_source_ldap_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """LDAP PropertyMapping Viewset"""
  propertymappingsSourceLdapDestroy(
    """A UUID string identifying this LDAP Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsSourceLdapDestroyResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/ldap/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "propertymappings_source_ldap_destroy", type: "propertymappings_source_ldap_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """OAuthSourcePropertyMapping Viewset"""
  propertymappingsSourceOauthCreate(input: OAuthSourcePropertyMappingRequestInput @source(name: "input", type: "OAuthSourcePropertyMappingRequest_Input", subgraph: "Authentik")): PropertymappingsSourceOauthCreateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/oauth/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "propertymappings_source_oauth_create", type: "propertymappings_source_oauth_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """OAuthSourcePropertyMapping Viewset"""
  propertymappingsSourceOauthUpdate(
    """A UUID string identifying this OAuth Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: OAuthSourcePropertyMappingRequestInput @source(name: "input", type: "OAuthSourcePropertyMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsSourceOauthUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/oauth/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "propertymappings_source_oauth_update", type: "propertymappings_source_oauth_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """OAuthSourcePropertyMapping Viewset"""
  propertymappingsSourceOauthPartialUpdate(
    """A UUID string identifying this OAuth Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedOAuthSourcePropertyMappingRequestInput @source(name: "input", type: "PatchedOAuthSourcePropertyMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsSourceOauthPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/oauth/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "propertymappings_source_oauth_partial_update", type: "propertymappings_source_oauth_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """OAuthSourcePropertyMapping Viewset"""
  propertymappingsSourceOauthDestroy(
    """A UUID string identifying this OAuth Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsSourceOauthDestroyResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/oauth/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "propertymappings_source_oauth_destroy", type: "propertymappings_source_oauth_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PlexSourcePropertyMapping Viewset"""
  propertymappingsSourcePlexCreate(input: PlexSourcePropertyMappingRequestInput @source(name: "input", type: "PlexSourcePropertyMappingRequest_Input", subgraph: "Authentik")): PropertymappingsSourcePlexCreateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/plex/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "propertymappings_source_plex_create", type: "propertymappings_source_plex_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PlexSourcePropertyMapping Viewset"""
  propertymappingsSourcePlexUpdate(
    """A UUID string identifying this Plex Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: PlexSourcePropertyMappingRequestInput @source(name: "input", type: "PlexSourcePropertyMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsSourcePlexUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/plex/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "propertymappings_source_plex_update", type: "propertymappings_source_plex_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PlexSourcePropertyMapping Viewset"""
  propertymappingsSourcePlexPartialUpdate(
    """A UUID string identifying this Plex Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedPlexSourcePropertyMappingRequestInput @source(name: "input", type: "PatchedPlexSourcePropertyMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsSourcePlexPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/plex/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "propertymappings_source_plex_partial_update", type: "propertymappings_source_plex_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PlexSourcePropertyMapping Viewset"""
  propertymappingsSourcePlexDestroy(
    """A UUID string identifying this Plex Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsSourcePlexDestroyResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/plex/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "propertymappings_source_plex_destroy", type: "propertymappings_source_plex_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SAMLSourcePropertyMapping Viewset"""
  propertymappingsSourceSamlCreate(input: SamlSourcePropertyMappingRequestInput @source(name: "input", type: "SAMLSourcePropertyMappingRequest_Input", subgraph: "Authentik")): PropertymappingsSourceSamlCreateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/saml/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "propertymappings_source_saml_create", type: "propertymappings_source_saml_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SAMLSourcePropertyMapping Viewset"""
  propertymappingsSourceSamlUpdate(
    """A UUID string identifying this SAML Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: SamlSourcePropertyMappingRequestInput @source(name: "input", type: "SAMLSourcePropertyMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsSourceSamlUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/saml/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "propertymappings_source_saml_update", type: "propertymappings_source_saml_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SAMLSourcePropertyMapping Viewset"""
  propertymappingsSourceSamlPartialUpdate(
    """A UUID string identifying this SAML Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedSamlSourcePropertyMappingRequestInput @source(name: "input", type: "PatchedSAMLSourcePropertyMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsSourceSamlPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/saml/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "propertymappings_source_saml_partial_update", type: "propertymappings_source_saml_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SAMLSourcePropertyMapping Viewset"""
  propertymappingsSourceSamlDestroy(
    """A UUID string identifying this SAML Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsSourceSamlDestroyResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/saml/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "propertymappings_source_saml_destroy", type: "propertymappings_source_saml_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMSourcePropertyMapping Viewset"""
  propertymappingsSourceScimCreate(input: ScimSourcePropertyMappingRequestInput @source(name: "input", type: "SCIMSourcePropertyMappingRequest_Input", subgraph: "Authentik")): PropertymappingsSourceScimCreateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/scim/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "propertymappings_source_scim_create", type: "propertymappings_source_scim_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMSourcePropertyMapping Viewset"""
  propertymappingsSourceScimUpdate(
    """A UUID string identifying this SCIM Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: ScimSourcePropertyMappingRequestInput @source(name: "input", type: "SCIMSourcePropertyMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsSourceScimUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/scim/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "propertymappings_source_scim_update", type: "propertymappings_source_scim_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMSourcePropertyMapping Viewset"""
  propertymappingsSourceScimPartialUpdate(
    """A UUID string identifying this SCIM Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedScimSourcePropertyMappingRequestInput @source(name: "input", type: "PatchedSCIMSourcePropertyMappingRequest_Input", subgraph: "Authentik")
  ): PropertymappingsSourceScimPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/scim/{args.pm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "propertymappings_source_scim_partial_update", type: "propertymappings_source_scim_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMSourcePropertyMapping Viewset"""
  propertymappingsSourceScimDestroy(
    """A UUID string identifying this SCIM Source Property Mapping."""
    pmUuid: UUID! @source(name: "pm_uuid", type: "UUID!", subgraph: "Authentik")
  ): PropertymappingsSourceScimDestroyResponse @httpOperation(subgraph: "Authentik", path: "/propertymappings/source/scim/{args.pm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "propertymappings_source_scim_destroy", type: "propertymappings_source_scim_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Provider Viewset"""
  providersAllDestroy(
    """A unique integer value identifying this provider."""
    id: Int!
  ): ProvidersAllDestroyResponse @httpOperation(subgraph: "Authentik", path: "/providers/all/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "providers_all_destroy", type: "providers_all_destroy_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """GoogleWorkspaceProvider Viewset"""
  providersGoogleWorkspaceCreate(input: GoogleWorkspaceProviderRequestInput @source(name: "input", type: "GoogleWorkspaceProviderRequest_Input", subgraph: "Authentik")): ProvidersGoogleWorkspaceCreateResponse @httpOperation(subgraph: "Authentik", path: "/providers/google_workspace/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "providers_google_workspace_create", type: "providers_google_workspace_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """GoogleWorkspaceProvider Viewset"""
  providersGoogleWorkspaceUpdate(
    """A unique integer value identifying this Google Workspace Provider."""
    id: Int!
    input: GoogleWorkspaceProviderRequestInput @source(name: "input", type: "GoogleWorkspaceProviderRequest_Input", subgraph: "Authentik")
  ): ProvidersGoogleWorkspaceUpdateResponse @httpOperation(subgraph: "Authentik", path: "/providers/google_workspace/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "providers_google_workspace_update", type: "providers_google_workspace_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """GoogleWorkspaceProvider Viewset"""
  providersGoogleWorkspacePartialUpdate(
    """A unique integer value identifying this Google Workspace Provider."""
    id: Int!
    input: PatchedGoogleWorkspaceProviderRequestInput @source(name: "input", type: "PatchedGoogleWorkspaceProviderRequest_Input", subgraph: "Authentik")
  ): ProvidersGoogleWorkspacePartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/providers/google_workspace/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "providers_google_workspace_partial_update", type: "providers_google_workspace_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """GoogleWorkspaceProvider Viewset"""
  providersGoogleWorkspaceDestroy(
    """A unique integer value identifying this Google Workspace Provider."""
    id: Int!
  ): ProvidersGoogleWorkspaceDestroyResponse @httpOperation(subgraph: "Authentik", path: "/providers/google_workspace/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "providers_google_workspace_destroy", type: "providers_google_workspace_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Sync/Re-sync a single user/group object"""
  providersGoogleWorkspaceSyncObjectCreate(
    """A unique integer value identifying this Google Workspace Provider."""
    id: Int!
    input: SyncObjectRequestInput @source(name: "input", type: "SyncObjectRequest_Input", subgraph: "Authentik")
  ): ProvidersGoogleWorkspaceSyncObjectCreateResponse @httpOperation(subgraph: "Authentik", path: "/providers/google_workspace/{args.id}/sync/object/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "providers_google_workspace_sync_object_create", type: "providers_google_workspace_sync_object_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """GoogleWorkspaceProviderGroup Viewset"""
  providersGoogleWorkspaceGroupsCreate(input: GoogleWorkspaceProviderGroupRequestInput @source(name: "input", type: "GoogleWorkspaceProviderGroupRequest_Input", subgraph: "Authentik")): ProvidersGoogleWorkspaceGroupsCreateResponse @httpOperation(subgraph: "Authentik", path: "/providers/google_workspace_groups/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "providers_google_workspace_groups_create", type: "providers_google_workspace_groups_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """GoogleWorkspaceProviderGroup Viewset"""
  providersGoogleWorkspaceGroupsDestroy(
    """A UUID string identifying this Google Workspace Provider Group."""
    id: UUID!
  ): ProvidersGoogleWorkspaceGroupsDestroyResponse @httpOperation(subgraph: "Authentik", path: "/providers/google_workspace_groups/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "providers_google_workspace_groups_destroy", type: "providers_google_workspace_groups_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """GoogleWorkspaceProviderUser Viewset"""
  providersGoogleWorkspaceUsersCreate(input: GoogleWorkspaceProviderUserRequestInput @source(name: "input", type: "GoogleWorkspaceProviderUserRequest_Input", subgraph: "Authentik")): ProvidersGoogleWorkspaceUsersCreateResponse @httpOperation(subgraph: "Authentik", path: "/providers/google_workspace_users/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "providers_google_workspace_users_create", type: "providers_google_workspace_users_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """GoogleWorkspaceProviderUser Viewset"""
  providersGoogleWorkspaceUsersDestroy(
    """A UUID string identifying this Google Workspace Provider User."""
    id: UUID!
  ): ProvidersGoogleWorkspaceUsersDestroyResponse @httpOperation(subgraph: "Authentik", path: "/providers/google_workspace_users/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "providers_google_workspace_users_destroy", type: "providers_google_workspace_users_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """LDAPProvider Viewset"""
  providersLdapCreate(input: LdapProviderRequestInput @source(name: "input", type: "LDAPProviderRequest_Input", subgraph: "Authentik")): ProvidersLdapCreateResponse @httpOperation(subgraph: "Authentik", path: "/providers/ldap/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "providers_ldap_create", type: "providers_ldap_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """LDAPProvider Viewset"""
  providersLdapUpdate(
    """A unique integer value identifying this LDAP Provider."""
    id: Int!
    input: LdapProviderRequestInput @source(name: "input", type: "LDAPProviderRequest_Input", subgraph: "Authentik")
  ): ProvidersLdapUpdateResponse @httpOperation(subgraph: "Authentik", path: "/providers/ldap/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "providers_ldap_update", type: "providers_ldap_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """LDAPProvider Viewset"""
  providersLdapPartialUpdate(
    """A unique integer value identifying this LDAP Provider."""
    id: Int!
    input: PatchedLdapProviderRequestInput @source(name: "input", type: "PatchedLDAPProviderRequest_Input", subgraph: "Authentik")
  ): ProvidersLdapPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/providers/ldap/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "providers_ldap_partial_update", type: "providers_ldap_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """LDAPProvider Viewset"""
  providersLdapDestroy(
    """A unique integer value identifying this LDAP Provider."""
    id: Int!
  ): ProvidersLdapDestroyResponse @httpOperation(subgraph: "Authentik", path: "/providers/ldap/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "providers_ldap_destroy", type: "providers_ldap_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """MicrosoftEntraProvider Viewset"""
  providersMicrosoftEntraCreate(input: MicrosoftEntraProviderRequestInput @source(name: "input", type: "MicrosoftEntraProviderRequest_Input", subgraph: "Authentik")): ProvidersMicrosoftEntraCreateResponse @httpOperation(subgraph: "Authentik", path: "/providers/microsoft_entra/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "providers_microsoft_entra_create", type: "providers_microsoft_entra_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """MicrosoftEntraProvider Viewset"""
  providersMicrosoftEntraUpdate(
    """A unique integer value identifying this Microsoft Entra Provider."""
    id: Int!
    input: MicrosoftEntraProviderRequestInput @source(name: "input", type: "MicrosoftEntraProviderRequest_Input", subgraph: "Authentik")
  ): ProvidersMicrosoftEntraUpdateResponse @httpOperation(subgraph: "Authentik", path: "/providers/microsoft_entra/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "providers_microsoft_entra_update", type: "providers_microsoft_entra_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """MicrosoftEntraProvider Viewset"""
  providersMicrosoftEntraPartialUpdate(
    """A unique integer value identifying this Microsoft Entra Provider."""
    id: Int!
    input: PatchedMicrosoftEntraProviderRequestInput @source(name: "input", type: "PatchedMicrosoftEntraProviderRequest_Input", subgraph: "Authentik")
  ): ProvidersMicrosoftEntraPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/providers/microsoft_entra/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "providers_microsoft_entra_partial_update", type: "providers_microsoft_entra_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """MicrosoftEntraProvider Viewset"""
  providersMicrosoftEntraDestroy(
    """A unique integer value identifying this Microsoft Entra Provider."""
    id: Int!
  ): ProvidersMicrosoftEntraDestroyResponse @httpOperation(subgraph: "Authentik", path: "/providers/microsoft_entra/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "providers_microsoft_entra_destroy", type: "providers_microsoft_entra_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Sync/Re-sync a single user/group object"""
  providersMicrosoftEntraSyncObjectCreate(
    """A unique integer value identifying this Microsoft Entra Provider."""
    id: Int!
    input: SyncObjectRequestInput @source(name: "input", type: "SyncObjectRequest_Input", subgraph: "Authentik")
  ): ProvidersMicrosoftEntraSyncObjectCreateResponse @httpOperation(subgraph: "Authentik", path: "/providers/microsoft_entra/{args.id}/sync/object/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "providers_microsoft_entra_sync_object_create", type: "providers_microsoft_entra_sync_object_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """MicrosoftEntraProviderGroup Viewset"""
  providersMicrosoftEntraGroupsCreate(input: MicrosoftEntraProviderGroupRequestInput @source(name: "input", type: "MicrosoftEntraProviderGroupRequest_Input", subgraph: "Authentik")): ProvidersMicrosoftEntraGroupsCreateResponse @httpOperation(subgraph: "Authentik", path: "/providers/microsoft_entra_groups/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "providers_microsoft_entra_groups_create", type: "providers_microsoft_entra_groups_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """MicrosoftEntraProviderGroup Viewset"""
  providersMicrosoftEntraGroupsDestroy(
    """A UUID string identifying this Microsoft Entra Provider Group."""
    id: UUID!
  ): ProvidersMicrosoftEntraGroupsDestroyResponse @httpOperation(subgraph: "Authentik", path: "/providers/microsoft_entra_groups/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "providers_microsoft_entra_groups_destroy", type: "providers_microsoft_entra_groups_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """MicrosoftEntraProviderUser Viewset"""
  providersMicrosoftEntraUsersCreate(input: MicrosoftEntraProviderUserRequestInput @source(name: "input", type: "MicrosoftEntraProviderUserRequest_Input", subgraph: "Authentik")): ProvidersMicrosoftEntraUsersCreateResponse @httpOperation(subgraph: "Authentik", path: "/providers/microsoft_entra_users/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "providers_microsoft_entra_users_create", type: "providers_microsoft_entra_users_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """MicrosoftEntraProviderUser Viewset"""
  providersMicrosoftEntraUsersDestroy(
    """A UUID string identifying this Microsoft Entra Provider User."""
    id: UUID!
  ): ProvidersMicrosoftEntraUsersDestroyResponse @httpOperation(subgraph: "Authentik", path: "/providers/microsoft_entra_users/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "providers_microsoft_entra_users_destroy", type: "providers_microsoft_entra_users_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """OAuth2Provider Viewset"""
  providersOauth2Create(input: OAuth2ProviderRequestInput @source(name: "input", type: "OAuth2ProviderRequest_Input", subgraph: "Authentik")): ProvidersOauth2CreateResponse @httpOperation(subgraph: "Authentik", path: "/providers/oauth2/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "providers_oauth2_create", type: "providers_oauth2_create_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """OAuth2Provider Viewset"""
  providersOauth2Update(
    """A unique integer value identifying this OAuth2/OpenID Provider."""
    id: Int!
    input: OAuth2ProviderRequestInput @source(name: "input", type: "OAuth2ProviderRequest_Input", subgraph: "Authentik")
  ): ProvidersOauth2UpdateResponse @httpOperation(subgraph: "Authentik", path: "/providers/oauth2/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "providers_oauth2_update", type: "providers_oauth2_update_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """OAuth2Provider Viewset"""
  providersOauth2PartialUpdate(
    """A unique integer value identifying this OAuth2/OpenID Provider."""
    id: Int!
    input: PatchedOAuth2ProviderRequestInput @source(name: "input", type: "PatchedOAuth2ProviderRequest_Input", subgraph: "Authentik")
  ): ProvidersOauth2PartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/providers/oauth2/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "providers_oauth2_partial_update", type: "providers_oauth2_partial_update_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """OAuth2Provider Viewset"""
  providersOauth2Destroy(
    """A unique integer value identifying this OAuth2/OpenID Provider."""
    id: Int!
  ): ProvidersOauth2DestroyResponse @httpOperation(subgraph: "Authentik", path: "/providers/oauth2/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "providers_oauth2_destroy", type: "providers_oauth2_destroy_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """ProxyProvider Viewset"""
  providersProxyCreate(input: ProxyProviderRequestInput @source(name: "input", type: "ProxyProviderRequest_Input", subgraph: "Authentik")): ProvidersProxyCreateResponse @httpOperation(subgraph: "Authentik", path: "/providers/proxy/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "providers_proxy_create", type: "providers_proxy_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """ProxyProvider Viewset"""
  providersProxyUpdate(
    """A unique integer value identifying this Proxy Provider."""
    id: Int!
    input: ProxyProviderRequestInput @source(name: "input", type: "ProxyProviderRequest_Input", subgraph: "Authentik")
  ): ProvidersProxyUpdateResponse @httpOperation(subgraph: "Authentik", path: "/providers/proxy/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "providers_proxy_update", type: "providers_proxy_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """ProxyProvider Viewset"""
  providersProxyPartialUpdate(
    """A unique integer value identifying this Proxy Provider."""
    id: Int!
    input: PatchedProxyProviderRequestInput @source(name: "input", type: "PatchedProxyProviderRequest_Input", subgraph: "Authentik")
  ): ProvidersProxyPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/providers/proxy/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "providers_proxy_partial_update", type: "providers_proxy_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """ProxyProvider Viewset"""
  providersProxyDestroy(
    """A unique integer value identifying this Proxy Provider."""
    id: Int!
  ): ProvidersProxyDestroyResponse @httpOperation(subgraph: "Authentik", path: "/providers/proxy/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "providers_proxy_destroy", type: "providers_proxy_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RACProvider Viewset"""
  providersRacCreate(input: RacProviderRequestInput @source(name: "input", type: "RACProviderRequest_Input", subgraph: "Authentik")): ProvidersRacCreateResponse @httpOperation(subgraph: "Authentik", path: "/providers/rac/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "providers_rac_create", type: "providers_rac_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RACProvider Viewset"""
  providersRacUpdate(
    """A unique integer value identifying this RAC Provider."""
    id: Int!
    input: RacProviderRequestInput @source(name: "input", type: "RACProviderRequest_Input", subgraph: "Authentik")
  ): ProvidersRacUpdateResponse @httpOperation(subgraph: "Authentik", path: "/providers/rac/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "providers_rac_update", type: "providers_rac_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RACProvider Viewset"""
  providersRacPartialUpdate(
    """A unique integer value identifying this RAC Provider."""
    id: Int!
    input: PatchedRacProviderRequestInput @source(name: "input", type: "PatchedRACProviderRequest_Input", subgraph: "Authentik")
  ): ProvidersRacPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/providers/rac/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "providers_rac_partial_update", type: "providers_rac_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RACProvider Viewset"""
  providersRacDestroy(
    """A unique integer value identifying this RAC Provider."""
    id: Int!
  ): ProvidersRacDestroyResponse @httpOperation(subgraph: "Authentik", path: "/providers/rac/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "providers_rac_destroy", type: "providers_rac_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RadiusProvider Viewset"""
  providersRadiusCreate(input: RadiusProviderRequestInput @source(name: "input", type: "RadiusProviderRequest_Input", subgraph: "Authentik")): ProvidersRadiusCreateResponse @httpOperation(subgraph: "Authentik", path: "/providers/radius/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "providers_radius_create", type: "providers_radius_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RadiusProvider Viewset"""
  providersRadiusUpdate(
    """A unique integer value identifying this Radius Provider."""
    id: Int!
    input: RadiusProviderRequestInput @source(name: "input", type: "RadiusProviderRequest_Input", subgraph: "Authentik")
  ): ProvidersRadiusUpdateResponse @httpOperation(subgraph: "Authentik", path: "/providers/radius/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "providers_radius_update", type: "providers_radius_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RadiusProvider Viewset"""
  providersRadiusPartialUpdate(
    """A unique integer value identifying this Radius Provider."""
    id: Int!
    input: PatchedRadiusProviderRequestInput @source(name: "input", type: "PatchedRadiusProviderRequest_Input", subgraph: "Authentik")
  ): ProvidersRadiusPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/providers/radius/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "providers_radius_partial_update", type: "providers_radius_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """RadiusProvider Viewset"""
  providersRadiusDestroy(
    """A unique integer value identifying this Radius Provider."""
    id: Int!
  ): ProvidersRadiusDestroyResponse @httpOperation(subgraph: "Authentik", path: "/providers/radius/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "providers_radius_destroy", type: "providers_radius_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SAMLProvider Viewset"""
  providersSamlCreate(input: SamlProviderRequestInput @source(name: "input", type: "SAMLProviderRequest_Input", subgraph: "Authentik")): ProvidersSamlCreateResponse @httpOperation(subgraph: "Authentik", path: "/providers/saml/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "providers_saml_create", type: "providers_saml_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SAMLProvider Viewset"""
  providersSamlUpdate(
    """A unique integer value identifying this SAML Provider."""
    id: Int!
    input: SamlProviderRequestInput @source(name: "input", type: "SAMLProviderRequest_Input", subgraph: "Authentik")
  ): ProvidersSamlUpdateResponse @httpOperation(subgraph: "Authentik", path: "/providers/saml/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "providers_saml_update", type: "providers_saml_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SAMLProvider Viewset"""
  providersSamlPartialUpdate(
    """A unique integer value identifying this SAML Provider."""
    id: Int!
    input: PatchedSamlProviderRequestInput @source(name: "input", type: "PatchedSAMLProviderRequest_Input", subgraph: "Authentik")
  ): ProvidersSamlPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/providers/saml/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "providers_saml_partial_update", type: "providers_saml_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SAMLProvider Viewset"""
  providersSamlDestroy(
    """A unique integer value identifying this SAML Provider."""
    id: Int!
  ): ProvidersSamlDestroyResponse @httpOperation(subgraph: "Authentik", path: "/providers/saml/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "providers_saml_destroy", type: "providers_saml_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Create provider from SAML Metadata"""
  providersSamlImportMetadataCreate(input: SamlProviderImportRequestInput @source(name: "input", type: "SAMLProviderImportRequest_Input", subgraph: "Authentik")): ProvidersSamlImportMetadataCreateResponse @httpOperation(subgraph: "Authentik", path: "/providers/saml/import_metadata/", operationSpecificHeaders: [["Content-Type", "multipart/form-data"], ["accept", "application/json"]], httpMethod: POST) @source(name: "providers_saml_import_metadata_create", type: "providers_saml_import_metadata_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMProvider Viewset"""
  providersScimCreate(input: ScimProviderRequestInput @source(name: "input", type: "SCIMProviderRequest_Input", subgraph: "Authentik")): ProvidersScimCreateResponse @httpOperation(subgraph: "Authentik", path: "/providers/scim/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "providers_scim_create", type: "providers_scim_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMProvider Viewset"""
  providersScimUpdate(
    """A unique integer value identifying this SCIM Provider."""
    id: Int!
    input: ScimProviderRequestInput @source(name: "input", type: "SCIMProviderRequest_Input", subgraph: "Authentik")
  ): ProvidersScimUpdateResponse @httpOperation(subgraph: "Authentik", path: "/providers/scim/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "providers_scim_update", type: "providers_scim_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMProvider Viewset"""
  providersScimPartialUpdate(
    """A unique integer value identifying this SCIM Provider."""
    id: Int!
    input: PatchedScimProviderRequestInput @source(name: "input", type: "PatchedSCIMProviderRequest_Input", subgraph: "Authentik")
  ): ProvidersScimPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/providers/scim/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "providers_scim_partial_update", type: "providers_scim_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMProvider Viewset"""
  providersScimDestroy(
    """A unique integer value identifying this SCIM Provider."""
    id: Int!
  ): ProvidersScimDestroyResponse @httpOperation(subgraph: "Authentik", path: "/providers/scim/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "providers_scim_destroy", type: "providers_scim_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Sync/Re-sync a single user/group object"""
  providersScimSyncObjectCreate(
    """A unique integer value identifying this SCIM Provider."""
    id: Int!
    input: SyncObjectRequestInput @source(name: "input", type: "SyncObjectRequest_Input", subgraph: "Authentik")
  ): ProvidersScimSyncObjectCreateResponse @httpOperation(subgraph: "Authentik", path: "/providers/scim/{args.id}/sync/object/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "providers_scim_sync_object_create", type: "providers_scim_sync_object_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMProviderGroup Viewset"""
  providersScimGroupsCreate(input: ScimProviderGroupRequestInput @source(name: "input", type: "SCIMProviderGroupRequest_Input", subgraph: "Authentik")): ProvidersScimGroupsCreateResponse @httpOperation(subgraph: "Authentik", path: "/providers/scim_groups/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "providers_scim_groups_create", type: "providers_scim_groups_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMProviderGroup Viewset"""
  providersScimGroupsDestroy(
    """A UUID string identifying this scim provider group."""
    id: UUID!
  ): ProvidersScimGroupsDestroyResponse @httpOperation(subgraph: "Authentik", path: "/providers/scim_groups/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "providers_scim_groups_destroy", type: "providers_scim_groups_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMProviderUser Viewset"""
  providersScimUsersCreate(input: ScimProviderUserRequestInput @source(name: "input", type: "SCIMProviderUserRequest_Input", subgraph: "Authentik")): ProvidersScimUsersCreateResponse @httpOperation(subgraph: "Authentik", path: "/providers/scim_users/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "providers_scim_users_create", type: "providers_scim_users_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMProviderUser Viewset"""
  providersScimUsersDestroy(
    """A UUID string identifying this scim provider user."""
    id: UUID!
  ): ProvidersScimUsersDestroyResponse @httpOperation(subgraph: "Authentik", path: "/providers/scim_users/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "providers_scim_users_destroy", type: "providers_scim_users_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """ConnectionToken Viewset"""
  racConnectionTokensUpdate(
    """A UUID string identifying this RAC Connection token."""
    connectionTokenUuid: UUID! @source(name: "connection_token_uuid", type: "UUID!", subgraph: "Authentik")
    input: ConnectionTokenRequestInput @source(name: "input", type: "ConnectionTokenRequest_Input", subgraph: "Authentik")
  ): RacConnectionTokensUpdateResponse @httpOperation(subgraph: "Authentik", path: "/rac/connection_tokens/{args.connection_token_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "rac_connection_tokens_update", type: "rac_connection_tokens_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """ConnectionToken Viewset"""
  racConnectionTokensPartialUpdate(
    """A UUID string identifying this RAC Connection token."""
    connectionTokenUuid: UUID! @source(name: "connection_token_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedConnectionTokenRequestInput @source(name: "input", type: "PatchedConnectionTokenRequest_Input", subgraph: "Authentik")
  ): RacConnectionTokensPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/rac/connection_tokens/{args.connection_token_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "rac_connection_tokens_partial_update", type: "rac_connection_tokens_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """ConnectionToken Viewset"""
  racConnectionTokensDestroy(
    """A UUID string identifying this RAC Connection token."""
    connectionTokenUuid: UUID! @source(name: "connection_token_uuid", type: "UUID!", subgraph: "Authentik")
  ): RacConnectionTokensDestroyResponse @httpOperation(subgraph: "Authentik", path: "/rac/connection_tokens/{args.connection_token_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "rac_connection_tokens_destroy", type: "rac_connection_tokens_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Endpoint Viewset"""
  racEndpointsCreate(input: EndpointRequestInput @source(name: "input", type: "EndpointRequest_Input", subgraph: "Authentik")): RacEndpointsCreateResponse @httpOperation(subgraph: "Authentik", path: "/rac/endpoints/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "rac_endpoints_create", type: "rac_endpoints_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Endpoint Viewset"""
  racEndpointsUpdate(
    """A UUID string identifying this RAC Endpoint."""
    pbmUuid: UUID! @source(name: "pbm_uuid", type: "UUID!", subgraph: "Authentik")
    input: EndpointRequestInput @source(name: "input", type: "EndpointRequest_Input", subgraph: "Authentik")
  ): RacEndpointsUpdateResponse @httpOperation(subgraph: "Authentik", path: "/rac/endpoints/{args.pbm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "rac_endpoints_update", type: "rac_endpoints_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Endpoint Viewset"""
  racEndpointsPartialUpdate(
    """A UUID string identifying this RAC Endpoint."""
    pbmUuid: UUID! @source(name: "pbm_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedEndpointRequestInput @source(name: "input", type: "PatchedEndpointRequest_Input", subgraph: "Authentik")
  ): RacEndpointsPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/rac/endpoints/{args.pbm_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "rac_endpoints_partial_update", type: "rac_endpoints_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Endpoint Viewset"""
  racEndpointsDestroy(
    """A UUID string identifying this RAC Endpoint."""
    pbmUuid: UUID! @source(name: "pbm_uuid", type: "UUID!", subgraph: "Authentik")
  ): RacEndpointsDestroyResponse @httpOperation(subgraph: "Authentik", path: "/rac/endpoints/{args.pbm_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "rac_endpoints_destroy", type: "rac_endpoints_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """
  Assign permission(s) to role. When `object_pk` is set, the permissions
  are only assigned to the specific object, otherwise they are assigned globally.
  """
  rbacPermissionsAssignedByRolesAssign(
    """A UUID string identifying this Role."""
    uuid: UUID!
    input: PermissionAssignRequestInput @source(name: "input", type: "PermissionAssignRequest_Input", subgraph: "Authentik")
  ): [RbacPermissionsAssignedByRolesAssignResponse] @httpOperation(subgraph: "Authentik", path: "/rbac/permissions/assigned_by_roles/{args.uuid}/assign/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "rbac_permissions_assigned_by_roles_assign", type: "[rbac_permissions_assigned_by_roles_assign_response]", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """
  Unassign permission(s) to role. When `object_pk` is set, the permissions
  are only assigned to the specific object, otherwise they are assigned globally.
  """
  rbacPermissionsAssignedByRolesUnassignPartialUpdate(
    """A UUID string identifying this Role."""
    uuid: UUID!
    input: PatchedPermissionAssignRequestInput @source(name: "input", type: "PatchedPermissionAssignRequest_Input", subgraph: "Authentik")
  ): RbacPermissionsAssignedByRolesUnassignPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/rbac/permissions/assigned_by_roles/{args.uuid}/unassign/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "rbac_permissions_assigned_by_roles_unassign_partial_update", type: "rbac_permissions_assigned_by_roles_unassign_partial_update_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Assign permission(s) to user"""
  rbacPermissionsAssignedByUsersAssign(
    """A unique integer value identifying this User."""
    id: Int!
    input: PermissionAssignRequestInput @source(name: "input", type: "PermissionAssignRequest_Input", subgraph: "Authentik")
  ): [RbacPermissionsAssignedByUsersAssignResponse] @httpOperation(subgraph: "Authentik", path: "/rbac/permissions/assigned_by_users/{args.id}/assign/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "rbac_permissions_assigned_by_users_assign", type: "[rbac_permissions_assigned_by_users_assign_response]", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """
  Unassign permission(s) to user. When `object_pk` is set, the permissions
  are only assigned to the specific object, otherwise they are assigned globally.
  """
  rbacPermissionsAssignedByUsersUnassignPartialUpdate(
    """A unique integer value identifying this User."""
    id: Int!
    input: PatchedPermissionAssignRequestInput @source(name: "input", type: "PatchedPermissionAssignRequest_Input", subgraph: "Authentik")
  ): RbacPermissionsAssignedByUsersUnassignPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/rbac/permissions/assigned_by_users/{args.id}/unassign/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "rbac_permissions_assigned_by_users_unassign_partial_update", type: "rbac_permissions_assigned_by_users_unassign_partial_update_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get a role's assigned object permissions"""
  rbacPermissionsRolesUpdate(
    """A unique integer value identifying this group object permission."""
    id: Int!
    input: ExtraRoleObjectPermissionRequestInput @source(name: "input", type: "ExtraRoleObjectPermissionRequest_Input", subgraph: "Authentik")
  ): RbacPermissionsRolesUpdateResponse @httpOperation(subgraph: "Authentik", path: "/rbac/permissions/roles/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "rbac_permissions_roles_update", type: "rbac_permissions_roles_update_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get a role's assigned object permissions"""
  rbacPermissionsRolesPartialUpdate(
    """A unique integer value identifying this group object permission."""
    id: Int!
    input: PatchedExtraRoleObjectPermissionRequestInput @source(name: "input", type: "PatchedExtraRoleObjectPermissionRequest_Input", subgraph: "Authentik")
  ): RbacPermissionsRolesPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/rbac/permissions/roles/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "rbac_permissions_roles_partial_update", type: "rbac_permissions_roles_partial_update_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get a role's assigned object permissions"""
  rbacPermissionsRolesDestroy(
    """A unique integer value identifying this group object permission."""
    id: Int!
  ): RbacPermissionsRolesDestroyResponse @httpOperation(subgraph: "Authentik", path: "/rbac/permissions/roles/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "rbac_permissions_roles_destroy", type: "rbac_permissions_roles_destroy_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get a users's assigned object permissions"""
  rbacPermissionsUsersUpdate(
    """A unique integer value identifying this user object permission."""
    id: Int!
    input: ExtraUserObjectPermissionRequestInput @source(name: "input", type: "ExtraUserObjectPermissionRequest_Input", subgraph: "Authentik")
  ): RbacPermissionsUsersUpdateResponse @httpOperation(subgraph: "Authentik", path: "/rbac/permissions/users/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "rbac_permissions_users_update", type: "rbac_permissions_users_update_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get a users's assigned object permissions"""
  rbacPermissionsUsersPartialUpdate(
    """A unique integer value identifying this user object permission."""
    id: Int!
    input: PatchedExtraUserObjectPermissionRequestInput @source(name: "input", type: "PatchedExtraUserObjectPermissionRequest_Input", subgraph: "Authentik")
  ): RbacPermissionsUsersPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/rbac/permissions/users/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "rbac_permissions_users_partial_update", type: "rbac_permissions_users_partial_update_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Get a users's assigned object permissions"""
  rbacPermissionsUsersDestroy(
    """A unique integer value identifying this user object permission."""
    id: Int!
  ): RbacPermissionsUsersDestroyResponse @httpOperation(subgraph: "Authentik", path: "/rbac/permissions/users/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "rbac_permissions_users_destroy", type: "rbac_permissions_users_destroy_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Role viewset"""
  rbacRolesCreate(input: RoleRequestInput @source(name: "input", type: "RoleRequest_Input", subgraph: "Authentik")): RbacRolesCreateResponse @httpOperation(subgraph: "Authentik", path: "/rbac/roles/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "rbac_roles_create", type: "rbac_roles_create_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Role viewset"""
  rbacRolesUpdate(
    """A UUID string identifying this Role."""
    uuid: UUID!
    input: RoleRequestInput @source(name: "input", type: "RoleRequest_Input", subgraph: "Authentik")
  ): RbacRolesUpdateResponse @httpOperation(subgraph: "Authentik", path: "/rbac/roles/{args.uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "rbac_roles_update", type: "rbac_roles_update_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Role viewset"""
  rbacRolesPartialUpdate(
    """A UUID string identifying this Role."""
    uuid: UUID!
    input: PatchedRoleRequestInput @source(name: "input", type: "PatchedRoleRequest_Input", subgraph: "Authentik")
  ): RbacRolesPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/rbac/roles/{args.uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "rbac_roles_partial_update", type: "rbac_roles_partial_update_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Role viewset"""
  rbacRolesDestroy(
    """A UUID string identifying this Role."""
    uuid: UUID!
  ): RbacRolesDestroyResponse @httpOperation(subgraph: "Authentik", path: "/rbac/roles/{args.uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "rbac_roles_destroy", type: "rbac_roles_destroy_response", subgraph: "Authentik") @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesAllDestroy(
    """Internal source name, used in URLs."""
    slug: String!
  ): SourcesAllDestroyResponse @httpOperation(subgraph: "Authentik", path: "/sources/all/{args.slug}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "sources_all_destroy", type: "sources_all_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Set source icon"""
  sourcesAllSetIconCreate(
    """Internal source name, used in URLs."""
    slug: String!
    input: FileUploadRequestInput @source(name: "input", type: "FileUploadRequest_Input", subgraph: "Authentik")
  ): GenericError @httpOperation(subgraph: "Authentik", path: "/sources/all/{args.slug}/set_icon/", operationSpecificHeaders: [["Content-Type", "multipart/form-data"], ["accept", "application/json"]], httpMethod: POST) @source(name: "sources_all_set_icon_create", type: "GenericError", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Set source icon (as URL)"""
  sourcesAllSetIconUrlCreate(
    """Internal source name, used in URLs."""
    slug: String!
    input: FilePathRequestInput @source(name: "input", type: "FilePathRequest_Input", subgraph: "Authentik")
  ): GenericError @httpOperation(subgraph: "Authentik", path: "/sources/all/{args.slug}/set_icon_url/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "sources_all_set_icon_url_create", type: "GenericError", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Group-source connection Viewset"""
  sourcesGroupConnectionsKerberosUpdate(
    """
    A unique integer value identifying this Group Kerberos Source Connection.
    """
    id: Int!
  ): SourcesGroupConnectionsKerberosUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/kerberos/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: PUT) @source(name: "sources_group_connections_kerberos_update", type: "sources_group_connections_kerberos_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Group-source connection Viewset"""
  sourcesGroupConnectionsKerberosPartialUpdate(
    """
    A unique integer value identifying this Group Kerberos Source Connection.
    """
    id: Int!
  ): SourcesGroupConnectionsKerberosPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/kerberos/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: PATCH) @source(name: "sources_group_connections_kerberos_partial_update", type: "sources_group_connections_kerberos_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Group-source connection Viewset"""
  sourcesGroupConnectionsKerberosDestroy(
    """
    A unique integer value identifying this Group Kerberos Source Connection.
    """
    id: Int!
  ): SourcesGroupConnectionsKerberosDestroyResponse @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/kerberos/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "sources_group_connections_kerberos_destroy", type: "sources_group_connections_kerberos_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Group-source connection Viewset"""
  sourcesGroupConnectionsOauthCreate: SourcesGroupConnectionsOauthCreateResponse @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/oauth/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: POST) @source(name: "sources_group_connections_oauth_create", type: "sources_group_connections_oauth_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Group-source connection Viewset"""
  sourcesGroupConnectionsOauthUpdate(
    """A unique integer value identifying this Group OAuth Source Connection."""
    id: Int!
  ): SourcesGroupConnectionsOauthUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/oauth/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: PUT) @source(name: "sources_group_connections_oauth_update", type: "sources_group_connections_oauth_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Group-source connection Viewset"""
  sourcesGroupConnectionsOauthPartialUpdate(
    """A unique integer value identifying this Group OAuth Source Connection."""
    id: Int!
  ): SourcesGroupConnectionsOauthPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/oauth/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: PATCH) @source(name: "sources_group_connections_oauth_partial_update", type: "sources_group_connections_oauth_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Group-source connection Viewset"""
  sourcesGroupConnectionsOauthDestroy(
    """A unique integer value identifying this Group OAuth Source Connection."""
    id: Int!
  ): SourcesGroupConnectionsOauthDestroyResponse @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/oauth/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "sources_group_connections_oauth_destroy", type: "sources_group_connections_oauth_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Group-source connection Viewset"""
  sourcesGroupConnectionsPlexCreate: SourcesGroupConnectionsPlexCreateResponse @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/plex/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: POST) @source(name: "sources_group_connections_plex_create", type: "sources_group_connections_plex_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Group-source connection Viewset"""
  sourcesGroupConnectionsPlexUpdate(
    """A unique integer value identifying this Group Plex Source Connection."""
    id: Int!
  ): SourcesGroupConnectionsPlexUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/plex/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: PUT) @source(name: "sources_group_connections_plex_update", type: "sources_group_connections_plex_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Group-source connection Viewset"""
  sourcesGroupConnectionsPlexPartialUpdate(
    """A unique integer value identifying this Group Plex Source Connection."""
    id: Int!
  ): SourcesGroupConnectionsPlexPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/plex/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: PATCH) @source(name: "sources_group_connections_plex_partial_update", type: "sources_group_connections_plex_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Group-source connection Viewset"""
  sourcesGroupConnectionsPlexDestroy(
    """A unique integer value identifying this Group Plex Source Connection."""
    id: Int!
  ): SourcesGroupConnectionsPlexDestroyResponse @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/plex/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "sources_group_connections_plex_destroy", type: "sources_group_connections_plex_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Group-source connection Viewset"""
  sourcesGroupConnectionsSamlUpdate(
    """A unique integer value identifying this Group SAML Source Connection."""
    id: Int!
  ): SourcesGroupConnectionsSamlUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/saml/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: PUT) @source(name: "sources_group_connections_saml_update", type: "sources_group_connections_saml_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Group-source connection Viewset"""
  sourcesGroupConnectionsSamlPartialUpdate(
    """A unique integer value identifying this Group SAML Source Connection."""
    id: Int!
  ): SourcesGroupConnectionsSamlPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/saml/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: PATCH) @source(name: "sources_group_connections_saml_partial_update", type: "sources_group_connections_saml_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Group-source connection Viewset"""
  sourcesGroupConnectionsSamlDestroy(
    """A unique integer value identifying this Group SAML Source Connection."""
    id: Int!
  ): SourcesGroupConnectionsSamlDestroyResponse @httpOperation(subgraph: "Authentik", path: "/sources/group_connections/saml/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "sources_group_connections_saml_destroy", type: "sources_group_connections_saml_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Kerberos Source Viewset"""
  sourcesKerberosCreate(input: KerberosSourceRequestInput @source(name: "input", type: "KerberosSourceRequest_Input", subgraph: "Authentik")): SourcesKerberosCreateResponse @httpOperation(subgraph: "Authentik", path: "/sources/kerberos/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "sources_kerberos_create", type: "sources_kerberos_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Kerberos Source Viewset"""
  sourcesKerberosUpdate(
    """Internal source name, used in URLs."""
    slug: String!
    input: KerberosSourceRequestInput @source(name: "input", type: "KerberosSourceRequest_Input", subgraph: "Authentik")
  ): SourcesKerberosUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/kerberos/{args.slug}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "sources_kerberos_update", type: "sources_kerberos_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Kerberos Source Viewset"""
  sourcesKerberosPartialUpdate(
    """Internal source name, used in URLs."""
    slug: String!
    input: PatchedKerberosSourceRequestInput @source(name: "input", type: "PatchedKerberosSourceRequest_Input", subgraph: "Authentik")
  ): SourcesKerberosPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/kerberos/{args.slug}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "sources_kerberos_partial_update", type: "sources_kerberos_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Kerberos Source Viewset"""
  sourcesKerberosDestroy(
    """Internal source name, used in URLs."""
    slug: String!
  ): SourcesKerberosDestroyResponse @httpOperation(subgraph: "Authentik", path: "/sources/kerberos/{args.slug}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "sources_kerberos_destroy", type: "sources_kerberos_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """LDAP Source Viewset"""
  sourcesLdapCreate(input: LdapSourceRequestInput @source(name: "input", type: "LDAPSourceRequest_Input", subgraph: "Authentik")): SourcesLdapCreateResponse @httpOperation(subgraph: "Authentik", path: "/sources/ldap/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "sources_ldap_create", type: "sources_ldap_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """LDAP Source Viewset"""
  sourcesLdapUpdate(
    """Internal source name, used in URLs."""
    slug: String!
    input: LdapSourceRequestInput @source(name: "input", type: "LDAPSourceRequest_Input", subgraph: "Authentik")
  ): SourcesLdapUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/ldap/{args.slug}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "sources_ldap_update", type: "sources_ldap_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """LDAP Source Viewset"""
  sourcesLdapPartialUpdate(
    """Internal source name, used in URLs."""
    slug: String!
    input: PatchedLdapSourceRequestInput @source(name: "input", type: "PatchedLDAPSourceRequest_Input", subgraph: "Authentik")
  ): SourcesLdapPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/ldap/{args.slug}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "sources_ldap_partial_update", type: "sources_ldap_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """LDAP Source Viewset"""
  sourcesLdapDestroy(
    """Internal source name, used in URLs."""
    slug: String!
  ): SourcesLdapDestroyResponse @httpOperation(subgraph: "Authentik", path: "/sources/ldap/{args.slug}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "sources_ldap_destroy", type: "sources_ldap_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesOauthCreate(input: OAuthSourceRequestInput @source(name: "input", type: "OAuthSourceRequest_Input", subgraph: "Authentik")): SourcesOauthCreateResponse @httpOperation(subgraph: "Authentik", path: "/sources/oauth/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "sources_oauth_create", type: "sources_oauth_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesOauthUpdate(
    """Internal source name, used in URLs."""
    slug: String!
    input: OAuthSourceRequestInput @source(name: "input", type: "OAuthSourceRequest_Input", subgraph: "Authentik")
  ): SourcesOauthUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/oauth/{args.slug}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "sources_oauth_update", type: "sources_oauth_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesOauthPartialUpdate(
    """Internal source name, used in URLs."""
    slug: String!
    input: PatchedOAuthSourceRequestInput @source(name: "input", type: "PatchedOAuthSourceRequest_Input", subgraph: "Authentik")
  ): SourcesOauthPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/oauth/{args.slug}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "sources_oauth_partial_update", type: "sources_oauth_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesOauthDestroy(
    """Internal source name, used in URLs."""
    slug: String!
  ): SourcesOauthDestroyResponse @httpOperation(subgraph: "Authentik", path: "/sources/oauth/{args.slug}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "sources_oauth_destroy", type: "sources_oauth_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Plex source Viewset"""
  sourcesPlexCreate(input: PlexSourceRequestInput @source(name: "input", type: "PlexSourceRequest_Input", subgraph: "Authentik")): SourcesPlexCreateResponse @httpOperation(subgraph: "Authentik", path: "/sources/plex/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "sources_plex_create", type: "sources_plex_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Plex source Viewset"""
  sourcesPlexUpdate(
    """Internal source name, used in URLs."""
    slug: String!
    input: PlexSourceRequestInput @source(name: "input", type: "PlexSourceRequest_Input", subgraph: "Authentik")
  ): SourcesPlexUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/plex/{args.slug}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "sources_plex_update", type: "sources_plex_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Plex source Viewset"""
  sourcesPlexPartialUpdate(
    """Internal source name, used in URLs."""
    slug: String!
    input: PatchedPlexSourceRequestInput @source(name: "input", type: "PatchedPlexSourceRequest_Input", subgraph: "Authentik")
  ): SourcesPlexPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/plex/{args.slug}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "sources_plex_partial_update", type: "sources_plex_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Plex source Viewset"""
  sourcesPlexDestroy(
    """Internal source name, used in URLs."""
    slug: String!
  ): SourcesPlexDestroyResponse @httpOperation(subgraph: "Authentik", path: "/sources/plex/{args.slug}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "sources_plex_destroy", type: "sources_plex_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """
  Redeem a plex token, check it's access to resources against what's allowed
  for the source, and redirect to an authentication/enrollment flow.
  """
  sourcesPlexRedeemTokenCreate(slug: String, input: PlexTokenRedeemRequestInput @source(name: "input", type: "PlexTokenRedeemRequest_Input", subgraph: "Authentik")): RedirectChallenge @httpOperation(subgraph: "Authentik", path: "/sources/plex/redeem_token/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST, queryParamArgMap: "{\"slug\":\"slug\"}") @source(name: "sources_plex_redeem_token_create", type: "RedirectChallenge", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Redeem a plex token for an authenticated user, creating a connection"""
  sourcesPlexRedeemTokenAuthenticatedCreate(slug: String, input: PlexTokenRedeemRequestInput @source(name: "input", type: "PlexTokenRedeemRequest_Input", subgraph: "Authentik")): Void @httpOperation(subgraph: "Authentik", path: "/sources/plex/redeem_token_authenticated/", operationSpecificHeaders: [["Content-Type", "application/json"]], httpMethod: POST, queryParamArgMap: "{\"slug\":\"slug\"}") @source(name: "sources_plex_redeem_token_authenticated_create", type: "Void", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SAMLSource Viewset"""
  sourcesSamlCreate(input: SamlSourceRequestInput @source(name: "input", type: "SAMLSourceRequest_Input", subgraph: "Authentik")): SourcesSamlCreateResponse @httpOperation(subgraph: "Authentik", path: "/sources/saml/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "sources_saml_create", type: "sources_saml_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SAMLSource Viewset"""
  sourcesSamlUpdate(
    """Internal source name, used in URLs."""
    slug: String!
    input: SamlSourceRequestInput @source(name: "input", type: "SAMLSourceRequest_Input", subgraph: "Authentik")
  ): SourcesSamlUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/saml/{args.slug}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "sources_saml_update", type: "sources_saml_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SAMLSource Viewset"""
  sourcesSamlPartialUpdate(
    """Internal source name, used in URLs."""
    slug: String!
    input: PatchedSamlSourceRequestInput @source(name: "input", type: "PatchedSAMLSourceRequest_Input", subgraph: "Authentik")
  ): SourcesSamlPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/saml/{args.slug}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "sources_saml_partial_update", type: "sources_saml_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SAMLSource Viewset"""
  sourcesSamlDestroy(
    """Internal source name, used in URLs."""
    slug: String!
  ): SourcesSamlDestroyResponse @httpOperation(subgraph: "Authentik", path: "/sources/saml/{args.slug}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "sources_saml_destroy", type: "sources_saml_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMSource Viewset"""
  sourcesScimCreate(input: ScimSourceRequestInput @source(name: "input", type: "SCIMSourceRequest_Input", subgraph: "Authentik")): SourcesScimCreateResponse @httpOperation(subgraph: "Authentik", path: "/sources/scim/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "sources_scim_create", type: "sources_scim_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMSource Viewset"""
  sourcesScimUpdate(
    """Internal source name, used in URLs."""
    slug: String!
    input: ScimSourceRequestInput @source(name: "input", type: "SCIMSourceRequest_Input", subgraph: "Authentik")
  ): SourcesScimUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/scim/{args.slug}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "sources_scim_update", type: "sources_scim_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMSource Viewset"""
  sourcesScimPartialUpdate(
    """Internal source name, used in URLs."""
    slug: String!
    input: PatchedScimSourceRequestInput @source(name: "input", type: "PatchedSCIMSourceRequest_Input", subgraph: "Authentik")
  ): SourcesScimPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/scim/{args.slug}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "sources_scim_partial_update", type: "sources_scim_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMSource Viewset"""
  sourcesScimDestroy(
    """Internal source name, used in URLs."""
    slug: String!
  ): SourcesScimDestroyResponse @httpOperation(subgraph: "Authentik", path: "/sources/scim/{args.slug}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "sources_scim_destroy", type: "sources_scim_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMSourceGroup Viewset"""
  sourcesScimGroupsCreate(input: ScimSourceGroupRequestInput @source(name: "input", type: "SCIMSourceGroupRequest_Input", subgraph: "Authentik")): SourcesScimGroupsCreateResponse @httpOperation(subgraph: "Authentik", path: "/sources/scim_groups/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "sources_scim_groups_create", type: "sources_scim_groups_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMSourceGroup Viewset"""
  sourcesScimGroupsUpdate(
    """A unique value identifying this scim source group."""
    id: String!
    input: ScimSourceGroupRequestInput @source(name: "input", type: "SCIMSourceGroupRequest_Input", subgraph: "Authentik")
  ): SourcesScimGroupsUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/scim_groups/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "sources_scim_groups_update", type: "sources_scim_groups_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMSourceGroup Viewset"""
  sourcesScimGroupsPartialUpdate(
    """A unique value identifying this scim source group."""
    id: String!
    input: PatchedScimSourceGroupRequestInput @source(name: "input", type: "PatchedSCIMSourceGroupRequest_Input", subgraph: "Authentik")
  ): SourcesScimGroupsPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/scim_groups/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "sources_scim_groups_partial_update", type: "sources_scim_groups_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMSourceGroup Viewset"""
  sourcesScimGroupsDestroy(
    """A unique value identifying this scim source group."""
    id: String!
  ): SourcesScimGroupsDestroyResponse @httpOperation(subgraph: "Authentik", path: "/sources/scim_groups/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "sources_scim_groups_destroy", type: "sources_scim_groups_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMSourceUser Viewset"""
  sourcesScimUsersCreate(input: ScimSourceUserRequestInput @source(name: "input", type: "SCIMSourceUserRequest_Input", subgraph: "Authentik")): SourcesScimUsersCreateResponse @httpOperation(subgraph: "Authentik", path: "/sources/scim_users/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "sources_scim_users_create", type: "sources_scim_users_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMSourceUser Viewset"""
  sourcesScimUsersUpdate(
    """A unique value identifying this scim source user."""
    id: String!
    input: ScimSourceUserRequestInput @source(name: "input", type: "SCIMSourceUserRequest_Input", subgraph: "Authentik")
  ): SourcesScimUsersUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/scim_users/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "sources_scim_users_update", type: "sources_scim_users_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMSourceUser Viewset"""
  sourcesScimUsersPartialUpdate(
    """A unique value identifying this scim source user."""
    id: String!
    input: PatchedScimSourceUserRequestInput @source(name: "input", type: "PatchedSCIMSourceUserRequest_Input", subgraph: "Authentik")
  ): SourcesScimUsersPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/scim_users/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "sources_scim_users_partial_update", type: "sources_scim_users_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SCIMSourceUser Viewset"""
  sourcesScimUsersDestroy(
    """A unique value identifying this scim source user."""
    id: String!
  ): SourcesScimUsersDestroyResponse @httpOperation(subgraph: "Authentik", path: "/sources/scim_users/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "sources_scim_users_destroy", type: "sources_scim_users_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """User-source connection Viewset"""
  sourcesUserConnectionsAllUpdate(
    """A unique integer value identifying this user source connection."""
    id: Int!
  ): SourcesUserConnectionsAllUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/all/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: PUT) @source(name: "sources_user_connections_all_update", type: "sources_user_connections_all_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """User-source connection Viewset"""
  sourcesUserConnectionsAllPartialUpdate(
    """A unique integer value identifying this user source connection."""
    id: Int!
  ): SourcesUserConnectionsAllPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/all/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: PATCH) @source(name: "sources_user_connections_all_partial_update", type: "sources_user_connections_all_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """User-source connection Viewset"""
  sourcesUserConnectionsAllDestroy(
    """A unique integer value identifying this user source connection."""
    id: Int!
  ): SourcesUserConnectionsAllDestroyResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/all/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "sources_user_connections_all_destroy", type: "sources_user_connections_all_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesUserConnectionsKerberosCreate(input: UserKerberosSourceConnectionRequestInput @source(name: "input", type: "UserKerberosSourceConnectionRequest_Input", subgraph: "Authentik")): SourcesUserConnectionsKerberosCreateResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/kerberos/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "sources_user_connections_kerberos_create", type: "sources_user_connections_kerberos_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesUserConnectionsKerberosUpdate(
    """
    A unique integer value identifying this User Kerberos Source Connection.
    """
    id: Int!
    input: UserKerberosSourceConnectionRequestInput @source(name: "input", type: "UserKerberosSourceConnectionRequest_Input", subgraph: "Authentik")
  ): SourcesUserConnectionsKerberosUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/kerberos/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "sources_user_connections_kerberos_update", type: "sources_user_connections_kerberos_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesUserConnectionsKerberosPartialUpdate(
    """
    A unique integer value identifying this User Kerberos Source Connection.
    """
    id: Int!
    input: PatchedUserKerberosSourceConnectionRequestInput @source(name: "input", type: "PatchedUserKerberosSourceConnectionRequest_Input", subgraph: "Authentik")
  ): SourcesUserConnectionsKerberosPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/kerberos/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "sources_user_connections_kerberos_partial_update", type: "sources_user_connections_kerberos_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesUserConnectionsKerberosDestroy(
    """
    A unique integer value identifying this User Kerberos Source Connection.
    """
    id: Int!
  ): SourcesUserConnectionsKerberosDestroyResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/kerberos/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "sources_user_connections_kerberos_destroy", type: "sources_user_connections_kerberos_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesUserConnectionsOauthCreate(input: UserOAuthSourceConnectionRequestInput @source(name: "input", type: "UserOAuthSourceConnectionRequest_Input", subgraph: "Authentik")): SourcesUserConnectionsOauthCreateResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/oauth/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "sources_user_connections_oauth_create", type: "sources_user_connections_oauth_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesUserConnectionsOauthUpdate(
    """A unique integer value identifying this User OAuth Source Connection."""
    id: Int!
    input: UserOAuthSourceConnectionRequestInput @source(name: "input", type: "UserOAuthSourceConnectionRequest_Input", subgraph: "Authentik")
  ): SourcesUserConnectionsOauthUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/oauth/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "sources_user_connections_oauth_update", type: "sources_user_connections_oauth_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesUserConnectionsOauthPartialUpdate(
    """A unique integer value identifying this User OAuth Source Connection."""
    id: Int!
    input: PatchedUserOAuthSourceConnectionRequestInput @source(name: "input", type: "PatchedUserOAuthSourceConnectionRequest_Input", subgraph: "Authentik")
  ): SourcesUserConnectionsOauthPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/oauth/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "sources_user_connections_oauth_partial_update", type: "sources_user_connections_oauth_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesUserConnectionsOauthDestroy(
    """A unique integer value identifying this User OAuth Source Connection."""
    id: Int!
  ): SourcesUserConnectionsOauthDestroyResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/oauth/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "sources_user_connections_oauth_destroy", type: "sources_user_connections_oauth_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Plex Source connection Serializer"""
  sourcesUserConnectionsPlexCreate(input: UserPlexSourceConnectionRequestInput @source(name: "input", type: "UserPlexSourceConnectionRequest_Input", subgraph: "Authentik")): SourcesUserConnectionsPlexCreateResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/plex/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "sources_user_connections_plex_create", type: "sources_user_connections_plex_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Plex Source connection Serializer"""
  sourcesUserConnectionsPlexUpdate(
    """A unique integer value identifying this User Plex Source Connection."""
    id: Int!
    input: UserPlexSourceConnectionRequestInput @source(name: "input", type: "UserPlexSourceConnectionRequest_Input", subgraph: "Authentik")
  ): SourcesUserConnectionsPlexUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/plex/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "sources_user_connections_plex_update", type: "sources_user_connections_plex_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Plex Source connection Serializer"""
  sourcesUserConnectionsPlexPartialUpdate(
    """A unique integer value identifying this User Plex Source Connection."""
    id: Int!
    input: PatchedUserPlexSourceConnectionRequestInput @source(name: "input", type: "PatchedUserPlexSourceConnectionRequest_Input", subgraph: "Authentik")
  ): SourcesUserConnectionsPlexPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/plex/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "sources_user_connections_plex_partial_update", type: "sources_user_connections_plex_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Plex Source connection Serializer"""
  sourcesUserConnectionsPlexDestroy(
    """A unique integer value identifying this User Plex Source Connection."""
    id: Int!
  ): SourcesUserConnectionsPlexDestroyResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/plex/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "sources_user_connections_plex_destroy", type: "sources_user_connections_plex_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesUserConnectionsSamlCreate(input: UserSamlSourceConnectionRequestInput @source(name: "input", type: "UserSAMLSourceConnectionRequest_Input", subgraph: "Authentik")): SourcesUserConnectionsSamlCreateResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/saml/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "sources_user_connections_saml_create", type: "sources_user_connections_saml_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesUserConnectionsSamlUpdate(
    """A unique integer value identifying this User SAML Source Connection."""
    id: Int!
    input: UserSamlSourceConnectionRequestInput @source(name: "input", type: "UserSAMLSourceConnectionRequest_Input", subgraph: "Authentik")
  ): SourcesUserConnectionsSamlUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/saml/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "sources_user_connections_saml_update", type: "sources_user_connections_saml_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesUserConnectionsSamlPartialUpdate(
    """A unique integer value identifying this User SAML Source Connection."""
    id: Int!
    input: PatchedUserSamlSourceConnectionRequestInput @source(name: "input", type: "PatchedUserSAMLSourceConnectionRequest_Input", subgraph: "Authentik")
  ): SourcesUserConnectionsSamlPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/saml/{args.id}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "sources_user_connections_saml_partial_update", type: "sources_user_connections_saml_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Source Viewset"""
  sourcesUserConnectionsSamlDestroy(
    """A unique integer value identifying this User SAML Source Connection."""
    id: Int!
  ): SourcesUserConnectionsSamlDestroyResponse @httpOperation(subgraph: "Authentik", path: "/sources/user_connections/saml/{args.id}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "sources_user_connections_saml_destroy", type: "sources_user_connections_saml_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Stage Viewset"""
  stagesAllDestroy(
    """
    A UUID string identifying this authentik.providers.oauth2.views.authorize.OAuthFulfillmentStage.
    """
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesAllDestroyResponse @httpOperation(subgraph: "Authentik", path: "/stages/all/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "stages_all_destroy", type: "stages_all_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorDuoStage Viewset"""
  stagesAuthenticatorDuoCreate(input: AuthenticatorDuoStageRequestInput @source(name: "input", type: "AuthenticatorDuoStageRequest_Input", subgraph: "Authentik")): StagesAuthenticatorDuoCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/duo/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "stages_authenticator_duo_create", type: "stages_authenticator_duo_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorDuoStage Viewset"""
  stagesAuthenticatorDuoUpdate(
    """A UUID string identifying this Duo Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: AuthenticatorDuoStageRequestInput @source(name: "input", type: "AuthenticatorDuoStageRequest_Input", subgraph: "Authentik")
  ): StagesAuthenticatorDuoUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/duo/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "stages_authenticator_duo_update", type: "stages_authenticator_duo_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorDuoStage Viewset"""
  stagesAuthenticatorDuoPartialUpdate(
    """A UUID string identifying this Duo Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedAuthenticatorDuoStageRequestInput @source(name: "input", type: "PatchedAuthenticatorDuoStageRequest_Input", subgraph: "Authentik")
  ): StagesAuthenticatorDuoPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/duo/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "stages_authenticator_duo_partial_update", type: "stages_authenticator_duo_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorDuoStage Viewset"""
  stagesAuthenticatorDuoDestroy(
    """A UUID string identifying this Duo Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesAuthenticatorDuoDestroyResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/duo/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "stages_authenticator_duo_destroy", type: "stages_authenticator_duo_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Check enrollment status of user details in current session"""
  stagesAuthenticatorDuoEnrollmentStatusCreate(
    """A UUID string identifying this Duo Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesAuthenticatorDuoEnrollmentStatusCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/duo/{args.stage_uuid}/enrollment_status/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: POST) @source(name: "stages_authenticator_duo_enrollment_status_create", type: "stages_authenticator_duo_enrollment_status_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Import duo devices into authentik"""
  stagesAuthenticatorDuoImportDeviceManualCreate(
    """A UUID string identifying this Duo Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: AuthenticatorDuoStageManualDeviceImportRequestInput @source(name: "input", type: "AuthenticatorDuoStageManualDeviceImportRequest_Input", subgraph: "Authentik")
  ): StagesAuthenticatorDuoImportDeviceManualCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/duo/{args.stage_uuid}/import_device_manual/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "stages_authenticator_duo_import_device_manual_create", type: "stages_authenticator_duo_import_device_manual_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Import duo devices into authentik"""
  stagesAuthenticatorDuoImportDevicesAutomaticCreate(
    """A UUID string identifying this Duo Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesAuthenticatorDuoImportDevicesAutomaticCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/duo/{args.stage_uuid}/import_devices_automatic/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: POST) @source(name: "stages_authenticator_duo_import_devices_automatic_create", type: "stages_authenticator_duo_import_devices_automatic_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorEndpointGDTCStage Viewset"""
  stagesAuthenticatorEndpointGdtcCreate(input: AuthenticatorEndpointGdtcStageRequestInput @source(name: "input", type: "AuthenticatorEndpointGDTCStageRequest_Input", subgraph: "Authentik")): StagesAuthenticatorEndpointGdtcCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/endpoint_gdtc/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "stages_authenticator_endpoint_gdtc_create", type: "stages_authenticator_endpoint_gdtc_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorEndpointGDTCStage Viewset"""
  stagesAuthenticatorEndpointGdtcUpdate(
    """
    A UUID string identifying this Endpoint Authenticator Google Device Trust Connector Stage.
    """
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: AuthenticatorEndpointGdtcStageRequestInput @source(name: "input", type: "AuthenticatorEndpointGDTCStageRequest_Input", subgraph: "Authentik")
  ): StagesAuthenticatorEndpointGdtcUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/endpoint_gdtc/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "stages_authenticator_endpoint_gdtc_update", type: "stages_authenticator_endpoint_gdtc_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorEndpointGDTCStage Viewset"""
  stagesAuthenticatorEndpointGdtcPartialUpdate(
    """
    A UUID string identifying this Endpoint Authenticator Google Device Trust Connector Stage.
    """
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedAuthenticatorEndpointGdtcStageRequestInput @source(name: "input", type: "PatchedAuthenticatorEndpointGDTCStageRequest_Input", subgraph: "Authentik")
  ): StagesAuthenticatorEndpointGdtcPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/endpoint_gdtc/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "stages_authenticator_endpoint_gdtc_partial_update", type: "stages_authenticator_endpoint_gdtc_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorEndpointGDTCStage Viewset"""
  stagesAuthenticatorEndpointGdtcDestroy(
    """
    A UUID string identifying this Endpoint Authenticator Google Device Trust Connector Stage.
    """
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesAuthenticatorEndpointGdtcDestroyResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/endpoint_gdtc/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "stages_authenticator_endpoint_gdtc_destroy", type: "stages_authenticator_endpoint_gdtc_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorSMSStage Viewset"""
  stagesAuthenticatorSmsCreate(input: AuthenticatorSmsStageRequestInput @source(name: "input", type: "AuthenticatorSMSStageRequest_Input", subgraph: "Authentik")): StagesAuthenticatorSmsCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/sms/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "stages_authenticator_sms_create", type: "stages_authenticator_sms_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorSMSStage Viewset"""
  stagesAuthenticatorSmsUpdate(
    """A UUID string identifying this SMS Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: AuthenticatorSmsStageRequestInput @source(name: "input", type: "AuthenticatorSMSStageRequest_Input", subgraph: "Authentik")
  ): StagesAuthenticatorSmsUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/sms/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "stages_authenticator_sms_update", type: "stages_authenticator_sms_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorSMSStage Viewset"""
  stagesAuthenticatorSmsPartialUpdate(
    """A UUID string identifying this SMS Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedAuthenticatorSmsStageRequestInput @source(name: "input", type: "PatchedAuthenticatorSMSStageRequest_Input", subgraph: "Authentik")
  ): StagesAuthenticatorSmsPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/sms/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "stages_authenticator_sms_partial_update", type: "stages_authenticator_sms_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorSMSStage Viewset"""
  stagesAuthenticatorSmsDestroy(
    """A UUID string identifying this SMS Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesAuthenticatorSmsDestroyResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/sms/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "stages_authenticator_sms_destroy", type: "stages_authenticator_sms_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorStaticStage Viewset"""
  stagesAuthenticatorStaticCreate(input: AuthenticatorStaticStageRequestInput @source(name: "input", type: "AuthenticatorStaticStageRequest_Input", subgraph: "Authentik")): StagesAuthenticatorStaticCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/static/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "stages_authenticator_static_create", type: "stages_authenticator_static_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorStaticStage Viewset"""
  stagesAuthenticatorStaticUpdate(
    """A UUID string identifying this Static Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: AuthenticatorStaticStageRequestInput @source(name: "input", type: "AuthenticatorStaticStageRequest_Input", subgraph: "Authentik")
  ): StagesAuthenticatorStaticUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/static/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "stages_authenticator_static_update", type: "stages_authenticator_static_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorStaticStage Viewset"""
  stagesAuthenticatorStaticPartialUpdate(
    """A UUID string identifying this Static Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedAuthenticatorStaticStageRequestInput @source(name: "input", type: "PatchedAuthenticatorStaticStageRequest_Input", subgraph: "Authentik")
  ): StagesAuthenticatorStaticPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/static/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "stages_authenticator_static_partial_update", type: "stages_authenticator_static_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorStaticStage Viewset"""
  stagesAuthenticatorStaticDestroy(
    """A UUID string identifying this Static Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesAuthenticatorStaticDestroyResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/static/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "stages_authenticator_static_destroy", type: "stages_authenticator_static_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorTOTPStage Viewset"""
  stagesAuthenticatorTotpCreate(input: AuthenticatorTotpStageRequestInput @source(name: "input", type: "AuthenticatorTOTPStageRequest_Input", subgraph: "Authentik")): StagesAuthenticatorTotpCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/totp/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "stages_authenticator_totp_create", type: "stages_authenticator_totp_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorTOTPStage Viewset"""
  stagesAuthenticatorTotpUpdate(
    """A UUID string identifying this TOTP Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: AuthenticatorTotpStageRequestInput @source(name: "input", type: "AuthenticatorTOTPStageRequest_Input", subgraph: "Authentik")
  ): StagesAuthenticatorTotpUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/totp/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "stages_authenticator_totp_update", type: "stages_authenticator_totp_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorTOTPStage Viewset"""
  stagesAuthenticatorTotpPartialUpdate(
    """A UUID string identifying this TOTP Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedAuthenticatorTotpStageRequestInput @source(name: "input", type: "PatchedAuthenticatorTOTPStageRequest_Input", subgraph: "Authentik")
  ): StagesAuthenticatorTotpPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/totp/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "stages_authenticator_totp_partial_update", type: "stages_authenticator_totp_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorTOTPStage Viewset"""
  stagesAuthenticatorTotpDestroy(
    """A UUID string identifying this TOTP Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesAuthenticatorTotpDestroyResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/totp/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "stages_authenticator_totp_destroy", type: "stages_authenticator_totp_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorValidateStage Viewset"""
  stagesAuthenticatorValidateCreate(input: AuthenticatorValidateStageRequestInput @source(name: "input", type: "AuthenticatorValidateStageRequest_Input", subgraph: "Authentik")): StagesAuthenticatorValidateCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/validate/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "stages_authenticator_validate_create", type: "stages_authenticator_validate_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorValidateStage Viewset"""
  stagesAuthenticatorValidateUpdate(
    """A UUID string identifying this Authenticator Validation Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: AuthenticatorValidateStageRequestInput @source(name: "input", type: "AuthenticatorValidateStageRequest_Input", subgraph: "Authentik")
  ): StagesAuthenticatorValidateUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/validate/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "stages_authenticator_validate_update", type: "stages_authenticator_validate_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorValidateStage Viewset"""
  stagesAuthenticatorValidatePartialUpdate(
    """A UUID string identifying this Authenticator Validation Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedAuthenticatorValidateStageRequestInput @source(name: "input", type: "PatchedAuthenticatorValidateStageRequest_Input", subgraph: "Authentik")
  ): StagesAuthenticatorValidatePartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/validate/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "stages_authenticator_validate_partial_update", type: "stages_authenticator_validate_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorValidateStage Viewset"""
  stagesAuthenticatorValidateDestroy(
    """A UUID string identifying this Authenticator Validation Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesAuthenticatorValidateDestroyResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/validate/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "stages_authenticator_validate_destroy", type: "stages_authenticator_validate_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorWebAuthnStage Viewset"""
  stagesAuthenticatorWebauthnCreate(input: AuthenticatorWebAuthnStageRequestInput @source(name: "input", type: "AuthenticatorWebAuthnStageRequest_Input", subgraph: "Authentik")): StagesAuthenticatorWebauthnCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/webauthn/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "stages_authenticator_webauthn_create", type: "stages_authenticator_webauthn_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorWebAuthnStage Viewset"""
  stagesAuthenticatorWebauthnUpdate(
    """A UUID string identifying this WebAuthn Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: AuthenticatorWebAuthnStageRequestInput @source(name: "input", type: "AuthenticatorWebAuthnStageRequest_Input", subgraph: "Authentik")
  ): StagesAuthenticatorWebauthnUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/webauthn/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "stages_authenticator_webauthn_update", type: "stages_authenticator_webauthn_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorWebAuthnStage Viewset"""
  stagesAuthenticatorWebauthnPartialUpdate(
    """A UUID string identifying this WebAuthn Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedAuthenticatorWebAuthnStageRequestInput @source(name: "input", type: "PatchedAuthenticatorWebAuthnStageRequest_Input", subgraph: "Authentik")
  ): StagesAuthenticatorWebauthnPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/webauthn/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "stages_authenticator_webauthn_partial_update", type: "stages_authenticator_webauthn_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """AuthenticatorWebAuthnStage Viewset"""
  stagesAuthenticatorWebauthnDestroy(
    """A UUID string identifying this WebAuthn Authenticator Setup Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesAuthenticatorWebauthnDestroyResponse @httpOperation(subgraph: "Authentik", path: "/stages/authenticator/webauthn/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "stages_authenticator_webauthn_destroy", type: "stages_authenticator_webauthn_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """CaptchaStage Viewset"""
  stagesCaptchaCreate(input: CaptchaStageRequestInput @source(name: "input", type: "CaptchaStageRequest_Input", subgraph: "Authentik")): StagesCaptchaCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/captcha/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "stages_captcha_create", type: "stages_captcha_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """CaptchaStage Viewset"""
  stagesCaptchaUpdate(
    """A UUID string identifying this Captcha Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: CaptchaStageRequestInput @source(name: "input", type: "CaptchaStageRequest_Input", subgraph: "Authentik")
  ): StagesCaptchaUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/captcha/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "stages_captcha_update", type: "stages_captcha_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """CaptchaStage Viewset"""
  stagesCaptchaPartialUpdate(
    """A UUID string identifying this Captcha Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedCaptchaStageRequestInput @source(name: "input", type: "PatchedCaptchaStageRequest_Input", subgraph: "Authentik")
  ): StagesCaptchaPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/captcha/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "stages_captcha_partial_update", type: "stages_captcha_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """CaptchaStage Viewset"""
  stagesCaptchaDestroy(
    """A UUID string identifying this Captcha Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesCaptchaDestroyResponse @httpOperation(subgraph: "Authentik", path: "/stages/captcha/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "stages_captcha_destroy", type: "stages_captcha_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """ConsentStage Viewset"""
  stagesConsentCreate(input: ConsentStageRequestInput @source(name: "input", type: "ConsentStageRequest_Input", subgraph: "Authentik")): StagesConsentCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/consent/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "stages_consent_create", type: "stages_consent_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """ConsentStage Viewset"""
  stagesConsentUpdate(
    """A UUID string identifying this Consent Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: ConsentStageRequestInput @source(name: "input", type: "ConsentStageRequest_Input", subgraph: "Authentik")
  ): StagesConsentUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/consent/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "stages_consent_update", type: "stages_consent_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """ConsentStage Viewset"""
  stagesConsentPartialUpdate(
    """A UUID string identifying this Consent Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedConsentStageRequestInput @source(name: "input", type: "PatchedConsentStageRequest_Input", subgraph: "Authentik")
  ): StagesConsentPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/consent/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "stages_consent_partial_update", type: "stages_consent_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """ConsentStage Viewset"""
  stagesConsentDestroy(
    """A UUID string identifying this Consent Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesConsentDestroyResponse @httpOperation(subgraph: "Authentik", path: "/stages/consent/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "stages_consent_destroy", type: "stages_consent_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """DenyStage Viewset"""
  stagesDenyCreate(input: DenyStageRequestInput @source(name: "input", type: "DenyStageRequest_Input", subgraph: "Authentik")): StagesDenyCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/deny/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "stages_deny_create", type: "stages_deny_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """DenyStage Viewset"""
  stagesDenyUpdate(
    """A UUID string identifying this Deny Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: DenyStageRequestInput @source(name: "input", type: "DenyStageRequest_Input", subgraph: "Authentik")
  ): StagesDenyUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/deny/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "stages_deny_update", type: "stages_deny_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """DenyStage Viewset"""
  stagesDenyPartialUpdate(
    """A UUID string identifying this Deny Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedDenyStageRequestInput @source(name: "input", type: "PatchedDenyStageRequest_Input", subgraph: "Authentik")
  ): StagesDenyPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/deny/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "stages_deny_partial_update", type: "stages_deny_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """DenyStage Viewset"""
  stagesDenyDestroy(
    """A UUID string identifying this Deny Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesDenyDestroyResponse @httpOperation(subgraph: "Authentik", path: "/stages/deny/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "stages_deny_destroy", type: "stages_deny_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """DummyStage Viewset"""
  stagesDummyCreate(input: DummyStageRequestInput @source(name: "input", type: "DummyStageRequest_Input", subgraph: "Authentik")): StagesDummyCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/dummy/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "stages_dummy_create", type: "stages_dummy_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """DummyStage Viewset"""
  stagesDummyUpdate(
    """A UUID string identifying this Dummy Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: DummyStageRequestInput @source(name: "input", type: "DummyStageRequest_Input", subgraph: "Authentik")
  ): StagesDummyUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/dummy/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "stages_dummy_update", type: "stages_dummy_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """DummyStage Viewset"""
  stagesDummyPartialUpdate(
    """A UUID string identifying this Dummy Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedDummyStageRequestInput @source(name: "input", type: "PatchedDummyStageRequest_Input", subgraph: "Authentik")
  ): StagesDummyPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/dummy/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "stages_dummy_partial_update", type: "stages_dummy_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """DummyStage Viewset"""
  stagesDummyDestroy(
    """A UUID string identifying this Dummy Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesDummyDestroyResponse @httpOperation(subgraph: "Authentik", path: "/stages/dummy/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "stages_dummy_destroy", type: "stages_dummy_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """EmailStage Viewset"""
  stagesEmailCreate(input: EmailStageRequestInput @source(name: "input", type: "EmailStageRequest_Input", subgraph: "Authentik")): StagesEmailCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/email/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "stages_email_create", type: "stages_email_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """EmailStage Viewset"""
  stagesEmailUpdate(
    """A UUID string identifying this Email Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: EmailStageRequestInput @source(name: "input", type: "EmailStageRequest_Input", subgraph: "Authentik")
  ): StagesEmailUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/email/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "stages_email_update", type: "stages_email_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """EmailStage Viewset"""
  stagesEmailPartialUpdate(
    """A UUID string identifying this Email Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedEmailStageRequestInput @source(name: "input", type: "PatchedEmailStageRequest_Input", subgraph: "Authentik")
  ): StagesEmailPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/email/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "stages_email_partial_update", type: "stages_email_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """EmailStage Viewset"""
  stagesEmailDestroy(
    """A UUID string identifying this Email Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesEmailDestroyResponse @httpOperation(subgraph: "Authentik", path: "/stages/email/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "stages_email_destroy", type: "stages_email_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """IdentificationStage Viewset"""
  stagesIdentificationCreate(input: IdentificationStageRequestInput @source(name: "input", type: "IdentificationStageRequest_Input", subgraph: "Authentik")): StagesIdentificationCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/identification/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "stages_identification_create", type: "stages_identification_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """IdentificationStage Viewset"""
  stagesIdentificationUpdate(
    """A UUID string identifying this Identification Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: IdentificationStageRequestInput @source(name: "input", type: "IdentificationStageRequest_Input", subgraph: "Authentik")
  ): StagesIdentificationUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/identification/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "stages_identification_update", type: "stages_identification_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """IdentificationStage Viewset"""
  stagesIdentificationPartialUpdate(
    """A UUID string identifying this Identification Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedIdentificationStageRequestInput @source(name: "input", type: "PatchedIdentificationStageRequest_Input", subgraph: "Authentik")
  ): StagesIdentificationPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/identification/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "stages_identification_partial_update", type: "stages_identification_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """IdentificationStage Viewset"""
  stagesIdentificationDestroy(
    """A UUID string identifying this Identification Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesIdentificationDestroyResponse @httpOperation(subgraph: "Authentik", path: "/stages/identification/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "stages_identification_destroy", type: "stages_identification_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Invitation Viewset"""
  stagesInvitationInvitationsCreate(input: InvitationRequestInput @source(name: "input", type: "InvitationRequest_Input", subgraph: "Authentik")): StagesInvitationInvitationsCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/invitation/invitations/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "stages_invitation_invitations_create", type: "stages_invitation_invitations_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Invitation Viewset"""
  stagesInvitationInvitationsUpdate(
    """A UUID string identifying this Invitation."""
    inviteUuid: UUID! @source(name: "invite_uuid", type: "UUID!", subgraph: "Authentik")
    input: InvitationRequestInput @source(name: "input", type: "InvitationRequest_Input", subgraph: "Authentik")
  ): StagesInvitationInvitationsUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/invitation/invitations/{args.invite_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "stages_invitation_invitations_update", type: "stages_invitation_invitations_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Invitation Viewset"""
  stagesInvitationInvitationsPartialUpdate(
    """A UUID string identifying this Invitation."""
    inviteUuid: UUID! @source(name: "invite_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedInvitationRequestInput @source(name: "input", type: "PatchedInvitationRequest_Input", subgraph: "Authentik")
  ): StagesInvitationInvitationsPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/invitation/invitations/{args.invite_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "stages_invitation_invitations_partial_update", type: "stages_invitation_invitations_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Invitation Viewset"""
  stagesInvitationInvitationsDestroy(
    """A UUID string identifying this Invitation."""
    inviteUuid: UUID! @source(name: "invite_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesInvitationInvitationsDestroyResponse @httpOperation(subgraph: "Authentik", path: "/stages/invitation/invitations/{args.invite_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "stages_invitation_invitations_destroy", type: "stages_invitation_invitations_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """InvitationStage Viewset"""
  stagesInvitationStagesCreate(input: InvitationStageRequestInput @source(name: "input", type: "InvitationStageRequest_Input", subgraph: "Authentik")): StagesInvitationStagesCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/invitation/stages/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "stages_invitation_stages_create", type: "stages_invitation_stages_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """InvitationStage Viewset"""
  stagesInvitationStagesUpdate(
    """A UUID string identifying this Invitation Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: InvitationStageRequestInput @source(name: "input", type: "InvitationStageRequest_Input", subgraph: "Authentik")
  ): StagesInvitationStagesUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/invitation/stages/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "stages_invitation_stages_update", type: "stages_invitation_stages_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """InvitationStage Viewset"""
  stagesInvitationStagesPartialUpdate(
    """A UUID string identifying this Invitation Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedInvitationStageRequestInput @source(name: "input", type: "PatchedInvitationStageRequest_Input", subgraph: "Authentik")
  ): StagesInvitationStagesPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/invitation/stages/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "stages_invitation_stages_partial_update", type: "stages_invitation_stages_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """InvitationStage Viewset"""
  stagesInvitationStagesDestroy(
    """A UUID string identifying this Invitation Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesInvitationStagesDestroyResponse @httpOperation(subgraph: "Authentik", path: "/stages/invitation/stages/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "stages_invitation_stages_destroy", type: "stages_invitation_stages_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PasswordStage Viewset"""
  stagesPasswordCreate(input: PasswordStageRequestInput @source(name: "input", type: "PasswordStageRequest_Input", subgraph: "Authentik")): StagesPasswordCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/password/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "stages_password_create", type: "stages_password_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PasswordStage Viewset"""
  stagesPasswordUpdate(
    """A UUID string identifying this Password Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: PasswordStageRequestInput @source(name: "input", type: "PasswordStageRequest_Input", subgraph: "Authentik")
  ): StagesPasswordUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/password/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "stages_password_update", type: "stages_password_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PasswordStage Viewset"""
  stagesPasswordPartialUpdate(
    """A UUID string identifying this Password Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedPasswordStageRequestInput @source(name: "input", type: "PatchedPasswordStageRequest_Input", subgraph: "Authentik")
  ): StagesPasswordPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/password/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "stages_password_partial_update", type: "stages_password_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PasswordStage Viewset"""
  stagesPasswordDestroy(
    """A UUID string identifying this Password Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesPasswordDestroyResponse @httpOperation(subgraph: "Authentik", path: "/stages/password/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "stages_password_destroy", type: "stages_password_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Prompt Viewset"""
  stagesPromptPromptsCreate(input: PromptRequestInput @source(name: "input", type: "PromptRequest_Input", subgraph: "Authentik")): StagesPromptPromptsCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/prompt/prompts/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "stages_prompt_prompts_create", type: "stages_prompt_prompts_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Prompt Viewset"""
  stagesPromptPromptsUpdate(
    """A UUID string identifying this Prompt."""
    promptUuid: UUID! @source(name: "prompt_uuid", type: "UUID!", subgraph: "Authentik")
    input: PromptRequestInput @source(name: "input", type: "PromptRequest_Input", subgraph: "Authentik")
  ): StagesPromptPromptsUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/prompt/prompts/{args.prompt_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "stages_prompt_prompts_update", type: "stages_prompt_prompts_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Prompt Viewset"""
  stagesPromptPromptsPartialUpdate(
    """A UUID string identifying this Prompt."""
    promptUuid: UUID! @source(name: "prompt_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedPromptRequestInput @source(name: "input", type: "PatchedPromptRequest_Input", subgraph: "Authentik")
  ): StagesPromptPromptsPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/prompt/prompts/{args.prompt_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "stages_prompt_prompts_partial_update", type: "stages_prompt_prompts_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Prompt Viewset"""
  stagesPromptPromptsDestroy(
    """A UUID string identifying this Prompt."""
    promptUuid: UUID! @source(name: "prompt_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesPromptPromptsDestroyResponse @httpOperation(subgraph: "Authentik", path: "/stages/prompt/prompts/{args.prompt_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "stages_prompt_prompts_destroy", type: "stages_prompt_prompts_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """Preview a prompt as a challenge, just like a flow would receive"""
  stagesPromptPromptsPreviewCreate(input: PromptRequestInput @source(name: "input", type: "PromptRequest_Input", subgraph: "Authentik")): StagesPromptPromptsPreviewCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/prompt/prompts/preview/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "stages_prompt_prompts_preview_create", type: "stages_prompt_prompts_preview_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PromptStage Viewset"""
  stagesPromptStagesCreate(input: PromptStageRequestInput @source(name: "input", type: "PromptStageRequest_Input", subgraph: "Authentik")): StagesPromptStagesCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/prompt/stages/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "stages_prompt_stages_create", type: "stages_prompt_stages_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PromptStage Viewset"""
  stagesPromptStagesUpdate(
    """A UUID string identifying this Prompt Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: PromptStageRequestInput @source(name: "input", type: "PromptStageRequest_Input", subgraph: "Authentik")
  ): StagesPromptStagesUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/prompt/stages/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "stages_prompt_stages_update", type: "stages_prompt_stages_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PromptStage Viewset"""
  stagesPromptStagesPartialUpdate(
    """A UUID string identifying this Prompt Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedPromptStageRequestInput @source(name: "input", type: "PatchedPromptStageRequest_Input", subgraph: "Authentik")
  ): StagesPromptStagesPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/prompt/stages/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "stages_prompt_stages_partial_update", type: "stages_prompt_stages_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """PromptStage Viewset"""
  stagesPromptStagesDestroy(
    """A UUID string identifying this Prompt Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesPromptStagesDestroyResponse @httpOperation(subgraph: "Authentik", path: "/stages/prompt/stages/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "stages_prompt_stages_destroy", type: "stages_prompt_stages_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SourceStage Viewset"""
  stagesSourceCreate(input: SourceStageRequestInput @source(name: "input", type: "SourceStageRequest_Input", subgraph: "Authentik")): StagesSourceCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/source/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "stages_source_create", type: "stages_source_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SourceStage Viewset"""
  stagesSourceUpdate(
    """A UUID string identifying this Source Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: SourceStageRequestInput @source(name: "input", type: "SourceStageRequest_Input", subgraph: "Authentik")
  ): StagesSourceUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/source/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "stages_source_update", type: "stages_source_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SourceStage Viewset"""
  stagesSourcePartialUpdate(
    """A UUID string identifying this Source Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedSourceStageRequestInput @source(name: "input", type: "PatchedSourceStageRequest_Input", subgraph: "Authentik")
  ): StagesSourcePartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/source/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "stages_source_partial_update", type: "stages_source_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """SourceStage Viewset"""
  stagesSourceDestroy(
    """A UUID string identifying this Source Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesSourceDestroyResponse @httpOperation(subgraph: "Authentik", path: "/stages/source/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "stages_source_destroy", type: "stages_source_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserDeleteStage Viewset"""
  stagesUserDeleteCreate(input: UserDeleteStageRequestInput @source(name: "input", type: "UserDeleteStageRequest_Input", subgraph: "Authentik")): StagesUserDeleteCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/user_delete/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "stages_user_delete_create", type: "stages_user_delete_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserDeleteStage Viewset"""
  stagesUserDeleteUpdate(
    """A UUID string identifying this User Delete Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: UserDeleteStageRequestInput @source(name: "input", type: "UserDeleteStageRequest_Input", subgraph: "Authentik")
  ): StagesUserDeleteUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/user_delete/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "stages_user_delete_update", type: "stages_user_delete_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserDeleteStage Viewset"""
  stagesUserDeletePartialUpdate(
    """A UUID string identifying this User Delete Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedUserDeleteStageRequestInput @source(name: "input", type: "PatchedUserDeleteStageRequest_Input", subgraph: "Authentik")
  ): StagesUserDeletePartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/user_delete/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "stages_user_delete_partial_update", type: "stages_user_delete_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserDeleteStage Viewset"""
  stagesUserDeleteDestroy(
    """A UUID string identifying this User Delete Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesUserDeleteDestroyResponse @httpOperation(subgraph: "Authentik", path: "/stages/user_delete/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "stages_user_delete_destroy", type: "stages_user_delete_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserLoginStage Viewset"""
  stagesUserLoginCreate(input: UserLoginStageRequestInput @source(name: "input", type: "UserLoginStageRequest_Input", subgraph: "Authentik")): StagesUserLoginCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/user_login/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "stages_user_login_create", type: "stages_user_login_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserLoginStage Viewset"""
  stagesUserLoginUpdate(
    """A UUID string identifying this User Login Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: UserLoginStageRequestInput @source(name: "input", type: "UserLoginStageRequest_Input", subgraph: "Authentik")
  ): StagesUserLoginUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/user_login/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "stages_user_login_update", type: "stages_user_login_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserLoginStage Viewset"""
  stagesUserLoginPartialUpdate(
    """A UUID string identifying this User Login Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedUserLoginStageRequestInput @source(name: "input", type: "PatchedUserLoginStageRequest_Input", subgraph: "Authentik")
  ): StagesUserLoginPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/user_login/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "stages_user_login_partial_update", type: "stages_user_login_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserLoginStage Viewset"""
  stagesUserLoginDestroy(
    """A UUID string identifying this User Login Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesUserLoginDestroyResponse @httpOperation(subgraph: "Authentik", path: "/stages/user_login/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "stages_user_login_destroy", type: "stages_user_login_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserLogoutStage Viewset"""
  stagesUserLogoutCreate(input: UserLogoutStageRequestInput @source(name: "input", type: "UserLogoutStageRequest_Input", subgraph: "Authentik")): StagesUserLogoutCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/user_logout/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "stages_user_logout_create", type: "stages_user_logout_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserLogoutStage Viewset"""
  stagesUserLogoutUpdate(
    """A UUID string identifying this User Logout Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: UserLogoutStageRequestInput @source(name: "input", type: "UserLogoutStageRequest_Input", subgraph: "Authentik")
  ): StagesUserLogoutUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/user_logout/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "stages_user_logout_update", type: "stages_user_logout_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserLogoutStage Viewset"""
  stagesUserLogoutPartialUpdate(
    """A UUID string identifying this User Logout Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedUserLogoutStageRequestInput @source(name: "input", type: "PatchedUserLogoutStageRequest_Input", subgraph: "Authentik")
  ): StagesUserLogoutPartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/user_logout/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "stages_user_logout_partial_update", type: "stages_user_logout_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserLogoutStage Viewset"""
  stagesUserLogoutDestroy(
    """A UUID string identifying this User Logout Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesUserLogoutDestroyResponse @httpOperation(subgraph: "Authentik", path: "/stages/user_logout/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "stages_user_logout_destroy", type: "stages_user_logout_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserWriteStage Viewset"""
  stagesUserWriteCreate(input: UserWriteStageRequestInput @source(name: "input", type: "UserWriteStageRequest_Input", subgraph: "Authentik")): StagesUserWriteCreateResponse @httpOperation(subgraph: "Authentik", path: "/stages/user_write/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST) @source(name: "stages_user_write_create", type: "stages_user_write_create_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserWriteStage Viewset"""
  stagesUserWriteUpdate(
    """A UUID string identifying this User Write Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: UserWriteStageRequestInput @source(name: "input", type: "UserWriteStageRequest_Input", subgraph: "Authentik")
  ): StagesUserWriteUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/user_write/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PUT) @source(name: "stages_user_write_update", type: "stages_user_write_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserWriteStage Viewset"""
  stagesUserWritePartialUpdate(
    """A UUID string identifying this User Write Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
    input: PatchedUserWriteStageRequestInput @source(name: "input", type: "PatchedUserWriteStageRequest_Input", subgraph: "Authentik")
  ): StagesUserWritePartialUpdateResponse @httpOperation(subgraph: "Authentik", path: "/stages/user_write/{args.stage_uuid}/", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: PATCH) @source(name: "stages_user_write_partial_update", type: "stages_user_write_partial_update_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  """UserWriteStage Viewset"""
  stagesUserWriteDestroy(
    """A UUID string identifying this User Write Stage."""
    stageUuid: UUID! @source(name: "stage_uuid", type: "UUID!", subgraph: "Authentik")
  ): StagesUserWriteDestroyResponse @httpOperation(subgraph: "Authentik", path: "/stages/user_write/{args.stage_uuid}/", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: DELETE) @source(name: "stages_user_write_destroy", type: "stages_user_write_destroy_response", subgraph: "Authentik") @hidden @join__field(graph: AUTHENTIK)
  acceptRegistration(email: String!): ChurrosMutationAcceptRegistrationResult! @source(name: "acceptRegistration", type: "MutationAcceptRegistrationResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Marks the user as having seen the given version's changelog."""
  acknowledgeChangelog(version: String! = "dev"): Boolean! @hidden @join__field(graph: CHURROS)
  """
  Ajouter un fichier à une page. Permet notamment d'ajouter des images pour s'en servir dans le contenu de la page.
  """
  addFileToPage(file: ChurrosFile! @source(name: "file", type: "File!", subgraph: "Churros"), page: ID!): ChurrosMutationAddFileToPageResult! @source(name: "addFileToPage", type: "MutationAddFileToPageResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  addGroupMember(groupUid: String!, title: String!, uid: String!): ChurrosMutationAddGroupMemberResult! @source(name: "addGroupMember", type: "MutationAddGroupMemberResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS) @deprecated(reason: "Utiliser `addGroupMemberV2` à la place")
  """Ajouter quelqu'un à un groupe"""
  addGroupMemberV2(group: ChurrosUID! @source(name: "group", type: "UID!", subgraph: "Churros"), title: String! = "Membre", user: ChurrosUID! @source(name: "user", type: "UID!", subgraph: "Churros")): ChurrosMutationAddGroupMemberV2Result! @source(name: "addGroupMemberV2", type: "MutationAddGroupMemberV2Result!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Ajouter des liens à une ressource implémentant `HasLinks`"""
  addLinks(
    """
    Que faire pour un lien si la ressource en possède déjà un autre avec la même URL
    """
    duplicates: ChurrosDuplicateLinksAction! = Replace @source(name: "duplicates", type: "DuplicateLinksAction!", subgraph: "Churros")
    """ID complet de la ressource (AVEC le préfixe)"""
    id: ID!
    links: [ChurrosLinkInput!]! @source(name: "links", type: "[LinkInput!]!", subgraph: "Churros")
  ): ChurrosMutationAddLinksResult! @source(name: "addLinks", type: "MutationAddLinksResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Répondre à une question de type `FileUpload` en uploadant un fichier"""
  answerFileQuestion(
    """Fichier à uploader"""
    answer: ChurrosFile! @source(name: "answer", type: "File!", subgraph: "Churros")
    """ID de la question à laquelle répondre"""
    question: ID!
  ): ChurrosAnswerFileUpload! @source(name: "answerFileQuestion", type: "AnswerFileUpload!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  answerFormSection(
    answers: [ChurrosAnswerInput!]! @source(name: "answers", type: "[AnswerInput!]!", subgraph: "Churros")
    """ID de la section du formulaire"""
    section: ID!
  ): ChurrosMutationAnswerFormSectionResult! @source(name: "answerFormSection", type: "MutationAnswerFormSectionResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """
  Deletes a pending godparent request. If accept is true, the request will be accepted (and the godparent of the requester will be changed), otherwise it will be rejected (the godparent of the requester won't be changed)
  """
  answerGodparentRequest(accept: Boolean!, id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")): ChurrosMutationAnswerGodparentRequestResult! @source(name: "answerGodparentRequest", type: "MutationAnswerGodparentRequestResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """
  Bannir un·e utilisateur·rice d'un événement. Iel ne pourra plus prendre de place (que ce soit pour iel ou pour une autre personne, dans le cas des billets à parrainages)
  """
  banFromEvent(id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros"), user: ChurrosUID! @source(name: "user", type: "UID!", subgraph: "Churros")): ChurrosMutationBanFromEventResult! @source(name: "banFromEvent", type: "MutationBanFromEventResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """
  Bloquer un thème pour empêcher qu'il soit automatiquement déployé à l'utilisateur·ice connecté·e
  """
  blockTheme(
    """ID du thème"""
    id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")
  ): ChurrosTheme! @source(name: "blockTheme", type: "Theme!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Réserver une place sur un évènement"""
  bookEvent(
    """
    Adresse mail à laquelle envoyer le billet. Nécéssaire quand on est pas connecté.e
    """
    authorEmail: ChurrosEmail @source(name: "authorEmail", type: "Email", subgraph: "Churros")
    """
    Nom de la personne pour qui on réserve la place. Préférer churrosBeneficiary quand c'est possible
    """
    beneficiary: String
    """Identifiant (@) de la personne qui recevra la place"""
    churrosBeneficiary: ChurrosUID @source(name: "churrosBeneficiary", type: "UID", subgraph: "Churros")
    ticket: ChurrosLocalID! @source(name: "ticket", type: "LocalID!", subgraph: "Churros")
  ): ChurrosMutationBookEventResult! @source(name: "bookEvent", type: "MutationBookEventResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """
  Épingle une page pour en faire un accès rapide. Si la page est déjà épinglée, ne fait rien. Voir `unpin` pour retirer une page épinglée.
  """
  bookmark(
    """Chemin de la page à épingler"""
    path: String!
  ): ChurrosBookmark! @source(name: "bookmark", type: "Bookmark!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  cancelBooking(
    """Code de réservation"""
    code: String!
  ): ChurrosMutationCancelBookingResult! @source(name: "cancelBooking", type: "MutationCancelBookingResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  cancelPendingContribution(optionId: ID!): ChurrosMutationCancelPendingContributionResult! @source(name: "cancelPendingContribution", type: "MutationCancelPendingContributionResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Changer le groupe organisateur (principal) de l'événement"""
  changeEventOrganizer(group: ChurrosUID! @source(name: "group", type: "UID!", subgraph: "Churros"), id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")): ChurrosMutationChangeEventOrganizerResult! @source(name: "changeEventOrganizer", type: "MutationChangeEventOrganizerResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Mettre à jour le groupe d'un article"""
  changePostOwner(group: ChurrosUID! @source(name: "group", type: "UID!", subgraph: "Churros"), post: ChurrosLocalID! @source(name: "post", type: "LocalID!", subgraph: "Churros")): ChurrosMutationChangePostOwnerResult! @source(name: "changePostOwner", type: "MutationChangePostOwnerResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  checkIfBookingIsPaid(code: String!): ChurrosMutationCheckIfBookingIsPaidResult! @source(name: "checkIfBookingIsPaid", type: "MutationCheckIfBookingIsPaidResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  claimPromotionCode(code: String!): Boolean! @hidden @join__field(graph: CHURROS)
  completeSignup(token: String!): ChurrosSignupCompletionResult! @source(name: "completeSignup", type: "SignupCompletionResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  contribute(optionId: ID!, phone: String!): ChurrosMutationContributeResult! @source(name: "contribute", type: "MutationContributeResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """
  Crée un pass Apple Wallet pour une réservation donnée. Renvoie l'URL à utiliser pour ajouter le pass à Apple Wallet.
  """
  createAppleWalletPass(
    """Code de la réservation"""
    code: String!
  ): ChurrosMutationCreateAppleWalletPassResult! @source(name: "createAppleWalletPass", type: "MutationCreateAppleWalletPassResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  createBot(
    """UID de la filière"""
    major: String
    """Nom du compte bot"""
    name: String!
    """Mot de passe du compte bot"""
    password: String!
    """UID du compte bot"""
    uid: String!
  ): ChurrosUser! @source(name: "createBot", type: "User!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Créer un nouvel évènement"""
  createEvent(
    """
    Dates de l'évènement. Si non précisé, l'évènement est créé sans dates, ce qui l'empêche d'avoir une visibilité autre que `Private` ou `Unlisted`.
    """
    dates: ChurrosDateRangeInput @source(name: "dates", type: "DateRangeInput", subgraph: "Churros")
    """Groupe organisateur principal"""
    group: ChurrosUID! @source(name: "group", type: "UID!", subgraph: "Churros")
    title: ChurrosShortString! @source(name: "title", type: "ShortString!", subgraph: "Churros")
  ): ChurrosMutationCreateEventResult! @source(name: "createEvent", type: "MutationCreateEventResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  createGitlabIssue(description: String!, isBug: Boolean!, title: String!): Int! @hidden @join__field(graph: CHURROS)
  """
  Créer un pass Google Wallet pour une réservation donnée. Renvoie l'URL a utiliser pour ajouter le pass à Google Wallet.
  """
  createGoogleWalletPass(
    """Code de la réservation"""
    code: String!
  ): ChurrosMutationCreateGoogleWalletPassResult! @source(name: "createGoogleWalletPass", type: "MutationCreateGoogleWalletPassResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Créer un nouveau groupe"""
  createGroup(
    name: String!
    """AE de rattachement du groupe"""
    studentAssociation: ChurrosUID! @source(name: "studentAssociation", type: "UID!", subgraph: "Churros")
    type: ChurrosGroupType! = Group @source(name: "type", type: "GroupType!", subgraph: "Churros")
    uid: ChurrosUID! @source(name: "uid", type: "UID!", subgraph: "Churros")
  ): ChurrosMutationCreateGroupResult! @source(name: "createGroup", type: "MutationCreateGroupResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """
  Créer un token d'accès pour un groupe. Les requêtes effectuées avec ce token auront des permissions différentes, et permettent d'effectuer certaines actions en tant qu'un groupe au lieu d'une personne
  """
  createGroupAccessToken(group: ChurrosUID! @source(name: "group", type: "UID!", subgraph: "Churros")): ChurrosMutationCreateGroupAccessTokenResult! @source(name: "createGroupAccessToken", type: "MutationCreateGroupAccessTokenResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """
  Crée une feuille Google Sheets (si elle n'existe pas déjà) qui contiendra les réponses au formulaire (et sera mise à jour automatiquement). Renvoie l'URL de la feuille Google Sheets.
  """
  createLinkedGoogleSheet(
    """L'identifiant du formulaire"""
    form: ID!
  ): String! @hidden @join__field(graph: CHURROS)
  """
  Démarre une procédure de réinitialisation de mot de passe pour l'utilisateur associé à l'adresse e-mail ou l'uid fournie. Renvoie `true` même si l'utilisateur n'existe pas.
  """
  createPasswordReset(email: String!): ChurrosMutationCreatePasswordResetResult! @source(name: "createPasswordReset", type: "MutationCreatePasswordResetResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Créer un post en privé"""
  createPost(body: String! = "", event: ChurrosLocalID! @source(name: "event", type: "LocalID!", subgraph: "Churros"), group: ChurrosUID! @source(name: "group", type: "UID!", subgraph: "Churros"), title: String! = ""): ChurrosMutationCreatePostResult! @source(name: "createPost", type: "MutationCreatePostResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Créer un lien d'inscription rapide"""
  createQuickSignup(
    """UID de l'école"""
    school: String!
    """Date de validité du lien"""
    validUntil: ChurrosDateTime! @source(name: "validUntil", type: "DateTime!", subgraph: "Churros")
  ): ChurrosQuickSignup! @source(name: "createQuickSignup", type: "QuickSignup!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Générer des codes de promotion pour une promotion"""
  createSpecialOfferCodes(
    """Nombre de codes à générer. Maximum: 500"""
    amount: Int!
    specialOffer: ChurrosLocalID! @source(name: "specialOffer", type: "LocalID!", subgraph: "Churros")
  ): ChurrosMutationCreateSpecialOfferCodesResult! @source(name: "createSpecialOfferCodes", type: "MutationCreateSpecialOfferCodesResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Créer un nouveau billet sur un évènement existant"""
  createTicket(
    event: ChurrosLocalID! @source(name: "event", type: "LocalID!", subgraph: "Churros")
    """Groupe de billet dans lequel mettre ce billet"""
    group: ChurrosLocalID @source(name: "group", type: "LocalID", subgraph: "Churros")
    name: String
    shotgun: ChurrosDateRangeInput! @source(name: "shotgun", type: "DateRangeInput!", subgraph: "Churros")
  ): ChurrosMutationCreateTicketResult! @source(name: "createTicket", type: "MutationCreateTicketResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Dédoublonne les réservations. Renvoie les réservations supprimées."""
  deduplicateBookings(event: ChurrosLocalID! @source(name: "event", type: "LocalID!", subgraph: "Churros")): ChurrosMutationDeduplicateBookingsResult! @source(name: "deduplicateBookings", type: "MutationDeduplicateBookingsResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  deleteAnnouncement(id: ID!): Boolean! @hidden @join__field(graph: CHURROS)
  """Supprimer un post"""
  deleteArticle(id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")): ChurrosMutationDeleteArticleResult! @source(name: "deleteArticle", type: "MutationDeleteArticleResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  deleteArticlePicture(id: ID!): Boolean! @hidden @join__field(graph: CHURROS)
  deleteComment(id: ID!): ChurrosComment! @source(name: "deleteComment", type: "Comment!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Supprimer une cotisation"""
  deleteContribution(option: ChurrosLocalID! @source(name: "option", type: "LocalID!", subgraph: "Churros"), user: String!): ChurrosMutationDeleteContributionResult! @source(name: "deleteContribution", type: "MutationDeleteContributionResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  deleteDocument(id: ID!): Boolean! @hidden @join__field(graph: CHURROS)
  deleteDocumentFile(documentId: ID!, filename: String!): Boolean! @hidden @join__field(graph: CHURROS)
  deleteEvent(id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")): ChurrosMutationDeleteEventResult! @source(name: "deleteEvent", type: "MutationDeleteEventResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  deleteEventManager(eventId: ID!, user: String!): Boolean! @hidden @join__field(graph: CHURROS) @deprecated(reason: "Use 'removeEventManager' instead")
  deleteEventPicture(id: ID!): ChurrosEvent! @source(name: "deleteEventPicture", type: "Event!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  deleteGodchild(child: ChurrosUID! @source(name: "child", type: "UID!", subgraph: "Churros"), parent: ChurrosUID! @source(name: "parent", type: "UID!", subgraph: "Churros")): ChurrosMutationDeleteGodchildResult! @source(name: "deleteGodchild", type: "MutationDeleteGodchildResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """
  Supprime le parrain ou la marraine, que ce soit une demande de parrainage en cours ou simplement un·e parrain/marraine existant·e. Renvoie lea fillo·t·e
  """
  deleteGodparent(child: ChurrosUID! @source(name: "child", type: "UID!", subgraph: "Churros"), parent: ChurrosUID! @source(name: "parent", type: "UID!", subgraph: "Churros")): ChurrosMutationDeleteGodparentResult! @source(name: "deleteGodparent", type: "MutationDeleteGodparentResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  deleteGroup(uid: String!): Boolean! @hidden @join__field(graph: CHURROS)
  deleteGroupMember(group: ChurrosUID! @source(name: "group", type: "UID!", subgraph: "Churros"), user: ChurrosUID! @source(name: "user", type: "UID!", subgraph: "Churros")): ChurrosMutationDeleteGroupMemberResult! @source(name: "deleteGroupMember", type: "MutationDeleteGroupMemberResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  deleteGroupPicture(dark: Boolean!, uid: String!): Boolean! @hidden @join__field(graph: CHURROS) @deprecated(reason: "Use setPicture instead")
  """Supprimer un lien existant"""
  deleteLink(id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")): ChurrosMutationDeleteLinkResult! @source(name: "deleteLink", type: "MutationDeleteLinkResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """
  Supprimer l'enregistrement d'uncompte Lydia sur un groupe (ne supprime pas le compte Lydia Pro sur Lydia)
  """
  deleteLydiaAccount(id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")): ChurrosMutationDeleteLydiaAccountResult! @source(name: "deleteLydiaAccount", type: "MutationDeleteLydiaAccountResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """
  Supprime une page existante. On peut renseigner l'identifiant de la page ou son chemin ainsi que son groupe ou AE d'appartenance.
  """
  deletePage(
    """L'UID du groupe auquel la page appartient"""
    group: String
    """L'identifiant de la page à supprimer"""
    id: ID
    """Le chemin de la page à supprimer"""
    path: String
    """L'UID de l'AE à laquelle la page appartient"""
    studentAssociation: String
  ): ChurrosMutationDeletePageResult! @source(name: "deletePage", type: "MutationDeletePageResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  deleteQuickSignup(code: String!): ChurrosQuickSignup! @source(name: "deleteQuickSignup", type: "QuickSignup!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  deleteReaction(articleId: ID, commentId: ID, documentId: ID, emoji: String!, eventId: ID): Boolean! @hidden @join__field(graph: CHURROS)
  deleteSchoolPicture(id: String!): String! @hidden @join__field(graph: CHURROS)
  """Supprime un service"""
  deleteService(id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")): ChurrosMutationDeleteServiceResult! @source(name: "deleteService", type: "MutationDeleteServiceResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  deleteTicket(
    """Supprimer le billet même s'il existe des réservations"""
    force: Boolean! = false
    id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")
  ): ChurrosMutationDeleteTicketResult! @source(name: "deleteTicket", type: "MutationDeleteTicketResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  deleteTicketGroup(id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")): ChurrosMutationDeleteTicketGroupResult! @source(name: "deleteTicketGroup", type: "MutationDeleteTicketGroupResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  deleteToken(id: ID!): Boolean! @hidden @join__field(graph: CHURROS)
  deleteUserPicture(uid: String!): Boolean! @hidden @join__field(graph: CHURROS)
  finishPaypalRegistrationPayment(orderId: String!): ChurrosMutationFinishPaypalRegistrationPaymentResult! @source(name: "finishPaypalRegistrationPayment", type: "MutationFinishPaypalRegistrationPaymentResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  kioskReload(
    """
    UID de l'AE sur laquelle on veut indiquer que les kiosques concernés doivent être re-chargés
    """
    studentAssociation: String!
  ): Boolean! @hidden @join__field(graph: CHURROS)
  """Logs a user in and returns a session token."""
  login(clientId: String, email: String!, password: String!): ChurrosMutationLoginResult! @source(name: "login", type: "MutationLoginResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Logs a user out and invalidates the session token."""
  logout: Boolean! @hidden @join__field(graph: CHURROS)
  """
  Envoie une copie des réponses de l'utilisateur·ice connecté·e à ce formulaire par email. Renvoie l'adresse mail à laquelle les réponses ont été envoyées.
  """
  mailFormAnswers(
    """ID du formulaire"""
    formId: ID!
  ): ChurrosMutationMailFormAnswersResult! @source(name: "mailFormAnswers", type: "MutationMailFormAnswersResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Marquer une réservation comme payée"""
  markBookingAsPaid(
    """Code de la réservation"""
    code: String!
    """Aussi marquer la réservation comme vérifiée (scannée)"""
    verify: Boolean
  ): ChurrosMutationMarkBookingAsPaidResult! @source(name: "markBookingAsPaid", type: "MutationMarkBookingAsPaidResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Marquer une cotisation comme payée."""
  markContributionAsPaid(
    """
    Créer la cotisation si elle n'existe pas (et immédiatement la marquer comme payée)
    """
    create: Boolean! = false
    option: ChurrosLocalID! @source(name: "option", type: "LocalID!", subgraph: "Churros")
    user: ChurrosUID! @source(name: "user", type: "UID!", subgraph: "Churros")
  ): ChurrosMutationMarkContributionAsPaidResult! @source(name: "markContributionAsPaid", type: "MutationMarkContributionAsPaidResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  mergeDocuments(from: [ID!]!, into: ID!): ChurrosDocument! @source(name: "mergeDocuments", type: "Document!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  opposeRegistration(id: ID!): ChurrosMutationOpposeRegistrationResult! @source(name: "opposeRegistration", type: "MutationOpposeRegistrationResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  payBooking(
    """
    Montant que l'on souhaite payer. Par défaut, le prix du billet. Peut être supérieur si l'on souhaite payer plus
    """
    amount: Float
    """Code de réservation"""
    code: String!
    """
    URL ou chemin où renvoyer l'utilisateur.ice après confirmation du paiement. Sert par exemple pour l'URL de la notification de confirmation de paiement de la part de Lydia.
    """
    paidCallback: String
    paymentMethod: ChurrosPaymentMethod @source(name: "paymentMethod", type: "PaymentMethod", subgraph: "Churros")
    phone: String
  ): ChurrosMutationPayBookingResult! @source(name: "payBooking", type: "MutationPayBookingResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  react(
    emoji: String!
    """La ressource à laquelle réagir. ID global, avec préfixe."""
    target: ID!
  ): ChurrosReactable! @source(name: "react", type: "Reactable!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  refuseRegistration(email: String!, reason: String!): Boolean! @hidden @join__field(graph: CHURROS)
  """Enregistrer un token OAuth2 Google pour l'utilisateur connecté."""
  registerGoogleCredential(
    """Le code d'authorisation"""
    code: String!
  ): ChurrosMutationRegisterGoogleCredentialResult! @source(name: "registerGoogleCredential", type: "MutationRegisterGoogleCredentialResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Enlever un manager d'un événement"""
  removeEventManager(event: ChurrosLocalID! @source(name: "event", type: "LocalID!", subgraph: "Churros"), user: ChurrosUID! @source(name: "user", type: "UID!", subgraph: "Churros")): ChurrosMutationRemoveEventManagerResult! @source(name: "removeEventManager", type: "MutationRemoveEventManagerResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Supprimer un fichier d'une page."""
  removeFileFromPage(filename: String!, page: ID!): ChurrosMutationRemoveFileFromPageResult! @source(name: "removeFileFromPage", type: "MutationRemoveFileFromPageResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  renameSession(id: ID!, name: String!): Boolean! @hidden @join__field(graph: CHURROS)
  requestEmailChange(
    """
    URL vers laquelle faire pointer le lien de validation de la nouvelle adresse email. [token] sera remplacé par le token d'activation.
    """
    callbackURL: ChurrosURL! @source(name: "callbackURL", type: "URL!", subgraph: "Churros")
    """Nouvelle addresse e-mail"""
    newEmail: ChurrosEmail! @source(name: "newEmail", type: "Email!", subgraph: "Churros")
    """Personne à qui changer l'adresse email"""
    user: ChurrosUID! @source(name: "user", type: "UID!", subgraph: "Churros")
  ): ChurrosMutationRequestEmailChangeResult! @source(name: "requestEmailChange", type: "MutationRequestEmailChangeResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  resetPassword(disconnectAll: Boolean!, newPassword: String!, oldPassword: String!, uid: String!): ChurrosMutationResetPasswordResult! @source(name: "resetPassword", type: "MutationResetPasswordResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """
  Sauvegarder le numéro de téléphone pour les paiements Lydia de l'utilisateur.ice
  """
  saveLydiaPhoneNumber(phoneNumber: String!): ChurrosMutationSaveLydiaPhoneNumberResult! @source(name: "saveLydiaPhoneNumber", type: "MutationSaveLydiaPhoneNumberResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  selfJoinGroup(uid: ChurrosUID! @source(name: "uid", type: "UID!", subgraph: "Churros")): ChurrosMutationSelfJoinGroupResult! @source(name: "selfJoinGroup", type: "MutationSelfJoinGroupResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """
  Envoie une notification à l'utilisateur connecté. Limité à une notification par heure. Si l'utilisateur a désactivé les notifications de type “Autres” pour le groupe responsable du [client OAuth](/oauth) faisant la requête, la notification ne lui sera pas envoyée.
  """
  sendNotification(
    """Corps de la notification."""
    body: String!
    """
    Titre de la notification. Sera préfixé par “[Nom de l'application]” quand la mutation est appelée par un [client OAuth](/oauth).
    """
    title: String!
  ): Boolean! @hidden @join__field(graph: CHURROS)
  setDocumentFileIsSolution(documentId: ID!, filename: String!, isSolution: Boolean!): Boolean! @hidden @join__field(graph: CHURROS)
  """Définir les promotions applicables pour cet évènement."""
  setEventApplicableOffers(event: ChurrosLocalID! @source(name: "event", type: "LocalID!", subgraph: "Churros"), offers: [ChurrosPromotionType!]! @source(name: "offers", type: "[PromotionType!]!", subgraph: "Churros")): ChurrosMutationSetEventApplicableOffersResult! @source(name: "setEventApplicableOffers", type: "MutationSetEventApplicableOffersResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  setEventBeneficiary(
    event: ChurrosLocalID! @source(name: "event", type: "LocalID!", subgraph: "Churros")
    """
    Identifiant du compte Lydia. Null pour enlever le bénéficiaire de l'évènement
    """
    lydiaAccount: ChurrosLocalID @source(name: "lydiaAccount", type: "LocalID", subgraph: "Churros")
  ): ChurrosMutationSetEventBeneficiaryResult! @source(name: "setEventBeneficiary", type: "MutationSetEventBeneficiaryResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Changer les groupes co-organisateurs d'un événement"""
  setEventCoOrganizers(coOrganizers: [ChurrosUID!]! @source(name: "coOrganizers", type: "[UID!]!", subgraph: "Churros"), id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")): ChurrosMutationSetEventCoOrganizersResult! @source(name: "setEventCoOrganizers", type: "MutationSetEventCoOrganizersResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Définir les dates d'un évènement"""
  setEventDates(
    """Dates de l'évènement. Null pour supprimer les dates"""
    dates: ChurrosDateRangeInput @source(name: "dates", type: "DateRangeInput", subgraph: "Churros")
    id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")
  ): ChurrosMutationSetEventDatesResult! @source(name: "setEventDates", type: "MutationSetEventDatesResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """
  Changer la visibilité d'un événement. Un évènement dont les dates ne sont pas encore déclarées ne peut pas avoir une visiblité autre que Unlisted ou Private.
  """
  setEventVisibility(id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros"), visibility: ChurrosVisibility! @source(name: "visibility", type: "Visibility!", subgraph: "Churros")): ChurrosMutationSetEventVisibilityResult! @source(name: "setEventVisibility", type: "MutationSetEventVisibilityResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """
  Coche ou décoche la case à cocher à côté des réponses à un formulaire pour un·e utilisateur·ice.
  """
  setFormAnswersCheckbox(
    """Vrai pour cocher la case, faux pour la décocher"""
    checked: Boolean!
    """L'ID du formulaire"""
    form: String!
    """ID de l'utilisateur·ice"""
    userId: ID!
  ): ChurrosForm! @source(name: "setFormAnswersCheckbox", type: "Form!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Changer si la salle d'un groupe est fermée ou ouverte"""
  setGoupRoomOpenState(
    """L'uid du groupe"""
    group: ChurrosUID! @source(name: "group", type: "UID!", subgraph: "Churros")
    """Vrai si on veut indiquer que le local est maintenant ouvert """
    open: Boolean!
  ): ChurrosGroup! @source(name: "setGoupRoomOpenState", type: "Group!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Définir comment l'on peut rejoindre un groupe"""
  setGroupJoinPolicy(policy: ChurrosGroupJoinPolicy! @source(name: "policy", type: "GroupJoinPolicy!", subgraph: "Churros"), uid: ChurrosUID! @source(name: "uid", type: "UID!", subgraph: "Churros")): ChurrosMutationSetGroupJoinPolicyResult! @source(name: "setGroupJoinPolicy", type: "MutationSetGroupJoinPolicyResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Changer l'AE liée à un groupe"""
  setGroupStudentAssociation(group: ChurrosUID! @source(name: "group", type: "UID!", subgraph: "Churros"), studentAssociation: ChurrosUID! @source(name: "studentAssociation", type: "UID!", subgraph: "Churros")): ChurrosMutationSetGroupStudentAssociationResult! @source(name: "setGroupStudentAssociation", type: "MutationSetGroupStudentAssociationResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Changer le type d'un groupe"""
  setGroupType(
    type: ChurrosGroupType @source(name: "type", type: "GroupType", subgraph: "Churros")
    uid: ChurrosUID! @source(name: "uid", type: "UID!", subgraph: "Churros")
    """Si le groupe doit être caché des listes de groupes"""
    unlisted: Boolean
  ): ChurrosMutationSetGroupTypeResult! @source(name: "setGroupType", type: "MutationSetGroupTypeResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Changer le groupe parent d'un groupe"""
  setParentGroup(
    child: ChurrosUID! @source(name: "child", type: "UID!", subgraph: "Churros")
    """Le groupe parent. Null pour déconnecter d'un groupe parent"""
    parent: ChurrosUID @source(name: "parent", type: "UID", subgraph: "Churros")
  ): ChurrosMutationSetParentGroupResult! @source(name: "setParentGroup", type: "MutationSetParentGroupResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  setPicture(
    """Le fichier de l'image. Si null, l'image sera supprimée."""
    file: ChurrosFile @source(name: "file", type: "File", subgraph: "Churros")
    """Identifiant global de la resource sur laquelle on veut changer l'image"""
    resource: ID!
    """
    Pour quelle variante de thème changer l'image. Voir `Pictured.hasSeparateDarkPicture`.
    """
    variant: ChurrosThemeVariant! = Light @source(name: "variant", type: "ThemeVariant!", subgraph: "Churros")
  ): ChurrosMutationSetPictureResult! @source(name: "setPicture", type: "MutationSetPictureResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Changer la valeur d'une variable d'un thème"""
  setThemeValue(
    """ID du thème"""
    theme: ChurrosLocalID! @source(name: "theme", type: "LocalID!", subgraph: "Churros")
    """Valeur à utiliser. Doit être une valeur CSS valide"""
    value: String!
    variable: ChurrosThemeVariable! @source(name: "variable", type: "ThemeVariable!", subgraph: "Churros")
    """Variante du thème"""
    variant: ChurrosThemeVariant! @source(name: "variant", type: "ThemeVariant!", subgraph: "Churros")
  ): ChurrosTheme! @source(name: "setThemeValue", type: "Theme!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """
  Changer la visibilité d'un thème. Voir `Theme.canSetVisibility` pour déterminer si l'utilisateur·ice connecté·e peut changer la visibilité d'un thème à une certaine valeur
  """
  setThemeVisibility(
    """ID du thème"""
    theme: ChurrosLocalID! @source(name: "theme", type: "LocalID!", subgraph: "Churros")
    """Visibilité à utiliser"""
    visibility: ChurrosVisibility! @source(name: "visibility", type: "Visibility!", subgraph: "Churros")
  ): ChurrosTheme! @source(name: "setThemeVisibility", type: "Theme!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Définir le groupe d'un billet"""
  setTicketGroup(
    """
    Le groupe de billet dans lequel mettre ce billet. Null pour le retirer de tout groupe.
    """
    group: ChurrosLocalID @source(name: "group", type: "LocalID", subgraph: "Churros")
    ticket: ChurrosLocalID! @source(name: "ticket", type: "LocalID!", subgraph: "Churros")
  ): ChurrosMutationSetTicketGroupResult! @source(name: "setTicketGroup", type: "MutationSetTicketGroupResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  startSignup(
    email: ChurrosEmail! @source(name: "email", type: "Email!", subgraph: "Churros")
    """Prénom"""
    firstName: String!
    """Promo de la personne"""
    graduationYear: Int!
    """Nom de famille"""
    lastName: String!
    """
    Template d'URL à utliser pour le lien de validation d'adresse e-mail envoyé. [token] est remplacé par le token de validation dans l'URL donnée. La page à cette URL doit appeler Mutation.finishSignup.
    """
    mailVerificationCallbackURL: ChurrosURL! @source(name: "mailVerificationCallbackURL", type: "URL!", subgraph: "Churros")
    """Filière à laquelle la personne se déclare étudiant.e"""
    major: ChurrosUID @source(name: "major", type: "UID", subgraph: "Churros")
    """Mot de passe"""
    password: String!
    """Confirmation du mot de passe"""
    passwordConfirmation: String!
    """
    Code d'inscription rapide, pour s'inscrire sans mail étudiant et sans validation manuelle. Voir QuickSignupType.
    """
    quickSignupCode: String
  ): ChurrosMutationStartSignupResult! @source(name: "startSignup", type: "MutationStartSignupResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  subscribeToNotifications(endpoint: String!, expiresAt: ChurrosDateTime @source(name: "expiresAt", type: "DateTime", subgraph: "Churros"), keys: ChurrosNotificationSubscriptionKeysInput! @source(name: "keys", type: "NotificationSubscriptionKeysInput!", subgraph: "Churros"), name: String!): ChurrosMutationSubscribeToNotificationsResult! @source(name: "subscribeToNotifications", type: "MutationSubscribeToNotificationsResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  syncUserLdap(uid: String!): Boolean! @hidden @join__field(graph: CHURROS)
  testNotification(subscriptionEndpoint: String!): Boolean! @hidden @join__field(graph: CHURROS)
  toggleReaction(articleId: ID, commentId: ID, documentId: ID, emoji: String!, eventId: ID): ChurrosReactable! @source(name: "toggleReaction", type: "Reactable!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Marque une ressource comme partagée par l'utilisateur·ice connecté·e"""
  trackShare(
    """ID (global) de la ressource"""
    resource: ID!
  ): Boolean! @hidden @join__field(graph: CHURROS)
  """
  Débannir un·e utilisateur·rice d'un événement. Si l'utilisateur·ice n'était pas banni·e, cette mutation n'aura aucun effet (mais ne fait pas d'erreur).
  """
  unbanFromEvent(id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros"), user: ChurrosUID! @source(name: "user", type: "UID!", subgraph: "Churros")): ChurrosMutationUnbanFromEventResult! @source(name: "unbanFromEvent", type: "MutationUnbanFromEventResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Enlève une page de l'accès rapide"""
  unbookmark(
    """Chemin de la page à désépingler"""
    path: String!
  ): ChurrosBookmark @source(name: "unbookmark", type: "Bookmark", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Détacher un post de son événement"""
  unlinkEventFromPost(post: ChurrosLocalID! @source(name: "post", type: "LocalID!", subgraph: "Churros")): ChurrosMutationUnlinkEventFromPostResult! @source(name: "unlinkEventFromPost", type: "MutationUnlinkEventFromPostResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  unreact(
    emoji: String!
    """La ressource à laquelle enlever la réaction. ID global, avec préfixe."""
    target: ID!
  ): ChurrosReactable! @source(name: "unreact", type: "Reactable!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  unsubscribeFromNotifications(endpoint: String!): ChurrosMutationUnsubscribeFromNotificationsResult! @source(name: "unsubscribeFromNotifications", type: "MutationUnsubscribeFromNotificationsResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  updateArticlePicture(file: ChurrosFile! @source(name: "file", type: "File!", subgraph: "Churros"), id: ID!): String! @hidden @join__field(graph: CHURROS)
  """Mettre à jour les informations de base d'un évènement"""
  updateEvent(
    """
    Liste d'identifiants de promotions applicables à tout les billets de l'évènement
    """
    applicableOffers: [ChurrosPromotionType!] @source(name: "applicableOffers", type: "[PromotionType!]", subgraph: "Churros")
    """E-mail de contact de l'orga de l'évènement"""
    contactMail: String
    description: ChurrosMarkdown @source(name: "description", type: "Markdown", subgraph: "Churros")
    """Capacité globale de l'évènement"""
    globalCapacity: ChurrosCapacity @source(name: "globalCapacity", type: "Capacity", subgraph: "Churros")
    id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")
    """Vrai si l'évènement doit apparaître dans le mode kiosque"""
    includeInKiosk: Boolean
    """Lieu de l'évènement"""
    location: String
    """Afficher la capacité sur les billets"""
    showCapacity: Boolean = true
    """Afficher le nombre de places restantes sur les billets"""
    showPlacesLeft: Boolean = true
    """Titre de l'évènement"""
    title: String
  ): ChurrosMutationUpdateEventResult! @source(name: "updateEvent", type: "MutationUpdateEventResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  updateEventPicture(file: ChurrosFile! @source(name: "file", type: "File!", subgraph: "Churros"), id: ID!): ChurrosEvent! @source(name: "updateEventPicture", type: "Event!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Changer les caractéristiques de récurrence d'un évènement"""
  updateEventRecurrence(
    """Fréquence de récurrence de l'évènement"""
    frequency: ChurrosEventFrequency! = Once @source(name: "frequency", type: "EventFrequency!", subgraph: "Churros")
    """Identifiant de l'évènement"""
    id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")
    """
    Date de fin de la récurrence. Si non précisé, ne modifie pas la date. Il faut passer `frequency` à `Once` pour supprimer la date de fin de récurrence
    """
    recurringUntil: ChurrosDateTime @source(name: "recurringUntil", type: "DateTime", subgraph: "Churros")
  ): ChurrosMutationUpdateEventRecurrenceResult! @source(name: "updateEventRecurrence", type: "MutationUpdateEventRecurrenceResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Mettre à jour un membre d'un groupe"""
  updateGroupMember(group: ChurrosUID! @source(name: "group", type: "UID!", subgraph: "Churros"), input: ChurrosGroupMemberInput! @source(name: "input", type: "GroupMemberInput!", subgraph: "Churros"), user: ChurrosUID! @source(name: "user", type: "UID!", subgraph: "Churros")): ChurrosMutationUpdateGroupMemberResult! @source(name: "updateGroupMember", type: "MutationUpdateGroupMemberResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  updateGroupPicture(dark: Boolean!, file: ChurrosFile! @source(name: "file", type: "File!", subgraph: "Churros"), uid: String!): String! @hidden @join__field(graph: CHURROS) @deprecated(reason: "Use setPicture instead")
  """Mettre à jour le profil d'un groupe"""
  updateGroupProfile(profile: ChurrosGroupProfileInput! @source(name: "profile", type: "GroupProfileInput!", subgraph: "Churros"), uid: ChurrosUID! @source(name: "uid", type: "UID!", subgraph: "Churros")): ChurrosMutationUpdateGroupProfileResult! @source(name: "updateGroupProfile", type: "MutationUpdateGroupProfileResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Mettre à jour un lien existant"""
  updateLink(
    id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")
    """Texte à afficher pour le lien"""
    text: String
    url: ChurrosLooseURL @source(name: "url", type: "LooseURL", subgraph: "Churros")
  ): ChurrosMutationUpdateLinkResult! @source(name: "updateLink", type: "MutationUpdateLinkResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  updateNotificationSettings(enabledChannels: [ChurrosNotificationChannel!]! @source(name: "enabledChannels", type: "[NotificationChannel!]!", subgraph: "Churros"), uid: String!): [ChurrosNotificationChannel!]! @source(name: "updateNotificationSettings", type: "[NotificationChannel!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  updateSchool(address: String, aliasMailDomains: [String!]!, description: String, name: String!, studentMailDomain: String!, uid: String!): ChurrosSchool! @source(name: "updateSchool", type: "School!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  updateSchoolPicture(file: ChurrosFile! @source(name: "file", type: "File!", subgraph: "Churros"), id: String!): String! @hidden @join__field(graph: CHURROS)
  updateStudentAssociationPicture(file: ChurrosFile! @source(name: "file", type: "File!", subgraph: "Churros"), uid: String!): String! @hidden @join__field(graph: CHURROS)
  updateSubjectsExamDates: Boolean! @hidden @join__field(graph: CHURROS)
  """Mettre à jour un billet"""
  updateTicket(
    """Moyens de paiement acceptés pour ce billet"""
    allowedPaymentMethods: [ChurrosPaymentMethod!] @source(name: "allowedPaymentMethods", type: "[PaymentMethod!]", subgraph: "Churros")
    capacity: ChurrosCapacity @source(name: "capacity", type: "Capacity", subgraph: "Churros")
    countingPolicy: ChurrosTicketCountingPolicy! = OnBooked @source(name: "countingPolicy", type: "TicketCountingPolicy!", subgraph: "Churros")
    """
    Nombre maximum de parrainages par billet (0 pour désactiver les parrainages)
    """
    godsonLimit: Int
    """Prix maximum en euros du billet"""
    maximumPrice: Float
    """Prix minimum en euros du billet"""
    minimumPrice: Float
    name: String
    """Prix en euros du billet. Met à jour les prix minimum et maximum"""
    price: Float
    shotgun: ChurrosDateRangeInput @source(name: "shotgun", type: "DateRangeInput", subgraph: "Churros")
    ticket: ChurrosLocalID! @source(name: "ticket", type: "LocalID!", subgraph: "Churros")
  ): ChurrosMutationUpdateTicketResult! @source(name: "updateTicket", type: "MutationUpdateTicketResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  updateTicketConstraints(
    """
    Contraintes pour limiter la réservation du billet. Les différentes contraintes sont appliquées avec un “ET logique”: il faut que chacune des contraintes spécificées soient remplies par la personne voulant réserver.
    """
    constraints: ChurrosTicketConstraintsInput! @source(name: "constraints", type: "TicketConstraintsInput!", subgraph: "Churros")
    ticket: ChurrosLocalID! @source(name: "ticket", type: "LocalID!", subgraph: "Churros")
  ): ChurrosMutationUpdateTicketConstraintsResult! @source(name: "updateTicketConstraints", type: "MutationUpdateTicketConstraintsResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  updateUser(
    address: String!
    apprentice: Boolean!
    birthday: ChurrosDateTime @source(name: "birthday", type: "DateTime", subgraph: "Churros")
    cededImageRightsToTVn7: Boolean!
    contributesWith: [ID!]
    description: String!
    email: String!
    firstName: String!
    """
    An empty string removes the godparent. Passing null (or undefined) does not update the godparent. An uid sets the godparent to that uid.
    """
    godparentUid: String
    graduationYear: Int
    lastName: String!
    majorId: ID
    minorId: ID
    nickname: String!
    otherEmails: [String!]!
    phone: String!
    uid: ChurrosUID! @source(name: "uid", type: "UID!", subgraph: "Churros")
  ): ChurrosMutationUpdateUserResult! @source(name: "updateUser", type: "MutationUpdateUserResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS) @deprecated(reason: "Use `updateUserProfile`, `requestEmailChange` and other `updateUser*` mutations instead")
  updateUserCandidate(
    birthday: ChurrosDateTime @source(name: "birthday", type: "DateTime", subgraph: "Churros")
    cededImageRightsToTVn7: Boolean!
    email: String!
    firstName: String!
    graduationYear: Int!
    lastName: String!
    majorId: ID!
    """
    Inscrire définitivement l'utilisateur·ice si vrai. Si faux, mettre à jour la demande d'inscription sans créer de compte
    """
    register: Boolean!
    """Le @ souhaité"""
    uid: ChurrosUID! @source(name: "uid", type: "UID!", subgraph: "Churros")
  ): ChurrosMutationUpdateUserCandidateResult! @source(name: "updateUserCandidate", type: "MutationUpdateUserCandidateResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Met à jour les infos sur le cursus scolaire de l'utilisateur.ice"""
  updateUserCurriculum(
    apprentice: Boolean
    """
    Vrai pour déconnecter la personne de sa filière (et donc faire du compte un compte exté)
    """
    external: Boolean
    graduationYear: ChurrosPositiveInt @source(name: "graduationYear", type: "PositiveInt", subgraph: "Churros")
    major: ChurrosUID @source(name: "major", type: "UID", subgraph: "Churros")
    uid: ChurrosUID! @source(name: "uid", type: "UID!", subgraph: "Churros")
  ): ChurrosMutationUpdateUserCurriculumResult! @source(name: "updateUserCurriculum", type: "MutationUpdateUserCurriculumResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  updateUserPermissions(adminOf: [ChurrosUID!] @source(name: "adminOf", type: "[UID!]", subgraph: "Churros"), canAccessDocuments: Boolean, canEditGroupsOf: [ChurrosUID!] @source(name: "canEditGroupsOf", type: "[UID!]", subgraph: "Churros"), user: ChurrosUID! @source(name: "user", type: "UID!", subgraph: "Churros")): ChurrosMutationUpdateUserPermissionsResult! @source(name: "updateUserPermissions", type: "MutationUpdateUserPermissionsResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  updateUserPicture(file: ChurrosFile! @source(name: "file", type: "File!", subgraph: "Churros"), uid: String!): String! @hidden @join__field(graph: CHURROS)
  """Met à jour le profil de l'utilisateur"""
  updateUserProfile(profile: ChurrosUserProfileInput! @source(name: "profile", type: "UserProfileInput!", subgraph: "Churros"), uid: ChurrosUID! @source(name: "uid", type: "UID!", subgraph: "Churros")): ChurrosMutationUpdateUserProfileResult! @source(name: "updateUserProfile", type: "MutationUpdateUserProfileResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  uploadDocumentFile(documentId: ID!, file: ChurrosFile! @source(name: "file", type: "File!", subgraph: "Churros"), solution: Boolean!): String! @hidden @join__field(graph: CHURROS)
  upsertAnnouncement(body: String!, endsAt: ChurrosDateTime! @source(name: "endsAt", type: "DateTime!", subgraph: "Churros"), id: ID, startsAt: ChurrosDateTime! @source(name: "startsAt", type: "DateTime!", subgraph: "Churros"), title: String!, warning: Boolean!): ChurrosMutationUpsertAnnouncementResult! @source(name: "upsertAnnouncement", type: "MutationUpsertAnnouncementResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Crée ou met à jour un post"""
  upsertArticle(body: String!, event: ID, group: ChurrosUID! @source(name: "group", type: "UID!", subgraph: "Churros"), id: ID, publishedAt: ChurrosDateTime @source(name: "publishedAt", type: "DateTime", subgraph: "Churros"), title: String!, visibility: ChurrosVisibility! @source(name: "visibility", type: "Visibility!", subgraph: "Churros")): ChurrosMutationUpsertArticleResult! @source(name: "upsertArticle", type: "MutationUpsertArticleResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS) @deprecated(reason: "Use upsertArticleV2 instead")
  """Crée ou met à jour un post"""
  upsertArticleV2(group: ChurrosUID @source(name: "group", type: "UID", subgraph: "Churros"), id: ChurrosLocalID @source(name: "id", type: "LocalID", subgraph: "Churros"), input: ChurrosPostInput! @source(name: "input", type: "PostInput!", subgraph: "Churros")): ChurrosMutationUpsertArticleV2Result! @source(name: "upsertArticleV2", type: "MutationUpsertArticleV2Result!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  upsertComment(body: String!, id: ID, inReplyToId: ID, resourceId: ID): ChurrosComment! @source(name: "upsertComment", type: "Comment!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  upsertDocument(description: String!, id: ID, schoolYear: Int!, subject: ID!, title: String!, type: ChurrosDocumentType! @source(name: "type", type: "DocumentType!", subgraph: "Churros")): ChurrosMutationUpsertDocumentResult! @source(name: "upsertDocument", type: "MutationUpsertDocumentResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  upsertEventManager(event: ChurrosLocalID! @source(name: "event", type: "LocalID!", subgraph: "Churros"), powerlevel: ChurrosEventManagerPowerLevel! @source(name: "powerlevel", type: "EventManagerPowerLevel!", subgraph: "Churros"), user: ChurrosUID! @source(name: "user", type: "UID!", subgraph: "Churros")): ChurrosMutationUpsertEventManagerResult! @source(name: "upsertEventManager", type: "MutationUpsertEventManagerResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """
  Crée ou met à jour un formulaire. À la création, une section de formulaire vide sans titre est automatiquement créée. C'est pratique pour les formulaires sans section.
  """
  upsertForm(input: ChurrosMutationUpsertFormInput! @source(name: "input", type: "MutationUpsertFormInput!", subgraph: "Churros")): ChurrosForm! @source(name: "upsertForm", type: "Form!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Crée ou met à jour une section de formulaire."""
  upsertFormSection(input: ChurrosMutationUpsertFormSectionInput! @source(name: "input", type: "MutationUpsertFormSectionInput!", subgraph: "Churros")): ChurrosFormSection! @source(name: "upsertFormSection", type: "FormSection!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  upsertGodparentRequest(godchildUid: String!, godparentUid: String!, id: ID): ChurrosMutationUpsertGodparentRequestResult! @source(name: "upsertGodparentRequest", type: "MutationUpsertGodparentRequestResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  upsertGroup(input: ChurrosUpsertGroupInput! @source(name: "input", type: "UpsertGroupInput!", subgraph: "Churros"), uid: ChurrosUID @source(name: "uid", type: "UID", subgraph: "Churros")): ChurrosMutationUpsertGroupResult! @source(name: "upsertGroup", type: "MutationUpsertGroupResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS) @deprecated(reason: "Mutation séparée en plusieurs mutations plus spécifiques. Voir la documentation du module groups")
  upsertGroupMember(canEditArticles: Boolean!, canEditMembers: Boolean!, canScanEvents: Boolean!, groupId: ID!, isDeveloper: Boolean!, memberId: ID!, president: Boolean!, secretary: Boolean!, title: String!, treasurer: Boolean!, vicePresident: Boolean!): ChurrosGroupMember! @source(name: "upsertGroupMember", type: "GroupMember!", subgraph: "Churros") @hidden @join__field(graph: CHURROS) @deprecated(reason: "Utiliser `updateGroupMember` et `addGroupMemberV2` à la place")
  upsertLydiaAccount(groupUid: String!, id: ID, name: String!, privateToken: String!, vendorToken: String!): ChurrosMutationUpsertLydiaAccountResult! @source(name: "upsertLydiaAccount", type: "MutationUpsertLydiaAccountResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  upsertManagersOfEvent(eventId: ID!, managers: [ChurrosManagerOfEventInput!]! @source(name: "managers", type: "[ManagerOfEventInput!]!", subgraph: "Churros")): [ChurrosEventManager!]! @source(name: "upsertManagersOfEvent", type: "[EventManager!]!", subgraph: "Churros") @hidden @join__field(graph: CHURROS) @deprecated(reason: "Use 'upsertEventManager' and 'removeEventManager' instead")
  """Crée ou met à jour une page."""
  upsertPage(
    """Le corps de la page. Supporte le markdown"""
    body: String!
    """L'UID du groupe auquel la page appartient"""
    group: String
    """
    Le chemin de la page. Si la page existe déjà, elle sera mise à jour. Sinon, une nouvelle page sera créée. Ne peut contenir que des caractères alphanumériques, des tirets, des tirets du bas et des slashes. Fait pour être utilisé dans des URLs.
    """
    path: String!
    """L'UID de l'AE à laquelle la page appartient"""
    studentAssociation: String
    """Le titre de la page"""
    title: String!
  ): ChurrosMutationUpsertPageResult! @source(name: "upsertPage", type: "MutationUpsertPageResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Crée ou met à jour une question."""
  upsertQuestion(input: ChurrosMutationUpsertQuestionInput! @source(name: "input", type: "MutationUpsertQuestionInput!", subgraph: "Churros")): ChurrosQuestion! @source(name: "upsertQuestion", type: "Question!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  upsertReaction(articleId: ID, commentId: ID, documentId: ID, emoji: String!, eventId: ID, id: ID): Int! @hidden @join__field(graph: CHURROS) @deprecated(reason: "Use 'react' instead")
  upsertRegistration(authorEmail: String, beneficiary: String, id: ID, paid: Boolean!, paymentMethod: ChurrosPaymentMethod @source(name: "paymentMethod", type: "PaymentMethod", subgraph: "Churros"), ticketId: ID!): ChurrosMutationUpsertRegistrationResult! @source(name: "upsertRegistration", type: "MutationUpsertRegistrationResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS) @deprecated(reason: "Use bookEvent instead")
  upsertService(description: String!, groupUid: String, id: ChurrosLocalID @source(name: "id", type: "LocalID", subgraph: "Churros"), importance: Int = 0, logo: String!, logoSourceType: ChurrosLogoSourceType! @source(name: "logoSourceType", type: "LogoSourceType!", subgraph: "Churros"), name: String!, schoolUid: String, studentAssociationUid: String, url: String!): ChurrosMutationUpsertServiceResult! @source(name: "upsertService", type: "MutationUpsertServiceResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS) @deprecated(reason: "Use 'upsertServiceV2' instead")
  """Create or update a service"""
  upsertServiceV2(id: ChurrosLocalID @source(name: "id", type: "LocalID", subgraph: "Churros"), input: ChurrosServiceInput! @source(name: "input", type: "ServiceInput!", subgraph: "Churros")): ChurrosMutationUpsertServiceV2Result! @source(name: "upsertServiceV2", type: "MutationUpsertServiceV2Result!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  """Créer ou modifier un thème"""
  upsertTheme(autodeploy: Boolean!, endsAt: ChurrosDateTime! @source(name: "endsAt", type: "DateTime!", subgraph: "Churros"), group: ChurrosUID! @source(name: "group", type: "UID!", subgraph: "Churros"), id: ChurrosLocalID @source(name: "id", type: "LocalID", subgraph: "Churros"), name: String!, startsAt: ChurrosDateTime! @source(name: "startsAt", type: "DateTime!", subgraph: "Churros")): ChurrosMutationUpsertThemeResult! @source(name: "upsertTheme", type: "MutationUpsertThemeResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  upsertTicketGroup(
    capacity: Int
    """Ne sert qu'à la création."""
    event: ChurrosLocalID @source(name: "event", type: "LocalID", subgraph: "Churros")
    id: ChurrosLocalID @source(name: "id", type: "LocalID", subgraph: "Churros")
    name: String
  ): ChurrosMutationUpsertTicketGroupResult! @source(name: "upsertTicketGroup", type: "MutationUpsertTicketGroupResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  usePasswordReset(newPassword: String!, token: String!): ChurrosMutationUsePasswordResetResult! @source(name: "usePasswordReset", type: "MutationUsePasswordResetResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  validateEmail(token: String!): ChurrosMutationValidateEmailResult! @source(name: "validateEmail", type: "MutationValidateEmailResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
  verifyBooking(
    """
    URL vers la page du billet, permet d'extraire le code de réservation depuis le contenu du QR Code, qui peut alors être une URL vers le billet plutôt qu'un simple code. `[code]` correspond au code de réservation dans cette URL.
    """
    bookingURLTemplate: ChurrosURL @source(name: "bookingURLTemplate", type: "URL", subgraph: "Churros")
    """Identifiant de l’événement"""
    event: ChurrosLocalID! @source(name: "event", type: "LocalID!", subgraph: "Churros")
    """Contenu du QR Code décodé"""
    qrcode: String!
  ): ChurrosMutationVerifyBookingResult! @source(name: "verifyBooking", type: "MutationVerifyBookingResult!", subgraph: "Churros") @hidden @join__field(graph: CHURROS)
}

"""Transactional creation response"""
type TransactionApplicationResponse @join__type(graph: AUTHENTIK) {
  applied: Boolean!
  logs: [String]!
}

type UserServiceAccountResponse @join__type(graph: AUTHENTIK) {
  username: String!
  token: String!
  userUid: String! @source(name: "user_uid", type: "String!", subgraph: "Authentik")
  userPk: Int! @source(name: "user_pk", type: "Int!", subgraph: "Authentik")
  groupPk: String @source(name: "group_pk", type: "String", subgraph: "Authentik")
}

"""Notification test serializer"""
type NotificationTransportTest @join__type(graph: AUTHENTIK) {
  messages: [String]!
}

"""Logs of an attempted flow import"""
type FlowImportResult @join__type(graph: AUTHENTIK) {
  logs: [LogEvent]!
  success: Boolean!
}

"""Result of a Property-mapping test"""
type PropertyMappingTestResult @join__type(graph: AUTHENTIK) {
  result: String!
  successful: Boolean!
}

"""Result of a single object sync"""
type SyncObjectResult @join__type(graph: AUTHENTIK) {
  messages: [LogEvent]!
}

"""Result from assigning permissions to a user/role"""
type PermissionAssignResult @join__type(graph: AUTHENTIK) {
  id: String!
}

type DuoDeviceEnrollmentStatus @join__type(graph: AUTHENTIK) {
  duoResponse: DuoResponseEnum! @source(name: "duo_response", type: "DuoResponseEnum!", subgraph: "Authentik")
}

type AuthenticatorDuoStageDeviceImportResponse @join__type(graph: AUTHENTIK) {
  count: Int!
  error: String!
}

"""
Announcement is a way to get a message accross the entire site, such as for maintenance announcements.
"""
type ChurrosAnnouncement implements ChurrosNode @source(name: "Announcement", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosNode") {
  body: String!
  bodyHtml: String!
  by: ChurrosUser @source(name: "by", type: "User", subgraph: "Churros")
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  endsAt: ChurrosDateTime! @source(name: "endsAt", type: "DateTime!", subgraph: "Churros")
  id: ID!
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  startsAt: ChurrosDateTime! @source(name: "startsAt", type: "DateTime!", subgraph: "Churros")
  title: String!
  updatedAt: ChurrosDateTime! @source(name: "updatedAt", type: "DateTime!", subgraph: "Churros")
  userId: ID
  warning: Boolean!
}

"""Réponse de type `Date` (voir [`QuestionKind`](#QuestionKind))"""
type ChurrosAnswerDate implements ChurrosAnswer @source(name: "AnswerDate", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosAnswer") {
  answerString: String!
  """Réservation associée à la réponse"""
  booking: ChurrosRegistration @source(name: "booking", type: "Registration", subgraph: "Churros")
  checkboxIsMarked: Boolean
  """Date de création de la réponse"""
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  """Utilisateur ayant répondu à la question"""
  createdBy: ChurrosUser @source(name: "createdBy", type: "User", subgraph: "Churros")
  """Formulaire auquel appartient la question"""
  form: ChurrosForm! @source(name: "form", type: "Form!", subgraph: "Churros")
  """Préfixe de l'identifiant: `answer:`"""
  id: ID!
  """Question à laquelle la réponse est associée"""
  question: ChurrosQuestionScalar! @source(name: "question", type: "QuestionScalar!", subgraph: "Churros")
  """Réponse donnée, brute (sous forme de texte)"""
  rawValue: String
  """Section du formulaire auquel appartient la question"""
  section: ChurrosFormSection! @source(name: "section", type: "FormSection!", subgraph: "Churros")
  """Date de dernière mise à jour de la réponse"""
  updatedAt: ChurrosDateTime! @source(name: "updatedAt", type: "DateTime!", subgraph: "Churros")
  """Réponse donnée"""
  value: ChurrosDateTime @source(name: "value", type: "DateTime", subgraph: "Churros")
}

"""Réponse de type `FileUpload` (voir [`QuestionKind`](#QuestionKind))"""
type ChurrosAnswerFileUpload implements ChurrosAnswer @source(name: "AnswerFileUpload", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosAnswer") {
  answerString: String!
  """Réservation associée à la réponse"""
  booking: ChurrosRegistration @source(name: "booking", type: "Registration", subgraph: "Churros")
  checkboxIsMarked: Boolean
  """Date de création de la réponse"""
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  """Utilisateur ayant répondu à la question"""
  createdBy: ChurrosUser @source(name: "createdBy", type: "User", subgraph: "Churros")
  """Formulaire auquel appartient la question"""
  form: ChurrosForm! @source(name: "form", type: "Form!", subgraph: "Churros")
  """Préfixe de l'identifiant: `answer:`"""
  id: ID!
  """Question à laquelle la réponse est associée"""
  question: ChurrosQuestionFileUpload! @source(name: "question", type: "QuestionFileUpload!", subgraph: "Churros")
  """Section du formulaire auquel appartient la question"""
  section: ChurrosFormSection! @source(name: "section", type: "FormSection!", subgraph: "Churros")
  """Date de dernière mise à jour de la réponse"""
  updatedAt: ChurrosDateTime! @source(name: "updatedAt", type: "DateTime!", subgraph: "Churros")
  """Réponse donnée"""
  value: String
}

"""Réponse de type `LongText` (voir [`QuestionKind`](#QuestionKind))"""
type ChurrosAnswerLongText implements ChurrosAnswer @source(name: "AnswerLongText", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosAnswer") {
  answerString: String!
  """Réservation associée à la réponse"""
  booking: ChurrosRegistration @source(name: "booking", type: "Registration", subgraph: "Churros")
  checkboxIsMarked: Boolean
  """Date de création de la réponse"""
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  """Utilisateur ayant répondu à la question"""
  createdBy: ChurrosUser @source(name: "createdBy", type: "User", subgraph: "Churros")
  """Formulaire auquel appartient la question"""
  form: ChurrosForm! @source(name: "form", type: "Form!", subgraph: "Churros")
  """Préfixe de l'identifiant: `answer:`"""
  id: ID!
  """Question à laquelle la réponse est associée"""
  question: ChurrosQuestionScalar! @source(name: "question", type: "QuestionScalar!", subgraph: "Churros")
  """Section du formulaire auquel appartient la question"""
  section: ChurrosFormSection! @source(name: "section", type: "FormSection!", subgraph: "Churros")
  """Date de dernière mise à jour de la réponse"""
  updatedAt: ChurrosDateTime! @source(name: "updatedAt", type: "DateTime!", subgraph: "Churros")
  """Réponse donnée"""
  value: String
}

"""Réponse de type `Number` (voir [`QuestionKind`](#QuestionKind))"""
type ChurrosAnswerNumber implements ChurrosAnswer @source(name: "AnswerNumber", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosAnswer") {
  answerString: String!
  """Réservation associée à la réponse"""
  booking: ChurrosRegistration @source(name: "booking", type: "Registration", subgraph: "Churros")
  checkboxIsMarked: Boolean
  """Date de création de la réponse"""
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  """Utilisateur ayant répondu à la question"""
  createdBy: ChurrosUser @source(name: "createdBy", type: "User", subgraph: "Churros")
  """Formulaire auquel appartient la question"""
  form: ChurrosForm! @source(name: "form", type: "Form!", subgraph: "Churros")
  """Préfixe de l'identifiant: `answer:`"""
  id: ID!
  """Question à laquelle la réponse est associée"""
  question: ChurrosQuestionScalar! @source(name: "question", type: "QuestionScalar!", subgraph: "Churros")
  """Section du formulaire auquel appartient la question"""
  section: ChurrosFormSection! @source(name: "section", type: "FormSection!", subgraph: "Churros")
  """Date de dernière mise à jour de la réponse"""
  updatedAt: ChurrosDateTime! @source(name: "updatedAt", type: "DateTime!", subgraph: "Churros")
  """Réponse donnée"""
  value: Float
}

"""Réponse de type `Scale` (voir [`QuestionKind`](#QuestionKind))"""
type ChurrosAnswerScale implements ChurrosAnswer @source(name: "AnswerScale", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosAnswer") {
  answerString: String!
  """Réservation associée à la réponse"""
  booking: ChurrosRegistration @source(name: "booking", type: "Registration", subgraph: "Churros")
  checkboxIsMarked: Boolean
  """Date de création de la réponse"""
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  """Utilisateur ayant répondu à la question"""
  createdBy: ChurrosUser @source(name: "createdBy", type: "User", subgraph: "Churros")
  """Formulaire auquel appartient la question"""
  form: ChurrosForm! @source(name: "form", type: "Form!", subgraph: "Churros")
  """Préfixe de l'identifiant: `answer:`"""
  id: ID!
  """Réponse donnée, entre 0 et 1"""
  normalizedValue: Float
  """Question à laquelle la réponse est associée"""
  question: ChurrosQuestionScale! @source(name: "question", type: "QuestionScale!", subgraph: "Churros")
  """Section du formulaire auquel appartient la question"""
  section: ChurrosFormSection! @source(name: "section", type: "FormSection!", subgraph: "Churros")
  """Date de dernière mise à jour de la réponse"""
  updatedAt: ChurrosDateTime! @source(name: "updatedAt", type: "DateTime!", subgraph: "Churros")
  """Réponse donnée"""
  value: Int
}

type ChurrosAnswerSearchResult @source(name: "AnswerSearchResult", subgraph: "Churros") @join__type(graph: CHURROS) {
  answer: ChurrosAnswer! @source(name: "answer", type: "Answer!", subgraph: "Churros")
  id: ID!
  rank: Float
  similarity: Float!
}

"""
Réponse de type `SelectMultiple` (voir [`QuestionKind`](#QuestionKind))
"""
type ChurrosAnswerSelectMultiple implements ChurrosAnswer @source(name: "AnswerSelectMultiple", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosAnswer") {
  answerString: String!
  """Réservation associée à la réponse"""
  booking: ChurrosRegistration @source(name: "booking", type: "Registration", subgraph: "Churros")
  checkboxIsMarked: Boolean
  """Date de création de la réponse"""
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  """Utilisateur ayant répondu à la question"""
  createdBy: ChurrosUser @source(name: "createdBy", type: "User", subgraph: "Churros")
  """Formulaire auquel appartient la question"""
  form: ChurrosForm! @source(name: "form", type: "Form!", subgraph: "Churros")
  """Préfixe de l'identifiant: `answer:`"""
  id: ID!
  """Question à laquelle la réponse est associée"""
  question: ChurrosQuestionSelectMultiple! @source(name: "question", type: "QuestionSelectMultiple!", subgraph: "Churros")
  """Section du formulaire auquel appartient la question"""
  section: ChurrosFormSection! @source(name: "section", type: "FormSection!", subgraph: "Churros")
  """Date de dernière mise à jour de la réponse"""
  updatedAt: ChurrosDateTime! @source(name: "updatedAt", type: "DateTime!", subgraph: "Churros")
  """Réponse donnée"""
  value: [String!]
}

"""Réponse de type `SelectOne` (voir [`QuestionKind`](#QuestionKind))"""
type ChurrosAnswerSelectOne implements ChurrosAnswer @source(name: "AnswerSelectOne", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosAnswer") {
  answerString: String!
  """Réservation associée à la réponse"""
  booking: ChurrosRegistration @source(name: "booking", type: "Registration", subgraph: "Churros")
  checkboxIsMarked: Boolean
  """Date de création de la réponse"""
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  """Utilisateur ayant répondu à la question"""
  createdBy: ChurrosUser @source(name: "createdBy", type: "User", subgraph: "Churros")
  """Formulaire auquel appartient la question"""
  form: ChurrosForm! @source(name: "form", type: "Form!", subgraph: "Churros")
  """Préfixe de l'identifiant: `answer:`"""
  id: ID!
  """Question à laquelle la réponse est associée"""
  question: ChurrosQuestionSelectOne! @source(name: "question", type: "QuestionSelectOne!", subgraph: "Churros")
  """Section du formulaire auquel appartient la question"""
  section: ChurrosFormSection! @source(name: "section", type: "FormSection!", subgraph: "Churros")
  """Date de dernière mise à jour de la réponse"""
  updatedAt: ChurrosDateTime! @source(name: "updatedAt", type: "DateTime!", subgraph: "Churros")
  """Réponse donnée"""
  value: String
}

"""Réponse de type `Text` (voir [`QuestionKind`](#QuestionKind))"""
type ChurrosAnswerText implements ChurrosAnswer @source(name: "AnswerText", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosAnswer") {
  answerString: String!
  """Réservation associée à la réponse"""
  booking: ChurrosRegistration @source(name: "booking", type: "Registration", subgraph: "Churros")
  checkboxIsMarked: Boolean
  """Date de création de la réponse"""
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  """Utilisateur ayant répondu à la question"""
  createdBy: ChurrosUser @source(name: "createdBy", type: "User", subgraph: "Churros")
  """Formulaire auquel appartient la question"""
  form: ChurrosForm! @source(name: "form", type: "Form!", subgraph: "Churros")
  """Préfixe de l'identifiant: `answer:`"""
  id: ID!
  """Question à laquelle la réponse est associée"""
  question: ChurrosQuestionScalar! @source(name: "question", type: "QuestionScalar!", subgraph: "Churros")
  """Section du formulaire auquel appartient la question"""
  section: ChurrosFormSection! @source(name: "section", type: "FormSection!", subgraph: "Churros")
  """Date de dernière mise à jour de la réponse"""
  updatedAt: ChurrosDateTime! @source(name: "updatedAt", type: "DateTime!", subgraph: "Churros")
  """Réponse donnée"""
  value: String
}

"""Réponse de type `Time` (voir [`QuestionKind`](#QuestionKind))"""
type ChurrosAnswerTime implements ChurrosAnswer @source(name: "AnswerTime", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosAnswer") {
  answer: ChurrosAnswer! @source(name: "answer", type: "Answer!", subgraph: "Churros")
  answerString: String!
  """Réservation associée à la réponse"""
  booking: ChurrosRegistration @source(name: "booking", type: "Registration", subgraph: "Churros")
  checkboxIsMarked: Boolean
  """Date de création de la réponse"""
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  """Utilisateur ayant répondu à la question"""
  createdBy: ChurrosUser @source(name: "createdBy", type: "User", subgraph: "Churros")
  """Formulaire auquel appartient la question"""
  form: ChurrosForm! @source(name: "form", type: "Form!", subgraph: "Churros")
  """Préfixe de l'identifiant: `answer:`"""
  id: ID!
  """Question à laquelle la réponse est associée"""
  question: ChurrosQuestionScalar! @source(name: "question", type: "QuestionScalar!", subgraph: "Churros")
  """Réponse donnée, brute (sous forme de texte)"""
  rawValue: String
  """Section du formulaire auquel appartient la question"""
  section: ChurrosFormSection! @source(name: "section", type: "FormSection!", subgraph: "Churros")
  """Date de dernière mise à jour de la réponse"""
  updatedAt: ChurrosDateTime! @source(name: "updatedAt", type: "DateTime!", subgraph: "Churros")
  """Réponse donnée"""
  value: ChurrosDateTime @source(name: "value", type: "DateTime", subgraph: "Churros")
}

"""
Représente toutes les réponses d'un·e utilisateur·ice à un formulaire. Pratique pour grouper les réponses afin de les afficher dans un tableau
"""
type ChurrosAnswersOfUser @source(name: "AnswersOfUser", subgraph: "Churros") @join__type(graph: CHURROS) {
  answers: [ChurrosAnswer!]! @source(name: "answers", type: "[Answer!]!", subgraph: "Churros")
  """Correspond à la date de dernière réponse parmis les réponses"""
  date: ChurrosDateTime! @source(name: "date", type: "DateTime!", subgraph: "Churros")
  user: ChurrosUser! @source(name: "user", type: "User!", subgraph: "Churros")
}

"""An article is a post in a group"""
type ChurrosArticle implements ChurrosCommentable & ChurrosNode & ChurrosPictured & ChurrosReactable & ChurrosShareable @source(name: "Article", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosCommentable") @join__implements(graph: CHURROS, interface: "ChurrosNode") @join__implements(graph: CHURROS, interface: "ChurrosPictured") @join__implements(graph: CHURROS, interface: "ChurrosReactable") @join__implements(graph: CHURROS, interface: "ChurrosShareable") {
  author: ChurrosUser @source(name: "author", type: "User", subgraph: "Churros")
  authorId: ID
  body: String!
  bodyHtml: String! @deprecated(reason: "Use bodyHtmlSafe. bodyHtmlSafe will eventually be renamed to bodyHtml too.")
  bodyHtmlSafe: ChurrosHTML! @source(name: "bodyHtmlSafe", type: "HTML!", subgraph: "Churros")
  bodyPreview: String!
  """
  Vrai si l'utilisateur·ice connecté·e peut éditer le post (en considérant qu'iel ne va pas changer l'auteur·ice ou le groupe du post)
  """
  canBeEdited: Boolean! @deprecated(reason: "Use canEdit instead.")
  """
  Vrai si l'utilisateur·ice connecté·e peut éditer le post (en considérant qu'iel ne va pas changer l'auteur·ice ou le groupe du post)
  """
  canEdit(assert: String): Boolean!
  comments(after: String, before: String, first: Int, last: Int): ChurrosCommentsConnection! @source(name: "comments", type: "CommentsConnection!", subgraph: "Churros")
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  event: ChurrosEvent @source(name: "event", type: "Event", subgraph: "Churros")
  eventId: ID
  group: ChurrosGroup! @source(name: "group", type: "Group!", subgraph: "Churros")
  groupId: ID!
  """
  Si la ressource supported d'avoir une image en thème sombre différente de celle en thème clair
  """
  hasSeparateDarkPicture: Boolean!
  id: ID!
  links: [ChurrosLink!]! @source(name: "links", type: "[Link!]!", subgraph: "Churros")
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  myReactions: ChurrosBooleanMap! @source(name: "myReactions", type: "BooleanMap!", subgraph: "Churros")
  notifiedAt: ChurrosDateTime @source(name: "notifiedAt", type: "DateTime", subgraph: "Churros")
  """Texte alternatif de l'image"""
  pictureAltText: String!
  pictureFile: String!
  """Le nom du fichier de l'image, en thème sombre"""
  pictureFileDark: String!
  """L'URL publique de l'image"""
  pictureURL(
    """Utiliser l'image en thème sombre"""
    dark: Boolean! = false
    """
    Ajouter un timestamp à la fin de l'URL pour forcer le navigateur à recharger l'image. Le timestamp correspond à la date de dernière mise à jour de la ressource (si disponible), ou à l'heure actuelle.
    """
    timestamp: Boolean! = true
  ): String!
  published: Boolean!
  publishedAt: ChurrosDateTime! @source(name: "publishedAt", type: "DateTime!", subgraph: "Churros")
  """Vrai si l’utilisateur·ice connecté·e a réagi avec cet emoji"""
  reacted(emoji: String!): Boolean!
  reactionCounts: ChurrosCounts! @source(name: "reactionCounts", type: "Counts!", subgraph: "Churros")
  """Nombre total de réactions avec cet emoji"""
  reactions(emoji: String!): Int!
  shares: Int!
  """Un nom lisible sans espaces, adaptés pour des URLs."""
  slug: String!
  title: String!
  uid: String! @deprecated(reason: "Use `slug` instead. This field was never universally unique.")
  visibility: ChurrosVisibility! @source(name: "visibility", type: "Visibility!", subgraph: "Churros")
}

type ChurrosArticleSearchResult @source(name: "ArticleSearchResult", subgraph: "Churros") @join__type(graph: CHURROS) {
  article: ChurrosArticle! @source(name: "article", type: "Article!", subgraph: "Churros")
  highlightedTitle: String!
  id: ID!
  rank: Float
  similarity: Float!
}

type ChurrosAwaitingValidationError @source(name: "AwaitingValidationError", subgraph: "Churros") @join__type(graph: CHURROS) {
  message: String!
}

"""
Une page épinglée pour en faire un accès rapide pour un·e utilisateur·rice
"""
type ChurrosBookmark implements ChurrosNode @source(name: "Bookmark", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosNode") {
  id: ID!
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  """
  Chemin de la page, ou identifiant global pour les services épinglés. Voir aussi Bookmark.url
  """
  path: String!
  """
  URL vers la page. Pratique notamment pour les services épinglés, qui n'ont pas de valeur utile pour Bookmark.path.
  """
  url: ChurrosURL! @source(name: "url", type: "URL!", subgraph: "Churros")
  user: ChurrosUser! @source(name: "user", type: "User!", subgraph: "Churros")
}

type ChurrosBuildInfo @source(name: "BuildInfo", subgraph: "Churros") @join__type(graph: CHURROS) {
  """Le hash du commit utilisé pour build l'API"""
  commit: String!
  """La version actuelle de l'API (et de l'application)"""
  version: String!
}

"""A release in the changelog"""
type ChurrosChangelogRelease @source(name: "ChangelogRelease", subgraph: "Churros") @join__type(graph: CHURROS) {
  """The changes of the release, grouped by category"""
  changes: ChurrosReleaseChangesMaps! @source(name: "changes", type: "ReleaseChangesMaps!", subgraph: "Churros")
  """The date of the release"""
  date: ChurrosDateTime @source(name: "date", type: "DateTime", subgraph: "Churros")
  """A short description of the release"""
  description: String!
  """A short description of the release, in HTML. Safe from XSS."""
  descriptionHtml: String!
  """The version of the release"""
  version: String!
}

type ChurrosComment implements ChurrosNode & ChurrosReactable @source(name: "Comment", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosNode") @join__implements(graph: CHURROS, interface: "ChurrosReactable") {
  author: ChurrosUser @source(name: "author", type: "User", subgraph: "Churros")
  authorId: ID
  body: String!
  bodyHtml: String!
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  document: ChurrosDocument @source(name: "document", type: "Document", subgraph: "Churros")
  documentId: ID
  id: ID!
  inReplyTo: ChurrosComment @source(name: "inReplyTo", type: "Comment", subgraph: "Churros")
  inReplyToId: ID
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  """Vrai si l’utilisateur·ice connecté·e a réagi avec cet emoji"""
  reacted(emoji: String!): Boolean!
  """Nombre total de réactions avec cet emoji"""
  reactions(emoji: String!): Int!
  replies: [ChurrosComment!]! @source(name: "replies", type: "[Comment!]!", subgraph: "Churros")
  updatedAt: ChurrosDateTime! @source(name: "updatedAt", type: "DateTime!", subgraph: "Churros")
}

type ChurrosCommentsConnection @source(name: "CommentsConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosCommentsEdge!]! @source(name: "edges", type: "[CommentsEdge!]!", subgraph: "Churros")
  nodes: [ChurrosComment!]! @source(name: "nodes", type: "[Comment!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosCommentsEdge @source(name: "CommentsEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosComment! @source(name: "node", type: "Comment!", subgraph: "Churros")
}

type ChurrosContributionOption implements ChurrosNode @source(name: "ContributionOption", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosNode") {
  """On peut marquer une cotisation de cette option comme payée"""
  canMarkAsPaid: Boolean!
  descriptionHtml: String!
  id: ID!
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  name: String!
  offeredIn: ChurrosSchool! @source(name: "offeredIn", type: "School!", subgraph: "Churros")
  """Une personne paye une cotisation avec cette option"""
  paidBy(
    """UID de l'utilisateur·ice"""
    uid: String!
  ): Boolean!
  paysFor: [ChurrosStudentAssociation!]! @source(name: "paysFor", type: "[StudentAssociation!]!", subgraph: "Churros")
  price: Float!
}

"""A credential is a way to authenticate a user"""
type ChurrosCredential @source(name: "Credential", subgraph: "Churros") @join__type(graph: CHURROS) {
  active: Boolean!
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  expiresAt: ChurrosDateTime @source(name: "expiresAt", type: "DateTime", subgraph: "Churros")
  id: ID!
  name: String!
  token: String!
  type: ChurrosCredentialType! @source(name: "type", type: "CredentialType!", subgraph: "Churros")
  user: ChurrosUser! @source(name: "user", type: "User!", subgraph: "Churros")
  userAgent: String!
}

type ChurrosDatabaseHealthCheck @source(name: "DatabaseHealthCheck", subgraph: "Churros") @join__type(graph: CHURROS) {
  prisma: Boolean!
}

type ChurrosDocument implements ChurrosCommentable & ChurrosNode & ChurrosReactable @source(name: "Document", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosCommentable") @join__implements(graph: CHURROS, interface: "ChurrosNode") @join__implements(graph: CHURROS, interface: "ChurrosReactable") {
  comments(after: String, before: String, first: Int, last: Int): ChurrosCommentsConnection! @source(name: "comments", type: "CommentsConnection!", subgraph: "Churros")
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  description: String!
  descriptionHtml: String!
  id: ID!
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  """
  Liste de chemins vers les fichiers représentant le sujet (ou la fiche de révision)
  """
  paperPaths: [String!]!
  """Vrai si l’utilisateur·ice connecté·e a réagi avec cet emoji"""
  reacted(emoji: String!): Boolean!
  """Nombre total de réactions avec cet emoji"""
  reactions(emoji: String!): Int!
  schoolYear: Int!
  """Un nom lisible sans espaces, adaptés pour des URLs."""
  slug: String!
  """Liste de chemins vers les fichiers représentant la correction."""
  solutionPaths: [String!]!
  subject: ChurrosSubject @source(name: "subject", type: "Subject", subgraph: "Churros")
  subjectId: ID
  title: String!
  type: ChurrosDocumentType! @source(name: "type", type: "DocumentType!", subgraph: "Churros")
  uid: String! @deprecated(reason: "Use `slug` instead. This field was never universally unique.")
  updatedAt: ChurrosDateTime! @source(name: "updatedAt", type: "DateTime!", subgraph: "Churros")
  uploader: ChurrosUser @source(name: "uploader", type: "User", subgraph: "Churros")
  uploaderId: ID
}

type ChurrosDocumentSearchResult @source(name: "DocumentSearchResult", subgraph: "Churros") @join__type(graph: CHURROS) {
  document: ChurrosDocument! @source(name: "document", type: "Document!", subgraph: "Churros")
  id: ID!
  rank: Float
  similarity: Float!
}

"""A email validation request"""
type ChurrosEmailChange implements ChurrosNode @source(name: "EmailChange", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosNode") {
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  email: String!
  id: ID!
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  pending: Boolean!
  updatedAt: ChurrosDateTime! @source(name: "updatedAt", type: "DateTime!", subgraph: "Churros")
  user: ChurrosUser! @source(name: "user", type: "User!", subgraph: "Churros")
  userId: ID!
}

"""
The most basic error object, based on the base JavaScript Error object.
"""
type ChurrosError implements ChurrosErrorInterface @source(name: "Error", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosErrorInterface") {
  message: String!
}

"""An event is a date, time and place, as well as an optional ticket"""
type ChurrosEvent implements ChurrosNode & ChurrosPictured & ChurrosReactable & ChurrosShareable @source(name: "Event", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosNode") @join__implements(graph: CHURROS, interface: "ChurrosPictured") @join__implements(graph: CHURROS, interface: "ChurrosReactable") @join__implements(graph: CHURROS, interface: "ChurrosShareable") {
  """Les promotions applicables à cet évènement"""
  applicableOffers: [ChurrosPromotionType!]! @source(name: "applicableOffers", type: "[PromotionType!]!", subgraph: "Churros")
  articles: [ChurrosArticle!]! @source(name: "articles", type: "[Article!]!", subgraph: "Churros")
  author: ChurrosUser @source(name: "author", type: "User", subgraph: "Churros")
  authorId: ID
  banned: [ChurrosUser!]! @source(name: "banned", type: "[User!]!", subgraph: "Churros")
  beneficiary: ChurrosLydiaAccount @source(name: "beneficiary", type: "LydiaAccount", subgraph: "Churros")
  bookings(
    after: String
    before: String
    first: Int
    last: Int
    """Ne montre que les réservations d'un certain statut"""
    only: ChurrosBookingState! @source(name: "only", type: "BookingState!", subgraph: "Churros")
  ): ChurrosEventBookingsConnection! @source(name: "bookings", type: "EventBookingsConnection!", subgraph: "Churros")
  bookingsCounts: ChurrosRegistrationsCounts! @source(name: "bookingsCounts", type: "RegistrationsCounts!", subgraph: "Churros")
  """
  Renvoie un texte à un format demandé contentant un export des réservations de l'évènement.
  """
  bookingsCsv(
    """
    Un texe représentant les URLs des pages de réservation individuelles. Dans ce texte, les occurences de '[code]' seront remplacées par le code de réservation.
    """
    bookingURL: ChurrosURL! @source(name: "bookingURL", type: "URL!", subgraph: "Churros")
    dialect: ChurrosCsvDialect! = Standard @source(name: "dialect", type: "CsvDialect!", subgraph: "Churros")
  ): ChurrosEventBookingsCsvResult! @source(name: "bookingsCsv", type: "EventBookingsCsvResult!", subgraph: "Churros")
  """L'utilisateur·ice connecté·e peut modifier cet évènement"""
  canEdit(
    """
    Lève une erreur avec ce message si l'utilisateur·ice n'a pas les droits
    """
    assert: String
  ): Boolean!
  """
  L'utilisateur·ice connecté·e peut ajouter, enlever ou modifier les droits des managers de cet évènement
  """
  canEditManagers: Boolean!
  """
  L'utilisateur·ice connecté·e peut scanner les réservations de cet évènement
  """
  canScanBookings(
    """
    Erreur à lever si jamais la permission n'est pas donnée à l'utilisateur.ice connecté.e
    """
    assert: String
  ): Boolean!
  """
  L'utilisateur·ice connecté·e peut voir la liste des réservations de cet évènement
  """
  canSeeAllBookings(
    """
    Lève une erreur si l'utilisateur·ice n'a pas les permissions, au lieu de juste renvoyer `false`. La valeur est le message d'erreur à renvoyer
    """
    assert: String
  ): Boolean!
  """L'utilsateur·ice connecté·e peut voir les logs de cet évènement"""
  canSeeLogs: Boolean!
  capacity: Int!
  coOrganizers: [ChurrosGroup!]! @source(name: "coOrganizers", type: "[Group!]!", subgraph: "Churros")
  contactMail: String!
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  description: String!
  descriptionHtml: ChurrosHTML! @source(name: "descriptionHtml", type: "HTML!", subgraph: "Churros")
  descriptionPreview: String!
  """Liste des promotions activées pour tout les billets de l'évènement."""
  enabledSpecialOffers: [ChurrosPromotionType!] @source(name: "enabledSpecialOffers", type: "[PromotionType!]", subgraph: "Churros")
  endsAt: ChurrosDateTime @source(name: "endsAt", type: "DateTime", subgraph: "Churros")
  """
  URL vers une billetterie externe. Null si l'évènement possède un lien à URL valide, non dynamique, nommé "billetterie" et n'a pas de billets
  """
  externalTicketing: ChurrosURL @source(name: "externalTicketing", type: "URL", subgraph: "Churros")
  """Formulaires associés à l'événement"""
  forms: [ChurrosForm!]! @source(name: "forms", type: "[Form!]!", subgraph: "Churros")
  frequency: ChurrosEventFrequency! @source(name: "frequency", type: "EventFrequency!", subgraph: "Churros")
  globalCapacity: ChurrosCapacity @source(name: "globalCapacity", type: "Capacity", subgraph: "Churros")
  group: ChurrosGroup! @source(name: "group", type: "Group!", subgraph: "Churros") @deprecated(reason: "Use `organizer` instead.")
  groupId: ID!
  """
  Si la ressource supported d'avoir une image en thème sombre différente de celle en thème clair
  """
  hasSeparateDarkPicture: Boolean!
  id: ID!
  """Vrai si l'évènement doit apparaître dans le mode kiosque"""
  includeInKiosk: Boolean!
  """
  Managers de l'évènement qui le sont par leur permissions sur le groupe organisateur de l'évènement.
  """
  inheritedManagers: [ChurrosInheritedEventManager!]! @source(name: "inheritedManagers", type: "[InheritedEventManager!]!", subgraph: "Churros")
  links: [ChurrosLink!]! @source(name: "links", type: "[Link!]!", subgraph: "Churros")
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  location: String!
  """
  Logs concernant cet évènement. Ne contient pas les logs concernant les réservations.
  """
  logs(after: String, before: String, first: Int, last: Int): ChurrosEventLogsConnection! @source(name: "logs", type: "EventLogsConnection!", subgraph: "Churros")
  lydiaAccountId: ID
  managers: [ChurrosEventManager!]! @source(name: "managers", type: "[EventManager!]!", subgraph: "Churros")
  """
  Réservations faites par et/ou pour l'utilisateur.ice connecté.e. Triée par bénéficiaire (soi-même d'abord), puis par date de création. Renvoie au maximum 100 réservations.
  """
  myBookings(
    """Nombre de réservations à récupérer"""
    count: Int
  ): [ChurrosRegistration!]! @source(name: "myBookings", type: "[Registration!]!", subgraph: "Churros")
  myReactions: ChurrosBooleanMap! @source(name: "myReactions", type: "BooleanMap!", subgraph: "Churros")
  mySoonestShotgunOpensAt: ChurrosDateTime @source(name: "mySoonestShotgunOpensAt", type: "DateTime", subgraph: "Churros") @deprecated(reason: "Use first ticket's opensAt instead. Event.tickets is now sorted such that if the user has access to tickets with soon-to-open or opened shotguns, the earliest one will be first.")
  organizer: ChurrosGroup! @source(name: "organizer", type: "Group!", subgraph: "Churros")
  """Texte alternatif de l'image"""
  pictureAltText: String!
  pictureFile: String!
  """Le nom du fichier de l'image, en thème sombre"""
  pictureFileDark: String!
  """L'URL publique de l'image"""
  pictureURL(
    """Utiliser l'image en thème sombre"""
    dark: Boolean! = false
    """
    Ajouter un timestamp à la fin de l'URL pour forcer le navigateur à recharger l'image. Le timestamp correspond à la date de dernière mise à jour de la ressource (si disponible), ou à l'heure actuelle.
    """
    timestamp: Boolean! = true
  ): String!
  placesLeft: ChurrosCapacity @source(name: "placesLeft", type: "Capacity", subgraph: "Churros")
  profitsBreakdown: ChurrosProfitsBreakdown! @source(name: "profitsBreakdown", type: "ProfitsBreakdown!", subgraph: "Churros")
  """Vrai si l’utilisateur·ice connecté·e a réagi avec cet emoji"""
  reacted(emoji: String!): Boolean!
  reactionCounts: ChurrosCounts! @source(name: "reactionCounts", type: "Counts!", subgraph: "Churros")
  """Nombre total de réactions avec cet emoji"""
  reactions(emoji: String!): Int!
  recurringUntil: ChurrosDateTime @source(name: "recurringUntil", type: "DateTime", subgraph: "Churros")
  searchBookings(q: String!): [ChurrosRegistrationSearchResult!]! @source(name: "searchBookings", type: "[RegistrationSearchResult!]!", subgraph: "Churros")
  shares: Int!
  """Vrai si les capacités des billets doivent être affichées"""
  showCapacity: Boolean!
  """Vrai si le nombre de places restantes doit être affiché"""
  showPlacesLeft: Boolean!
  """Un nom lisible sans espaces, adaptés pour des URLs."""
  slug: String!
  startsAt: ChurrosDateTime @source(name: "startsAt", type: "DateTime", subgraph: "Churros")
  ticket(id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")): ChurrosTicket @source(name: "ticket", type: "Ticket", subgraph: "Churros")
  """Récupérer un groupe de billets de l'évènement"""
  ticketGroup(id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")): ChurrosTicketGroup @source(name: "ticketGroup", type: "TicketGroup", subgraph: "Churros")
  ticketGroups: [ChurrosTicketGroup!]! @source(name: "ticketGroups", type: "[TicketGroup!]!", subgraph: "Churros")
  tickets: [ChurrosTicket!]! @source(name: "tickets", type: "[Ticket!]!", subgraph: "Churros")
  title: String!
  uid: String! @deprecated(reason: "Use `slug` instead. This field was never universally unique.")
  updatedAt: ChurrosDateTime @source(name: "updatedAt", type: "DateTime", subgraph: "Churros")
  visibility: ChurrosVisibility! @source(name: "visibility", type: "Visibility!", subgraph: "Churros")
}

type ChurrosEventBookingsConnection @source(name: "EventBookingsConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosEventBookingsConnectionEdge!]! @source(name: "edges", type: "[EventBookingsConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosRegistration!]! @source(name: "nodes", type: "[Registration!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosEventBookingsConnectionEdge @source(name: "EventBookingsConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosRegistration! @source(name: "node", type: "Registration!", subgraph: "Churros")
}

type ChurrosEventBookingsCsvSuccess @source(name: "EventBookingsCsvSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: String!
}

type ChurrosEventLogsConnection @source(name: "EventLogsConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosEventLogsConnectionEdge!]! @source(name: "edges", type: "[EventLogsConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosLogEntry!]! @source(name: "nodes", type: "[LogEntry!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosEventLogsConnectionEdge @source(name: "EventLogsConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosLogEntry! @source(name: "node", type: "LogEntry!", subgraph: "Churros")
}

"""
An event manager is a user that can scan tickets, and may be able to manage the event
"""
type ChurrosEventManager implements ChurrosNode @source(name: "EventManager", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosNode") {
  canEdit: Boolean!
  canEditPermissions: Boolean!
  canVerifyRegistrations: Boolean!
  event: ChurrosEvent! @source(name: "event", type: "Event!", subgraph: "Churros")
  id: ID!
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  power: ChurrosEventManagerPowerLevel! @source(name: "power", type: "EventManagerPowerLevel!", subgraph: "Churros")
  user: ChurrosUser! @source(name: "user", type: "User!", subgraph: "Churros")
}

type ChurrosEventSearchResult @source(name: "EventSearchResult", subgraph: "Churros") @join__type(graph: CHURROS) {
  event: ChurrosEvent! @source(name: "event", type: "Event!", subgraph: "Churros")
  highlightedTitle: String!
  id: ID!
  rank: Float
  similarity: Float!
}

type ChurrosEventsByDay @source(name: "EventsByDay", subgraph: "Churros") @join__type(graph: CHURROS) {
  date: ChurrosDateTime! @source(name: "date", type: "DateTime!", subgraph: "Churros")
  """Évènements qui ont lieu (commencent) à ce jour"""
  happening: [ChurrosEvent!]! @source(name: "happening", type: "[Event!]!", subgraph: "Churros")
  """Évènements qui ont leur premier shotgun à ce jour"""
  shotgunning: [ChurrosEvent!]! @source(name: "shotgunning", type: "[Event!]!", subgraph: "Churros")
}

type ChurrosFamilyTree @source(name: "FamilyTree", subgraph: "Churros") @join__type(graph: CHURROS) {
  nesting: String!
  users: [ChurrosUser!]! @source(name: "users", type: "[User!]!", subgraph: "Churros")
}

type ChurrosFeaturesHealthCheck @source(name: "FeaturesHealthCheck", subgraph: "Churros") @join__type(graph: CHURROS) {
  """Whether Apple Wallet integration is configured"""
  appleWallet: Boolean!
  """Whether the GitLab API is configured"""
  gitlab: Boolean!
  """Whether Google APIs are configured"""
  googleAPIs: Boolean!
  """Whether Google Wallet integration is configured"""
  googleWallet: Boolean!
  """Whether Mailman automation is configured"""
  mailman: Boolean!
  """Whether OAuth login is configured"""
  oauth: Boolean!
  """Whether the Prometheus pushgateway is configured"""
  prometheus: Boolean!
}

"""Un formulaire"""
type ChurrosForm implements ChurrosNode @source(name: "Form", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosNode") {
  """Nombre de réponses au formulaire"""
  answerCount: Int!
  """Réponses au formulaire"""
  answers(after: String, before: String, first: Int, last: Int): ChurrosFormAnswersConnection! @source(name: "answers", type: "FormAnswersConnection!", subgraph: "Churros")
  """
  Réponses au formulaire, groupées par utilisateur·ice. Ne contient pas de réponses dont l'utilisateur·ice est inconnu·e.
  """
  answersByUser(
    after: String
    before: String
    first: Int
    last: Int
    """Recherche par utilisateur·ice"""
    q: String
  ): ChurrosFormAnswersByUserConnection! @source(name: "answersByUser", type: "FormAnswersByUserConnection!", subgraph: "Churros")
  """Export des réponses au formulaires dans un format"""
  answersExport(
    """Format à utiliser"""
    format: ChurrosAnswersExportFormats! = CSV @source(name: "format", type: "AnswersExportFormats!", subgraph: "Churros")
  ): String!
  """Indique si l'utilisateur peut répondre au formulaire."""
  canAnswer: Boolean!
  """Indique si l'utilisateur peut éditer le formulaire."""
  canEdit: Boolean!
  """Indique si l'utilisateur·ice peut modifier ses réponses au formulaire."""
  canModifyAnswers: Boolean!
  """
  Indique si l'utilisateur peut voir les statistiques des réponses au formulaire.
  """
  canSeeAnswerStats: Boolean!
  """Indique si l'utilisateur peut voir les réponses au formulaire."""
  canSeeAnswers: Boolean!
  """
  Indique si l'utilisateur peut cocher ou décocher les cases à cocher à côté des réponses au formulaire.
  """
  canSetCheckboxes: Boolean!
  checkboxesAreEnabled: Boolean!
  """Date de fermeture du formulaire."""
  closesAt: ChurrosDateTime @source(name: "closesAt", type: "DateTime", subgraph: "Churros")
  """Date de création du formulaire"""
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  """Utilisateur ayant créé le formulaire"""
  createdBy: ChurrosUser @source(name: "createdBy", type: "User", subgraph: "Churros")
  """Description en Markdown du formulaire."""
  description: String
  """Description en HTML du formulaire."""
  descriptionHtml: String!
  """Événement associé au formulaire"""
  event: ChurrosEvent @source(name: "event", type: "Event", subgraph: "Churros")
  """Groupe auquel le formulaire est associé"""
  group: ChurrosGroup @source(name: "group", type: "Group", subgraph: "Churros")
  """Vrai si le formulaire comporte des sections"""
  hasSections: Boolean!
  """Préfixe de l'identifiant: `form:`"""
  id: ID!
  """
  L'URL du Google Sheet des réponses lié à ce formulaire. Voir `createLinkedGoogleSheet` pour créer un Google Sheet lié au formulaire.
  """
  linkedGoogleSheetUrl: String
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  """Identifiant local du formulaire"""
  localId: String!
  """Réponses de l'utilisateur·ice connecté·e à ce formulaire"""
  myAnswers: [ChurrosAnswer!]! @source(name: "myAnswers", type: "[Answer!]!", subgraph: "Churros")
  """Date d'ouverture du formulaire."""
  opensAt: ChurrosDateTime @source(name: "opensAt", type: "DateTime", subgraph: "Churros")
  """
  Questions du formulaire. Liste de toutes les questions, peut importe la section dans laquelle elles se trouvent.
  """
  questions(after: String, before: String, first: Int, last: Int): ChurrosFormQuestionsConnection! @source(name: "questions", type: "FormQuestionsConnection!", subgraph: "Churros")
  searchAnswers(
    """La recherche"""
    q: String!
    similarityCutoff: Float
  ): [ChurrosAnswerSearchResult!]! @source(name: "searchAnswers", type: "[AnswerSearchResult!]!", subgraph: "Churros")
  """Une section du formulaire."""
  section(
    """Identifiant (local ou global) de la section"""
    id: String
  ): ChurrosFormSection! @source(name: "section", type: "FormSection!", subgraph: "Churros")
  """
  Sections du formulaire. Un formulaire contient toujours au moins une section (sauf s'il n'y a aucune question). Uniquement accessible par celleux qui peuvent modifier le formulaire. Utiliser `nextSection` pour afficher une section dans le but d'y répondre.
  """
  sections: [ChurrosFormSection!]! @source(name: "sections", type: "[FormSection!]!", subgraph: "Churros")
  title: String!
  """Date de dernière mise à jour du formulaire"""
  updatedAt: ChurrosDateTime! @source(name: "updatedAt", type: "DateTime!", subgraph: "Churros")
  """Visibilité du formulaire"""
  visibility: ChurrosVisibility! @source(name: "visibility", type: "Visibility!", subgraph: "Churros")
}

type ChurrosFormAnswersByUserConnection @source(name: "FormAnswersByUserConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosFormAnswersByUserConnectionEdge!]! @source(name: "edges", type: "[FormAnswersByUserConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosAnswersOfUser!]! @source(name: "nodes", type: "[AnswersOfUser!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosFormAnswersByUserConnectionEdge @source(name: "FormAnswersByUserConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosAnswersOfUser! @source(name: "node", type: "AnswersOfUser!", subgraph: "Churros")
}

type ChurrosFormAnswersConnection @source(name: "FormAnswersConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosFormAnswersConnectionEdge!]! @source(name: "edges", type: "[FormAnswersConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosAnswer!]! @source(name: "nodes", type: "[Answer!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosFormAnswersConnectionEdge @source(name: "FormAnswersConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosAnswer! @source(name: "node", type: "Answer!", subgraph: "Churros")
}

type ChurrosFormQuestionsConnection @source(name: "FormQuestionsConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosFormQuestionsConnectionEdge!]! @source(name: "edges", type: "[FormQuestionsConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosQuestion!]! @source(name: "nodes", type: "[Question!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosFormQuestionsConnectionEdge @source(name: "FormQuestionsConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosQuestion! @source(name: "node", type: "Question!", subgraph: "Churros")
}

type ChurrosFormSearchResult @source(name: "FormSearchResult", subgraph: "Churros") @join__type(graph: CHURROS) {
  form: ChurrosForm! @source(name: "form", type: "Form!", subgraph: "Churros")
  highlightedDescription: String!
  id: ID!
  rank: Float
  similarity: Float!
}

"""
Une section d'un formulaire. Les sections sont utiles pour séparer les questions en plusieurs parties, dont certaines peuvent être affichées selon des réponses à des questions précédentes
"""
type ChurrosFormSection @source(name: "FormSection", subgraph: "Churros") @join__type(graph: CHURROS) {
  """Réponses à cette section"""
  answers(after: String, before: String, first: Int, last: Int): ChurrosFormSectionAnswersConnection! @source(name: "answers", type: "FormSectionAnswersConnection!", subgraph: "Churros")
  """Description en Markdown de la section"""
  description: String!
  """Description en HTML de la section"""
  descriptionHtml: String!
  """Formulaire auquel appartient la section"""
  form: ChurrosForm! @source(name: "form", type: "Form!", subgraph: "Churros")
  id: ID!
  """Identifiant local de la section du formulaire"""
  localId: String!
  """
  Section suivante dans le formulaire, si il y en a une. (Sinon, c'est que c'est la dernière section). Dépend du fait que des sections soit cachées à l'utilisateur (voir `restrictedToGroups`), ou que une répond à une question provoque le passaage à une autre section (voir `goToSection`) 
  """
  nextSection: ChurrosFormSection @source(name: "nextSection", type: "FormSection", subgraph: "Churros")
  """Ordre de la section dans le formulaire"""
  order: Int!
  """Questions dans section"""
  questions: [ChurrosQuestion!]! @source(name: "questions", type: "[Question!]!", subgraph: "Churros")
  """
  Si non vide, seul·e·s les membres des groupes spécifiés peuvent accéder à cette section. 
  """
  restrictedToGroups: [ChurrosGroup!]! @source(name: "restrictedToGroups", type: "[Group!]!", subgraph: "Churros")
  """Titre de la section"""
  title: String!
}

type ChurrosFormSectionAnswersConnection @source(name: "FormSectionAnswersConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosFormSectionAnswersConnectionEdge!]! @source(name: "edges", type: "[FormSectionAnswersConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosAnswer!]! @source(name: "nodes", type: "[Answer!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosFormSectionAnswersConnectionEdge @source(name: "FormSectionAnswersConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosAnswer! @source(name: "node", type: "Answer!", subgraph: "Churros")
}

"""
Requests to become someone's godchild. Gets deleted once the request has been accepted (or denied). godchild is the requester, godparent is the requested.
"""
type ChurrosGodparentRequest @source(name: "GodparentRequest", subgraph: "Churros") @join__type(graph: CHURROS) {
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  godchild: ChurrosUser! @source(name: "godchild", type: "User!", subgraph: "Churros")
  godparent: ChurrosUser! @source(name: "godparent", type: "User!", subgraph: "Churros")
  id: ID!
  updatedAt: ChurrosDateTime! @source(name: "updatedAt", type: "DateTime!", subgraph: "Churros")
}

"""A group is a collection of users"""
type ChurrosGroup implements ChurrosNode & ChurrosPictured @source(name: "Group", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosNode") @join__implements(graph: CHURROS, interface: "ChurrosPictured") {
  address: String!
  """All the ancestors of this group, from the current group to the root."""
  ancestors: [ChurrosGroup!]! @source(name: "ancestors", type: "[Group!]!", subgraph: "Churros")
  articles: [ChurrosArticle!]! @source(name: "articles", type: "[Article!]!", subgraph: "Churros")
  boardMembers: [ChurrosGroupMember!]! @source(name: "boardMembers", type: "[GroupMember!]!", subgraph: "Churros")
  """
  Si l'utilisateur·ice connecté·e peut créer des thèmes au nom de ce groupe
  """
  canCreateThemes: Boolean!
  """
  Vrai si l'utilisateur·ice connecté·e peut modifier les informations du groupe
  """
  canEditDetails(
    """
    Lève une erreur avec le message donné si la permission n'est pas accordée
    """
    assert: String
  ): Boolean!
  """
  On peut changer la politique d'adhésion au groupe (inscription libre ou non)
  """
  canEditJoinPolicy(
    """
    Lève une erreur avec le message donné si la permission n'est pas accordée
    """
    assert: String
  ): Boolean!
  """On peut changer les comptes Lydias du groupe"""
  canEditLydiaAccounts(
    """
    Lève une erreur avec le message donné si la permission n'est pas accordée
    """
    assert: String
  ): Boolean!
  """
  Vrai si l'utilisateur·ice connecté·e peut modifier les membres du groupe
  """
  canEditMembers(
    """
    Lève une erreur avec le message donné si la permission n'est pas accordée
    """
    assert: String
  ): Boolean!
  """
  L'utilisateur·ice connecté·e peut éditer (créer ou modifier) les pages du groupe
  """
  canEditPages: Boolean!
  """On peut changer le groupe parent"""
  canEditParent(
    """
    Lève une erreur avec le message donné si la permission n'est pas accordée
    """
    assert: String
  ): Boolean!
  """On peut modifier l'AE de rattachement"""
  canEditStudentAssociation(
    """
    Lève une erreur avec le message donné si la permission n'est pas accordée
    """
    assert: String
  ): Boolean!
  """On peut changer le type de groupe"""
  canEditType(
    """
    Lève une erreur avec le message donné si la permission n'est pas accordée
    """
    assert: String
  ): Boolean!
  """On peut changer le statut de liste de groupe"""
  canEditUnlisted(
    """
    Lève une erreur avec le message donné si la permission n'est pas accordée
    """
    assert: String
  ): Boolean!
  """L'utilisateur·ice connecté·e peut lister les pages du groupe"""
  canListPages: Boolean!
  """L'utilisater.ice connecté.e a le droit de mettre à jour roomIsOpen"""
  canSetGroupRoomOpenState: Boolean!
  children: [ChurrosGroup!]! @source(name: "children", type: "[Group!]!", subgraph: "Churros")
  coOrganizedEvents: [ChurrosEvent!]! @source(name: "coOrganizedEvents", type: "[Event!]!", subgraph: "Churros")
  color: ChurrosColor @source(name: "color", type: "Color", subgraph: "Churros")
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  description: String! @deprecated(reason: "Use `shortDescription` instead")
  email: ChurrosEmail @source(name: "email", type: "Email", subgraph: "Churros")
  events(after: String, before: String, first: Int, last: Int): ChurrosGroupEventsConnection! @source(name: "events", type: "GroupEventsConnection!", subgraph: "Churros")
  familyChildren: [ChurrosGroup!]! @source(name: "familyChildren", type: "[Group!]!", subgraph: "Churros")
  """
  Helper field to get a whole tree without processing all groups\nTo be set to the group's id itself for root groups.
  """
  familyId: ID
  """Formulaires associés au groupe"""
  forms: [ChurrosForm!]! @source(name: "forms", type: "[Form!]!", subgraph: "Churros")
  groupId: ID!
  """
  Si la ressource supported d'avoir une image en thème sombre différente de celle en thème clair
  """
  hasSeparateDarkPicture: Boolean!
  id: ID!
  """L'utilisateur.ice connecté.e est membre de ce groupe"""
  isMember: Boolean!
  ldapUid: String!
  links: [ChurrosLink!]! @source(name: "links", type: "[Link!]!", subgraph: "Churros")
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  longDescription: String!
  longDescriptionHtml: ChurrosHTML! @source(name: "longDescriptionHtml", type: "HTML!", subgraph: "Churros")
  """Comptes Lydia du groupe"""
  lydiaAccounts: [ChurrosLydiaAccount!]! @source(name: "lydiaAccounts", type: "[LydiaAccount!]!", subgraph: "Churros")
  mailingList: String!
  """Les membres du groupe, triés par date d'adhésion"""
  members(
    after: String
    before: String
    """Renvoyer d'abord les membres du bureau"""
    boardFirst: Boolean! = true
    first: Int
    last: Int
  ): ChurrosGroupMembersConnection! @source(name: "members", type: "GroupMembersConnection!", subgraph: "Churros")
  """Nombre de membres"""
  membersCount(
    """
    Limiter aux membres de certaines promos (pratique par exemple pour avoir le nombre d'actif.ve.s)
    """
    yearTiers: [Int!]! = []
  ): Int!
  """L'adhésion de l'utilisateur.ice connecté.e à ce groupe"""
  membership: ChurrosGroupMember @source(name: "membership", type: "GroupMember", subgraph: "Churros")
  name: String!
  ownEvents: [ChurrosEvent!]! @source(name: "ownEvents", type: "[Event!]!", subgraph: "Churros")
  """La page associée au groupe"""
  page(
    """
    Le chemin de la page. Ce n'est pas le chemin complet, mais celui qui est local au groupe. Voir `Page` pour plus d'informations.
    """
    path: String!
  ): ChurrosPage @source(name: "page", type: "Page", subgraph: "Churros")
  """Les pages associées au groupe"""
  pages(after: String, before: String, first: Int, last: Int): ChurrosPagesConnection! @source(name: "pages", type: "PagesConnection!", subgraph: "Churros")
  """Nombre de pages associées au groupe"""
  pagesCount: Int!
  """Parent group, from which this group inherits its permissions"""
  parent: ChurrosGroup @source(name: "parent", type: "Group", subgraph: "Churros")
  parentId: ID
  """Texte alternatif de l'image"""
  pictureAltText: String!
  pictureFile: String!
  pictureFileDark: String!
  """L'URL publique de l'image"""
  pictureURL(
    """Utiliser l'image en thème sombre"""
    dark: Boolean! = false
    """
    Ajouter un timestamp à la fin de l'URL pour forcer le navigateur à recharger l'image. Le timestamp correspond à la date de dernière mise à jour de la ressource (si disponible), ou à l'heure actuelle.
    """
    timestamp: Boolean! = true
  ): String!
  president: ChurrosGroupMember @source(name: "president", type: "GroupMember", subgraph: "Churros")
  """Related clubs"""
  related: [ChurrosGroup!]! @source(name: "related", type: "[Group!]!", subgraph: "Churros")
  roomIsOpen: Boolean!
  """Family root, only created for performance reasons"""
  root: ChurrosGroup @source(name: "root", type: "Group", subgraph: "Churros")
  """Recherche des membres du groupe"""
  searchMembers(q: String!): [ChurrosGroupMemberSearchResult!]! @source(name: "searchMembers", type: "[GroupMemberSearchResult!]!", subgraph: "Churros")
  secretaries: [ChurrosGroupMember!]! @source(name: "secretaries", type: "[GroupMember!]!", subgraph: "Churros")
  selfJoinable: Boolean!
  services: [ChurrosService!]! @source(name: "services", type: "[Service!]!", subgraph: "Churros")
  shortDescription: String!
  studentAssociation: ChurrosStudentAssociation! @source(name: "studentAssociation", type: "StudentAssociation!", subgraph: "Churros")
  treasurers: [ChurrosGroupMember!]! @source(name: "treasurers", type: "[GroupMember!]!", subgraph: "Churros")
  type: ChurrosGroupType! @source(name: "type", type: "GroupType!", subgraph: "Churros")
  uid: String!
  """Le groupe doit être caché des listes de groupes"""
  unlisted: Boolean!
  vicePresidents: [ChurrosGroupMember!]! @source(name: "vicePresidents", type: "[GroupMember!]!", subgraph: "Churros")
  website: String!
}

type ChurrosGroupEventsConnection @source(name: "GroupEventsConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosGroupEventsConnectionEdge!]! @source(name: "edges", type: "[GroupEventsConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosEvent!]! @source(name: "nodes", type: "[Event!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosGroupEventsConnectionEdge @source(name: "GroupEventsConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosEvent! @source(name: "node", type: "Event!", subgraph: "Churros")
}

"""The intermediate model between users"""
type ChurrosGroupMember @source(name: "GroupMember", subgraph: "Churros") @join__type(graph: CHURROS) {
  """On a le droit de modifier ce membre"""
  canBeEdited: Boolean!
  canEditArticles: Boolean!
  canEditMembers: Boolean!
  canScanEvents: Boolean!
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  group: ChurrosGroup! @source(name: "group", type: "Group!", subgraph: "Churros")
  groupId: ID!
  groupUid: ChurrosUID! @source(name: "groupUid", type: "UID!", subgraph: "Churros")
  isDeveloper: Boolean!
  member: ChurrosUser! @source(name: "member", type: "User!", subgraph: "Churros") @deprecated(reason: "Utiliser `user`")
  memberId: ID!
  onBoard: Boolean!
  president: Boolean!
  """Les emojis correspondant aux rôles du membre"""
  roleEmojis: String!
  secretary: Boolean!
  title: String!
  treasurer: Boolean!
  user: ChurrosUser! @source(name: "user", type: "User!", subgraph: "Churros")
  userUid: ChurrosUID! @source(name: "userUid", type: "UID!", subgraph: "Churros")
  vicePresident: Boolean!
}

type ChurrosGroupMemberSearchResult @source(name: "GroupMemberSearchResult", subgraph: "Churros") @join__type(graph: CHURROS) {
  membership: ChurrosGroupMember! @source(name: "membership", type: "GroupMember!", subgraph: "Churros")
  rank: Float
  similarity: Float!
}

type ChurrosGroupMembersConnection @source(name: "GroupMembersConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosGroupMembersConnectionEdge!]! @source(name: "edges", type: "[GroupMembersConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosGroupMember!]! @source(name: "nodes", type: "[GroupMember!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosGroupMembersConnectionEdge @source(name: "GroupMembersConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosGroupMember! @source(name: "node", type: "GroupMember!", subgraph: "Churros")
}

type ChurrosGroupSearchResult @source(name: "GroupSearchResult", subgraph: "Churros") @join__type(graph: CHURROS) {
  group: ChurrosGroup! @source(name: "group", type: "Group!", subgraph: "Churros")
  highlightedDescription: String!
  id: ID!
  rank: Float
  similarity: Float!
}

"""Results of a health self-check"""
type ChurrosHealthCheck @source(name: "HealthCheck", subgraph: "Churros") @join__type(graph: CHURROS) {
  database: ChurrosDatabaseHealthCheck! @source(name: "database", type: "DatabaseHealthCheck!", subgraph: "Churros")
  features: ChurrosFeaturesHealthCheck! @source(name: "features", type: "FeaturesHealthCheck!", subgraph: "Churros")
  ldap: ChurrosLdapHealthCheck! @source(name: "ldap", type: "LdapHealthCheck!", subgraph: "Churros")
  mail: ChurrosMailHealthCheck! @source(name: "mail", type: "MailHealthCheck!", subgraph: "Churros")
  redis: ChurrosRedisHealthCheck! @source(name: "redis", type: "RedisHealthCheck!", subgraph: "Churros")
}

"""
Un manager d'évènement hérité par ses permissions en tant que membre d'un groupe
"""
type ChurrosInheritedEventManager @source(name: "InheritedEventManager", subgraph: "Churros") @join__type(graph: CHURROS) {
  canEdit: Boolean!
  canEditPermissions: Boolean!
  canVerifyRegistrations: Boolean!
  event: ChurrosEvent! @source(name: "event", type: "Event!", subgraph: "Churros")
  groupMember: ChurrosGroupMember! @source(name: "groupMember", type: "GroupMember!", subgraph: "Churros")
  power: ChurrosEventManagerPowerLevel! @source(name: "power", type: "EventManagerPowerLevel!", subgraph: "Churros")
  user: ChurrosUser! @source(name: "user", type: "User!", subgraph: "Churros")
}

"""A Gitlab issue"""
type ChurrosIssue @source(name: "Issue", subgraph: "Churros") @join__type(graph: CHURROS) {
  body: String!
  bodyHtml: String!
  comments: [ChurrosIssueComment!]! @source(name: "comments", type: "[IssueComment!]!", subgraph: "Churros")
  deployedIn: String!
  """Expressed from 0 to 1"""
  difficulty: Float
  duplicatedFrom: Int
  """Expressed from 0 to 1"""
  importance: Float
  number: Int!
  state: ChurrosIssueState! @source(name: "state", type: "IssueState!", subgraph: "Churros")
  """The date at which the issue was submitted"""
  submittedAt: ChurrosDateTime! @source(name: "submittedAt", type: "DateTime!", subgraph: "Churros")
  title: String!
  url: String!
}

"""A Gitlab issue comment"""
type ChurrosIssueComment @source(name: "IssueComment", subgraph: "Churros") @join__type(graph: CHURROS) {
  """The date at which the comment was added"""
  addedAt: ChurrosDateTime! @source(name: "addedAt", type: "DateTime!", subgraph: "Churros")
  authorAvatarUrl: String!
  authorGitlabUrl: String!
  authorName: String!
  body: String!
  bodyHtml: String!
}

type ChurrosLdapHealthCheck @source(name: "LdapHealthCheck", subgraph: "Churros") @join__type(graph: CHURROS) {
  """Whether the LDAP internal client is ready"""
  internal: Boolean!
  """
  Whether the LDAP school client is ready. Null when no LDAP_SCHOOL has been configured.
  """
  school: Boolean
}

"""
Un lien avec un texte à afficher. Pour changer les liens d'une ressource, voir la mutation `setLinks` (valable pour tout les types implémentant `HasLinks`)
"""
type ChurrosLink implements ChurrosNode @source(name: "Link", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosNode") {
  computedValue: String! @deprecated(reason: "Use `url` instead.")
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  id: ID!
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  name: String! @deprecated(reason: "Use `text` instead.")
  rawURL: String!
  text: String!
  url: ChurrosURL @source(name: "url", type: "URL", subgraph: "Churros")
  value: String! @deprecated(reason: "Use `rawURL` instead.")
}

"""A log entry is a log of an action that happened on the website"""
type ChurrosLogEntry implements ChurrosNode @source(name: "LogEntry", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosNode") {
  action: String!
  area: String!
  happenedAt: ChurrosDateTime! @source(name: "happenedAt", type: "DateTime!", subgraph: "Churros")
  id: ID!
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  message: String!
  target: String
  user: ChurrosUser @source(name: "user", type: "User", subgraph: "Churros")
}

"""A Lydia account"""
type ChurrosLydiaAccount implements ChurrosNode @source(name: "LydiaAccount", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosNode") {
  events: [ChurrosEvent!]! @source(name: "events", type: "[Event!]!", subgraph: "Churros")
  eventsCount: Int!
  group: ChurrosGroup @source(name: "group", type: "Group", subgraph: "Churros")
  groupId: ID
  id: ID!
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  name: String!
  studentAssociation: ChurrosStudentAssociation @source(name: "studentAssociation", type: "StudentAssociation", subgraph: "Churros")
  studentAssociationId: ID
}

type ChurrosMailHealthCheck @source(name: "MailHealthCheck", subgraph: "Churros") @join__type(graph: CHURROS) {
  """Whether the SMTP client is ready. Null if no SMTP_URL is configured."""
  smtp: Boolean
}

"""
Une filière (division de premier niveau du cursus scolaire d'une école). Peut être reliée à plusieurs écoles
"""
type ChurrosMajor implements ChurrosPictured @source(name: "Major", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosPictured") {
  """Ancienne filière n'existant plus dans les cursus actuels"""
  discontinued: Boolean!
  fullName: String!
  """
  Si la ressource supported d'avoir une image en thème sombre différente de celle en thème clair
  """
  hasSeparateDarkPicture: Boolean!
  id: ID!
  ldapSchool: ChurrosSchool @source(name: "ldapSchool", type: "School", subgraph: "Churros")
  minors: [ChurrosMinor!]! @source(name: "minors", type: "[Minor!]!", subgraph: "Churros")
  name: String!
  """Texte alternatif de l'image"""
  pictureAltText: String!
  """Le nom du fichier de l'image"""
  pictureFile: String!
  """Le nom du fichier de l'image, en thème sombre"""
  pictureFileDark: String!
  """L'URL publique de l'image"""
  pictureURL(
    """Utiliser l'image en thème sombre"""
    dark: Boolean! = false
    """
    Ajouter un timestamp à la fin de l'URL pour forcer le navigateur à recharger l'image. Le timestamp correspond à la date de dernière mise à jour de la ressource (si disponible), ou à l'heure actuelle.
    """
    timestamp: Boolean! = true
  ): String!
  schools: [ChurrosSchool!]! @source(name: "schools", type: "[School!]!", subgraph: "Churros")
  shortName: String! @deprecated(reason: "Use 'name' instead")
  subjects(forApprentices: Boolean, yearTier: Int): [ChurrosSubject!]! @source(name: "subjects", type: "[Subject!]!", subgraph: "Churros")
  uid: String!
}

type ChurrosMinor implements ChurrosNode @source(name: "Minor", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosNode") {
  id: ID!
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  majors: [ChurrosMajor!]! @source(name: "majors", type: "[Major!]!", subgraph: "Churros")
  name: String!
  shortName: String!
  """Un nom lisible sans espaces, adaptés pour des URLs."""
  slug: String!
  subjects: [ChurrosSubject!]! @source(name: "subjects", type: "[Subject!]!", subgraph: "Churros")
  uid: String! @deprecated(reason: "Use `slug` instead. This field was never universally unique.")
  users: [ChurrosUser!]! @source(name: "users", type: "[User!]!", subgraph: "Churros")
  yearTier: Int!
}

type ChurrosMutationAcceptRegistrationSuccess @source(name: "MutationAcceptRegistrationSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosUser! @source(name: "data", type: "User!", subgraph: "Churros")
}

type ChurrosMutationAddFileToPageSuccess @source(name: "MutationAddFileToPageSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosPage! @source(name: "data", type: "Page!", subgraph: "Churros")
}

type ChurrosMutationAddGroupMemberSuccess @source(name: "MutationAddGroupMemberSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosGroupMember! @source(name: "data", type: "GroupMember!", subgraph: "Churros")
}

type ChurrosMutationAddGroupMemberV2Success @source(name: "MutationAddGroupMemberV2Success", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosGroupMember! @source(name: "data", type: "GroupMember!", subgraph: "Churros")
}

type ChurrosMutationAddLinksSuccess @source(name: "MutationAddLinksSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosHasLinks! @source(name: "data", type: "HasLinks!", subgraph: "Churros")
}

type ChurrosMutationAnswerFormSectionSuccess @source(name: "MutationAnswerFormSectionSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: [ChurrosAnswer!]! @source(name: "data", type: "[Answer!]!", subgraph: "Churros")
}

type ChurrosMutationAnswerGodparentRequestSuccess @source(name: "MutationAnswerGodparentRequestSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosGodparentRequest! @source(name: "data", type: "GodparentRequest!", subgraph: "Churros")
}

type ChurrosMutationBanFromEventSuccess @source(name: "MutationBanFromEventSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosEvent! @source(name: "data", type: "Event!", subgraph: "Churros")
}

type ChurrosMutationBookEventSuccess @source(name: "MutationBookEventSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosRegistration! @source(name: "data", type: "Registration!", subgraph: "Churros")
}

type ChurrosMutationCancelBookingSuccess @source(name: "MutationCancelBookingSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosRegistration! @source(name: "data", type: "Registration!", subgraph: "Churros")
}

type ChurrosMutationCancelPendingContributionSuccess @source(name: "MutationCancelPendingContributionSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: Boolean!
}

type ChurrosMutationChangeEventOrganizerSuccess @source(name: "MutationChangeEventOrganizerSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosEvent! @source(name: "data", type: "Event!", subgraph: "Churros")
}

type ChurrosMutationChangePostOwnerSuccess @source(name: "MutationChangePostOwnerSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosArticle! @source(name: "data", type: "Article!", subgraph: "Churros")
}

type ChurrosMutationCheckIfBookingIsPaidSuccess @source(name: "MutationCheckIfBookingIsPaidSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosRegistration! @source(name: "data", type: "Registration!", subgraph: "Churros")
}

type ChurrosMutationContributeSuccess @source(name: "MutationContributeSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: Boolean!
}

type ChurrosMutationCreateAppleWalletPassSuccess @source(name: "MutationCreateAppleWalletPassSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: String!
}

type ChurrosMutationCreateEventSuccess @source(name: "MutationCreateEventSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosEvent! @source(name: "data", type: "Event!", subgraph: "Churros")
}

type ChurrosMutationCreateGoogleWalletPassSuccess @source(name: "MutationCreateGoogleWalletPassSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: String!
}

type ChurrosMutationCreateGroupAccessTokenSuccess @source(name: "MutationCreateGroupAccessTokenSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosCredential! @source(name: "data", type: "Credential!", subgraph: "Churros")
}

type ChurrosMutationCreateGroupSuccess @source(name: "MutationCreateGroupSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosGroup! @source(name: "data", type: "Group!", subgraph: "Churros")
}

type ChurrosMutationCreatePasswordResetSuccess @source(name: "MutationCreatePasswordResetSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: Boolean!
}

type ChurrosMutationCreatePostSuccess @source(name: "MutationCreatePostSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosArticle! @source(name: "data", type: "Article!", subgraph: "Churros")
}

type ChurrosMutationCreateSpecialOfferCodesSuccess @source(name: "MutationCreateSpecialOfferCodesSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: [String!]!
}

type ChurrosMutationCreateTicketSuccess @source(name: "MutationCreateTicketSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosTicket! @source(name: "data", type: "Ticket!", subgraph: "Churros")
}

type ChurrosMutationDeduplicateBookingsSuccess @source(name: "MutationDeduplicateBookingsSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: Int!
}

type ChurrosMutationDeleteArticleSuccess @source(name: "MutationDeleteArticleSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosArticle! @source(name: "data", type: "Article!", subgraph: "Churros")
}

type ChurrosMutationDeleteContributionSuccess @source(name: "MutationDeleteContributionSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosContributionOption! @source(name: "data", type: "ContributionOption!", subgraph: "Churros")
}

type ChurrosMutationDeleteEventSuccess @source(name: "MutationDeleteEventSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosEvent! @source(name: "data", type: "Event!", subgraph: "Churros")
  """
  Indique que l'évènement n'a pas été supprimé mais plutôt passé en privé. La valeur est un message expliquant cela, et pourquoi c'est arrivé.
  """
  didSoftDelete: String
}

type ChurrosMutationDeleteGodchildSuccess @source(name: "MutationDeleteGodchildSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosUser! @source(name: "data", type: "User!", subgraph: "Churros")
}

type ChurrosMutationDeleteGodparentSuccess @source(name: "MutationDeleteGodparentSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosUser! @source(name: "data", type: "User!", subgraph: "Churros")
}

type ChurrosMutationDeleteGroupMemberSuccess @source(name: "MutationDeleteGroupMemberSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosGroupMember! @source(name: "data", type: "GroupMember!", subgraph: "Churros")
}

type ChurrosMutationDeleteLinkSuccess @source(name: "MutationDeleteLinkSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosLink! @source(name: "data", type: "Link!", subgraph: "Churros")
}

type ChurrosMutationDeleteLydiaAccountSuccess @source(name: "MutationDeleteLydiaAccountSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosLydiaAccount! @source(name: "data", type: "LydiaAccount!", subgraph: "Churros")
}

type ChurrosMutationDeletePageSuccess @source(name: "MutationDeletePageSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosPage! @source(name: "data", type: "Page!", subgraph: "Churros")
}

type ChurrosMutationDeleteServiceSuccess @source(name: "MutationDeleteServiceSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosService! @source(name: "data", type: "Service!", subgraph: "Churros")
}

type ChurrosMutationDeleteTicketGroupSuccess @source(name: "MutationDeleteTicketGroupSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosTicketGroup! @source(name: "data", type: "TicketGroup!", subgraph: "Churros")
}

type ChurrosMutationDeleteTicketSuccess @source(name: "MutationDeleteTicketSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosTicket! @source(name: "data", type: "Ticket!", subgraph: "Churros")
  """
  Message d'explication si le billet n'a pas pu être supprimé mais qu'une autre action a été effectuée à la place
  """
  softDeleted: String
}

type ChurrosMutationFinishPaypalRegistrationPaymentSuccess @source(name: "MutationFinishPaypalRegistrationPaymentSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: Boolean!
}

type ChurrosMutationLoginSuccess @source(name: "MutationLoginSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosCredential! @source(name: "data", type: "Credential!", subgraph: "Churros")
}

type ChurrosMutationMailFormAnswersSuccess @source(name: "MutationMailFormAnswersSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: String!
}

type ChurrosMutationMarkBookingAsPaidSuccess @source(name: "MutationMarkBookingAsPaidSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosRegistration! @source(name: "data", type: "Registration!", subgraph: "Churros")
}

type ChurrosMutationMarkContributionAsPaidSuccess @source(name: "MutationMarkContributionAsPaidSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosContributionOption! @source(name: "data", type: "ContributionOption!", subgraph: "Churros")
}

type ChurrosMutationOpposeRegistrationSuccess @source(name: "MutationOpposeRegistrationSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: Boolean!
}

type ChurrosMutationPayBookingSuccess @source(name: "MutationPayBookingSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosRegistration! @source(name: "data", type: "Registration!", subgraph: "Churros")
}

type ChurrosMutationRegisterGoogleCredentialSuccess @source(name: "MutationRegisterGoogleCredentialSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: Boolean!
}

type ChurrosMutationRemoveEventManagerSuccess @source(name: "MutationRemoveEventManagerSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosEventManager! @source(name: "data", type: "EventManager!", subgraph: "Churros")
  """
  Contient un message d'explication si jamais le dernier manager a dû changer de permissions afin de conserver au moins un manager avec les permissions de gestion des managers de l'événement
  """
  lastManagerPowerlevelChanged: String
}

type ChurrosMutationRemoveFileFromPageSuccess @source(name: "MutationRemoveFileFromPageSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosPage! @source(name: "data", type: "Page!", subgraph: "Churros")
}

type ChurrosMutationRequestEmailChangeSuccess @source(name: "MutationRequestEmailChangeSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosEmailChange! @source(name: "data", type: "EmailChange!", subgraph: "Churros")
}

type ChurrosMutationResetPasswordSuccess @source(name: "MutationResetPasswordSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: Boolean!
}

type ChurrosMutationSaveLydiaPhoneNumberSuccess @source(name: "MutationSaveLydiaPhoneNumberSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosUser! @source(name: "data", type: "User!", subgraph: "Churros")
}

type ChurrosMutationSelfJoinGroupSuccess @source(name: "MutationSelfJoinGroupSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosGroupMember! @source(name: "data", type: "GroupMember!", subgraph: "Churros")
}

type ChurrosMutationSetEventApplicableOffersSuccess @source(name: "MutationSetEventApplicableOffersSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosEvent! @source(name: "data", type: "Event!", subgraph: "Churros")
}

type ChurrosMutationSetEventBeneficiarySuccess @source(name: "MutationSetEventBeneficiarySuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosEvent! @source(name: "data", type: "Event!", subgraph: "Churros")
}

type ChurrosMutationSetEventCoOrganizersSuccess @source(name: "MutationSetEventCoOrganizersSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosEvent! @source(name: "data", type: "Event!", subgraph: "Churros")
}

type ChurrosMutationSetEventDatesSuccess @source(name: "MutationSetEventDatesSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosEvent! @source(name: "data", type: "Event!", subgraph: "Churros")
}

type ChurrosMutationSetEventVisibilitySuccess @source(name: "MutationSetEventVisibilitySuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosEvent! @source(name: "data", type: "Event!", subgraph: "Churros")
}

type ChurrosMutationSetGroupJoinPolicySuccess @source(name: "MutationSetGroupJoinPolicySuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosGroup! @source(name: "data", type: "Group!", subgraph: "Churros")
}

type ChurrosMutationSetGroupStudentAssociationSuccess @source(name: "MutationSetGroupStudentAssociationSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosGroup! @source(name: "data", type: "Group!", subgraph: "Churros")
}

type ChurrosMutationSetGroupTypeSuccess @source(name: "MutationSetGroupTypeSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosGroup! @source(name: "data", type: "Group!", subgraph: "Churros")
}

type ChurrosMutationSetParentGroupSuccess @source(name: "MutationSetParentGroupSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosGroup! @source(name: "data", type: "Group!", subgraph: "Churros")
}

type ChurrosMutationSetPictureSuccess @source(name: "MutationSetPictureSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  """
  Si l'image a déjà été supprimée, renvoie un texte expliquant que l'image a déjà été supprimée. Sinon, renvoie une chaîne vide.
  """
  alreadyDeleted: String!
  data: ChurrosPictured! @source(name: "data", type: "Pictured!", subgraph: "Churros")
}

type ChurrosMutationSetTicketGroupSuccess @source(name: "MutationSetTicketGroupSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosTicket! @source(name: "data", type: "Ticket!", subgraph: "Churros")
}

type ChurrosMutationStartSignupSuccess @source(name: "MutationStartSignupSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosUserCandidate! @source(name: "data", type: "UserCandidate!", subgraph: "Churros")
}

type ChurrosMutationSubscribeToNotificationsSuccess @source(name: "MutationSubscribeToNotificationsSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosNotificationSubscription! @source(name: "data", type: "NotificationSubscription!", subgraph: "Churros")
}

type ChurrosMutationUnbanFromEventSuccess @source(name: "MutationUnbanFromEventSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosEvent! @source(name: "data", type: "Event!", subgraph: "Churros")
}

type ChurrosMutationUnlinkEventFromPostSuccess @source(name: "MutationUnlinkEventFromPostSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosArticle! @source(name: "data", type: "Article!", subgraph: "Churros")
}

type ChurrosMutationUnsubscribeFromNotificationsSuccess @source(name: "MutationUnsubscribeFromNotificationsSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosNotificationSubscription! @source(name: "data", type: "NotificationSubscription!", subgraph: "Churros")
}

type ChurrosMutationUpdateEventRecurrenceSuccess @source(name: "MutationUpdateEventRecurrenceSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosEvent! @source(name: "data", type: "Event!", subgraph: "Churros")
}

type ChurrosMutationUpdateEventSuccess @source(name: "MutationUpdateEventSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosEvent! @source(name: "data", type: "Event!", subgraph: "Churros")
}

type ChurrosMutationUpdateGroupMemberSuccess @source(name: "MutationUpdateGroupMemberSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosGroupMember! @source(name: "data", type: "GroupMember!", subgraph: "Churros")
}

type ChurrosMutationUpdateGroupProfileSuccess @source(name: "MutationUpdateGroupProfileSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosGroup! @source(name: "data", type: "Group!", subgraph: "Churros")
}

type ChurrosMutationUpdateLinkSuccess @source(name: "MutationUpdateLinkSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosLink! @source(name: "data", type: "Link!", subgraph: "Churros")
}

type ChurrosMutationUpdateTicketConstraintsSuccess @source(name: "MutationUpdateTicketConstraintsSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  """
  Les contraintes de billet n'ont pas été enregistrées tel quel mais on été simplifiées. La valeur est un message d'explication.
  """
  constraintsWereSimplified: String
  data: ChurrosTicket! @source(name: "data", type: "Ticket!", subgraph: "Churros")
}

type ChurrosMutationUpdateTicketSuccess @source(name: "MutationUpdateTicketSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosTicket! @source(name: "data", type: "Ticket!", subgraph: "Churros")
}

type ChurrosMutationUpdateUserCandidateSuccess @source(name: "MutationUpdateUserCandidateSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: Boolean!
}

type ChurrosMutationUpdateUserCurriculumSuccess @source(name: "MutationUpdateUserCurriculumSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosUser! @source(name: "data", type: "User!", subgraph: "Churros")
}

type ChurrosMutationUpdateUserPermissionsSuccess @source(name: "MutationUpdateUserPermissionsSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosUser! @source(name: "data", type: "User!", subgraph: "Churros")
}

type ChurrosMutationUpdateUserProfileSuccess @source(name: "MutationUpdateUserProfileSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosUser! @source(name: "data", type: "User!", subgraph: "Churros")
}

type ChurrosMutationUpdateUserSuccess @source(name: "MutationUpdateUserSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosUser! @source(name: "data", type: "User!", subgraph: "Churros")
}

type ChurrosMutationUpsertAnnouncementSuccess @source(name: "MutationUpsertAnnouncementSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosAnnouncement! @source(name: "data", type: "Announcement!", subgraph: "Churros")
}

type ChurrosMutationUpsertArticleSuccess @source(name: "MutationUpsertArticleSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosArticle! @source(name: "data", type: "Article!", subgraph: "Churros")
}

type ChurrosMutationUpsertArticleV2Success @source(name: "MutationUpsertArticleV2Success", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosArticle! @source(name: "data", type: "Article!", subgraph: "Churros")
}

type ChurrosMutationUpsertDocumentSuccess @source(name: "MutationUpsertDocumentSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosDocument! @source(name: "data", type: "Document!", subgraph: "Churros")
}

type ChurrosMutationUpsertEventManagerSuccess @source(name: "MutationUpsertEventManagerSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosEventManager! @source(name: "data", type: "EventManager!", subgraph: "Churros")
}

type ChurrosMutationUpsertGodparentRequestSuccess @source(name: "MutationUpsertGodparentRequestSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosGodparentRequest! @source(name: "data", type: "GodparentRequest!", subgraph: "Churros")
}

type ChurrosMutationUpsertGroupSuccess @source(name: "MutationUpsertGroupSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosGroup! @source(name: "data", type: "Group!", subgraph: "Churros")
}

type ChurrosMutationUpsertLydiaAccountSuccess @source(name: "MutationUpsertLydiaAccountSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosLydiaAccount! @source(name: "data", type: "LydiaAccount!", subgraph: "Churros")
}

type ChurrosMutationUpsertPageSuccess @source(name: "MutationUpsertPageSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosPage! @source(name: "data", type: "Page!", subgraph: "Churros")
}

type ChurrosMutationUpsertRegistrationSuccess @source(name: "MutationUpsertRegistrationSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosRegistration! @source(name: "data", type: "Registration!", subgraph: "Churros")
}

type ChurrosMutationUpsertServiceSuccess @source(name: "MutationUpsertServiceSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosService! @source(name: "data", type: "Service!", subgraph: "Churros")
}

type ChurrosMutationUpsertServiceV2Success @source(name: "MutationUpsertServiceV2Success", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosService! @source(name: "data", type: "Service!", subgraph: "Churros")
}

type ChurrosMutationUpsertThemeSuccess @source(name: "MutationUpsertThemeSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosTheme! @source(name: "data", type: "Theme!", subgraph: "Churros")
}

type ChurrosMutationUpsertTicketGroupSuccess @source(name: "MutationUpsertTicketGroupSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosTicketGroup! @source(name: "data", type: "TicketGroup!", subgraph: "Churros")
}

type ChurrosMutationUsePasswordResetSuccess @source(name: "MutationUsePasswordResetSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: Boolean!
}

type ChurrosMutationValidateEmailSuccess @source(name: "MutationValidateEmailSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosEmailChange! @source(name: "data", type: "EmailChange!", subgraph: "Churros")
}

type ChurrosMutationVerifyBookingSuccess @source(name: "MutationVerifyBookingSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosRegistrationVerificationResult! @source(name: "data", type: "RegistrationVerificationResult!", subgraph: "Churros")
}

"""An error raised when a resource does not exist."""
type ChurrosNotFoundError implements ChurrosErrorInterface @source(name: "NotFoundError", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosErrorInterface") {
  message: String!
}

"""A notification is a push notification that was sent to a user"""
type ChurrosNotification implements ChurrosNode @source(name: "Notification", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosNode") {
  actions: [ChurrosLink!]! @source(name: "actions", type: "[Link!]!", subgraph: "Churros")
  body: String!
  channel: ChurrosNotificationChannel! @source(name: "channel", type: "NotificationChannel!", subgraph: "Churros")
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  goto: String!
  group: ChurrosGroup @source(name: "group", type: "Group", subgraph: "Churros")
  groupId: ID
  id: ID!
  imageFile: String!
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  subscription: ChurrosNotificationSubscription! @source(name: "subscription", type: "NotificationSubscription!", subgraph: "Churros")
  subscriptionId: ID!
  timestamp: ChurrosDateTime @source(name: "timestamp", type: "DateTime", subgraph: "Churros")
  title: String!
  updatedAt: ChurrosDateTime! @source(name: "updatedAt", type: "DateTime!", subgraph: "Churros")
  vibrate: [Int!]!
}

"""
A NotificationSubscription stores a user's subscription to push notifications on a user agent
"""
type ChurrosNotificationSubscription @source(name: "NotificationSubscription", subgraph: "Churros") @join__type(graph: CHURROS) {
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  endpoint: String!
  expiresAt: ChurrosDateTime @source(name: "expiresAt", type: "DateTime", subgraph: "Churros")
  id: ID!
  name: String!
  owner: ChurrosUser! @source(name: "owner", type: "User!", subgraph: "Churros")
  ownerId: ID!
  updatedAt: ChurrosDateTime! @source(name: "updatedAt", type: "DateTime!", subgraph: "Churros")
}

"""
Une page écrite par un·e utilisateur·rice, servant par exemple à présenter les partenariats d'une AE sur une page dédiée.
"""
type ChurrosPage @source(name: "Page", subgraph: "Churros") @join__type(graph: CHURROS) {
  """Contenu de la page. Supporte la syntaxe Markdown."""
  body: String!
  """Contenu de la page, converti en HTML. Protégé contre les attaques XSS."""
  bodyHtml: String!
  """L'utilisateur·ice connecté·e peut modifier ou supprimer cette page"""
  canBeEdited: Boolean!
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  """
  Chemin vers les fichiers inclus sur la page, par exmple des images. Voir filesURLs pour obtenir les URLs de ces fichiers.
  """
  files: [String!]!
  """URLs vers les fichiers inclus sur la page."""
  filesURLs: [String!]!
  """
  Groupe auquel appartient la page. Peut être null si la page n'appartient à aucun groupe.
  """
  group: ChurrosGroup @source(name: "group", type: "Group", subgraph: "Churros")
  id: ID!
  """
  Dernier·ère utilisateur·rice ayant modifié la page. Peut être null si la page n'a jamais été modifiée, ou que l'utilisateur·ice en question a été supprimé·e.
  """
  lastAuthor: ChurrosUser @source(name: "lastAuthor", type: "User", subgraph: "Churros")
  """
  Chemin vers la page. Doit être unique _par AE ou groupe_. L'URL finale sera donc préfixée d'une certaine manière pour éviter les collisions.
  """
  path: String!
  """
  Association étudiante à laquelle appartient la page. Peut être null si la page n'appartient à aucune association.
  """
  studentAssociation: ChurrosStudentAssociation @source(name: "studentAssociation", type: "StudentAssociation", subgraph: "Churros")
  """Titre de la page."""
  title: String!
  updatedAt: ChurrosDateTime! @source(name: "updatedAt", type: "DateTime!", subgraph: "Churros")
}

type ChurrosPageInfo @source(name: "PageInfo", subgraph: "Churros") @join__type(graph: CHURROS) {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type ChurrosPagesConnection @source(name: "PagesConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosPagesEdge!]! @source(name: "edges", type: "[PagesEdge!]!", subgraph: "Churros")
  nodes: [ChurrosPage!]! @source(name: "nodes", type: "[Page!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosPagesEdge @source(name: "PagesEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosPage! @source(name: "node", type: "Page!", subgraph: "Churros")
}

type ChurrosProfitsBreakdown @source(name: "ProfitsBreakdown", subgraph: "Churros") @join__type(graph: CHURROS) {
  byPaymentMethod: ChurrosProfitsBreakdownByPaymentMethod! @source(name: "byPaymentMethod", type: "ProfitsBreakdownByPaymentMethod!", subgraph: "Churros")
  byTicket: [ChurrosProfitsBreakdownByTicket!]! @source(name: "byTicket", type: "[ProfitsBreakdownByTicket!]!", subgraph: "Churros")
  total: Float!
}

type ChurrosProfitsBreakdownByPaymentMethod @source(name: "ProfitsBreakdownByPaymentMethod", subgraph: "Churros") @join__type(graph: CHURROS) {
  Card: Float!
  Cash: Float!
  Check: Float!
  External: Float!
  Lydia: Float!
  Other: Float!
  PayPal: Float!
  Transfer: Float!
}

type ChurrosProfitsBreakdownByTicket @source(name: "ProfitsBreakdownByTicket", subgraph: "Churros") @join__type(graph: CHURROS) {
  amount: Float!
  id: ID!
}

type ChurrosQRCode @source(name: "QRCode", subgraph: "Churros") @join__type(graph: CHURROS) {
  path: String!
  viewbox: String!
}

type ChurrosQueryAllFormsConnection @source(name: "QueryAllFormsConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosQueryAllFormsConnectionEdge!]! @source(name: "edges", type: "[QueryAllFormsConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosForm!]! @source(name: "nodes", type: "[Form!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosQueryAllFormsConnectionEdge @source(name: "QueryAllFormsConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosForm! @source(name: "node", type: "Form!", subgraph: "Churros")
}

type ChurrosQueryAllUsersConnection @source(name: "QueryAllUsersConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosQueryAllUsersConnectionEdge!]! @source(name: "edges", type: "[QueryAllUsersConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosUser!]! @source(name: "nodes", type: "[User!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosQueryAllUsersConnectionEdge @source(name: "QueryAllUsersConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosUser! @source(name: "node", type: "User!", subgraph: "Churros")
}

type ChurrosQueryAnnouncementsConnection @source(name: "QueryAnnouncementsConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosQueryAnnouncementsConnectionEdge!]! @source(name: "edges", type: "[QueryAnnouncementsConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosAnnouncement!]! @source(name: "nodes", type: "[Announcement!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosQueryAnnouncementsConnectionEdge @source(name: "QueryAnnouncementsConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosAnnouncement! @source(name: "node", type: "Announcement!", subgraph: "Churros")
}

type ChurrosQueryCodeContributorsSuccess @source(name: "QueryCodeContributorsSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: [ChurrosUser!]! @source(name: "data", type: "[User!]!", subgraph: "Churros")
}

type ChurrosQueryCombinedChangelogSuccess @source(name: "QueryCombinedChangelogSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: [ChurrosChangelogRelease!]! @source(name: "data", type: "[ChangelogRelease!]!", subgraph: "Churros")
}

type ChurrosQueryDocumentsConnection @source(name: "QueryDocumentsConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosQueryDocumentsConnectionEdge!]! @source(name: "edges", type: "[QueryDocumentsConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosDocument!]! @source(name: "nodes", type: "[Document!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosQueryDocumentsConnectionEdge @source(name: "QueryDocumentsConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosDocument! @source(name: "node", type: "Document!", subgraph: "Churros")
}

type ChurrosQueryEventsByDayConnection @source(name: "QueryEventsByDayConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosQueryEventsByDayConnectionEdge!]! @source(name: "edges", type: "[QueryEventsByDayConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosEventsByDay!]! @source(name: "nodes", type: "[EventsByDay!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosQueryEventsByDayConnectionEdge @source(name: "QueryEventsByDayConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosEventsByDay! @source(name: "node", type: "EventsByDay!", subgraph: "Churros")
}

type ChurrosQueryEventsConnection @source(name: "QueryEventsConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosQueryEventsConnectionEdge!]! @source(name: "edges", type: "[QueryEventsConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosEvent!]! @source(name: "nodes", type: "[Event!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosQueryEventsConnectionEdge @source(name: "QueryEventsConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosEvent! @source(name: "node", type: "Event!", subgraph: "Churros")
}

type ChurrosQueryFormsConnection @source(name: "QueryFormsConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosQueryFormsConnectionEdge!]! @source(name: "edges", type: "[QueryFormsConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosForm!]! @source(name: "nodes", type: "[Form!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosQueryFormsConnectionEdge @source(name: "QueryFormsConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosForm! @source(name: "node", type: "Form!", subgraph: "Churros")
}

type ChurrosQueryGroupMembersCsvSuccess @source(name: "QueryGroupMembersCsvSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: String!
}

type ChurrosQueryHomepageConnection @source(name: "QueryHomepageConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosQueryHomepageConnectionEdge!]! @source(name: "edges", type: "[QueryHomepageConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosArticle!]! @source(name: "nodes", type: "[Article!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosQueryHomepageConnectionEdge @source(name: "QueryHomepageConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosArticle! @source(name: "node", type: "Article!", subgraph: "Churros")
}

type ChurrosQueryLogsConnection @source(name: "QueryLogsConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosQueryLogsConnectionEdge!]! @source(name: "edges", type: "[QueryLogsConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosLogEntry!]! @source(name: "nodes", type: "[LogEntry!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosQueryLogsConnectionEdge @source(name: "QueryLogsConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosLogEntry! @source(name: "node", type: "LogEntry!", subgraph: "Churros")
}

type ChurrosQueryMinorsConnection @source(name: "QueryMinorsConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosQueryMinorsConnectionEdge!]! @source(name: "edges", type: "[QueryMinorsConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosMinor!]! @source(name: "nodes", type: "[Minor!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosQueryMinorsConnectionEdge @source(name: "QueryMinorsConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosMinor! @source(name: "node", type: "Minor!", subgraph: "Churros")
}

type ChurrosQueryNotificationsConnection @source(name: "QueryNotificationsConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosQueryNotificationsConnectionEdge!]! @source(name: "edges", type: "[QueryNotificationsConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosNotification!]! @source(name: "nodes", type: "[Notification!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosQueryNotificationsConnectionEdge @source(name: "QueryNotificationsConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosNotification! @source(name: "node", type: "Notification!", subgraph: "Churros")
}

type ChurrosQueryPagesConnection @source(name: "QueryPagesConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosQueryPagesConnectionEdge!]! @source(name: "edges", type: "[QueryPagesConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosPage!]! @source(name: "nodes", type: "[Page!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosQueryPagesConnectionEdge @source(name: "QueryPagesConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosPage! @source(name: "node", type: "Page!", subgraph: "Churros")
}

type ChurrosQueryQuickSignupsConnection @source(name: "QueryQuickSignupsConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosQueryQuickSignupsConnectionEdge!]! @source(name: "edges", type: "[QueryQuickSignupsConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosQuickSignup!]! @source(name: "nodes", type: "[QuickSignup!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosQueryQuickSignupsConnectionEdge @source(name: "QueryQuickSignupsConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosQuickSignup! @source(name: "node", type: "QuickSignup!", subgraph: "Churros")
}

type ChurrosQueryReactionsConnection @source(name: "QueryReactionsConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosQueryReactionsConnectionEdge!]! @source(name: "edges", type: "[QueryReactionsConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosReaction!]! @source(name: "nodes", type: "[Reaction!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosQueryReactionsConnectionEdge @source(name: "QueryReactionsConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosReaction! @source(name: "node", type: "Reaction!", subgraph: "Churros")
}

type ChurrosQueryRegistrationSuccess @source(name: "QueryRegistrationSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosRegistration! @source(name: "data", type: "Registration!", subgraph: "Churros")
}

type ChurrosQueryUpcomingChangelogSuccess @source(name: "QueryUpcomingChangelogSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosChangelogRelease! @source(name: "data", type: "ChangelogRelease!", subgraph: "Churros")
}

type ChurrosQueryUserCandidatesConnection @source(name: "QueryUserCandidatesConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosQueryUserCandidatesConnectionEdge!]! @source(name: "edges", type: "[QueryUserCandidatesConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosUserCandidate!]! @source(name: "nodes", type: "[UserCandidate!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosQueryUserCandidatesConnectionEdge @source(name: "QueryUserCandidatesConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosUserCandidate! @source(name: "node", type: "UserCandidate!", subgraph: "Churros")
}

type ChurrosQuestionAnswersConnection @source(name: "QuestionAnswersConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosQuestionAnswersConnectionEdge!]! @source(name: "edges", type: "[QuestionAnswersConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosAnswer!]! @source(name: "nodes", type: "[Answer!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosQuestionAnswersConnectionEdge @source(name: "QuestionAnswersConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosAnswer! @source(name: "node", type: "Answer!", subgraph: "Churros")
}

"""Question de type `FileUpload`"""
type ChurrosQuestionFileUpload implements ChurrosQuestion @source(name: "QuestionFileUpload", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosQuestion") {
  """
  Types de fichiers autorisés pour les questions de type `File`. Null si la question n'est pas de type `File`.
  """
  allowedFileTypes: [String!]
  """
  Indique si la réponse à la question est anonyme. Si oui, les personnes pouvant voir les réponses ne pouront jamais savoir la réponse d'une personne à la question
  """
  anonymous: Boolean!
  answers(
    after: String
    before: String
    """Récupérer uniquement les réponses d'un utilisateur, par son uid."""
    by: String
    first: Int
    last: Int
  ): ChurrosQuestionAnswersConnection! @source(name: "answers", type: "QuestionAnswersConnection!", subgraph: "Churros")
  """
  La réponse par défaut à cette question. Même si le résultat est bien de type Answer, le champ `id` est vide
  """
  defaultAnswer: ChurrosAnswer @source(name: "defaultAnswer", type: "Answer", subgraph: "Churros")
  """Description en Markdown de la question"""
  description: String!
  """Description en HTML de la question"""
  descriptionHtml: String!
  """Préfixe d'identifiant: question:"""
  id: ID!
  """Indique si la question est obligatoire"""
  mandatory: Boolean!
  """La réponse de l'utilisateur·ice connecté·e à cette question"""
  myAnswer: ChurrosAnswer @source(name: "myAnswer", type: "Answer", subgraph: "Churros")
  """Ordre de la question dans la section"""
  order: Int!
  """Section du formulaire dans laquelle est la question"""
  section: ChurrosFormSection! @source(name: "section", type: "FormSection!", subgraph: "Churros")
  """Titre de la question"""
  title: String!
  """Nombre total de réponses à cette question"""
  totalAnswers: Int!
  """Type de la question"""
  type: ChurrosQuestionKind! @source(name: "type", type: "QuestionKind!", subgraph: "Churros")
}

"""Question de type `Text`, `Number`, `Date`, `Time` ou `LongText`"""
type ChurrosQuestionScalar implements ChurrosQuestion @source(name: "QuestionScalar", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosQuestion") {
  """
  Indique si la réponse à la question est anonyme. Si oui, les personnes pouvant voir les réponses ne pouront jamais savoir la réponse d'une personne à la question
  """
  anonymous: Boolean!
  answers(
    after: String
    before: String
    """Récupérer uniquement les réponses d'un utilisateur, par son uid."""
    by: String
    first: Int
    last: Int
  ): ChurrosQuestionAnswersConnection! @source(name: "answers", type: "QuestionAnswersConnection!", subgraph: "Churros")
  """
  La réponse par défaut à cette question. Même si le résultat est bien de type Answer, le champ `id` est vide
  """
  defaultAnswer: ChurrosAnswer @source(name: "defaultAnswer", type: "Answer", subgraph: "Churros")
  """Description en Markdown de la question"""
  description: String!
  """Description en HTML de la question"""
  descriptionHtml: String!
  """Préfixe d'identifiant: question:"""
  id: ID!
  """Indique si la question est obligatoire"""
  mandatory: Boolean!
  """La réponse de l'utilisateur·ice connecté·e à cette question"""
  myAnswer: ChurrosAnswer @source(name: "myAnswer", type: "Answer", subgraph: "Churros")
  """Ordre de la question dans la section"""
  order: Int!
  """Section du formulaire dans laquelle est la question"""
  section: ChurrosFormSection! @source(name: "section", type: "FormSection!", subgraph: "Churros")
  """Titre de la question"""
  title: String!
  """Nombre total de réponses à cette question"""
  totalAnswers: Int!
  """Type de la question"""
  type: ChurrosQuestionKind! @source(name: "type", type: "QuestionKind!", subgraph: "Churros")
}

"""Question de type `Scale`"""
type ChurrosQuestionScale implements ChurrosQuestion @source(name: "QuestionScale", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosQuestion") {
  """
  Indique si la réponse à la question est anonyme. Si oui, les personnes pouvant voir les réponses ne pouront jamais savoir la réponse d'une personne à la question
  """
  anonymous: Boolean!
  """
  Compte le nombre total de réponses pour chaque option. Retourne un `StringToIntMapping` où les clés sont les options et les valeurs sont le nombre de réponses pour l'option.
  """
  answerCounts: [ChurrosStringToIntMapping!]! @source(name: "answerCounts", type: "[StringToIntMapping!]!", subgraph: "Churros")
  answers(
    after: String
    before: String
    """Récupérer uniquement les réponses d'un utilisateur, par son uid."""
    by: String
    first: Int
    last: Int
  ): ChurrosQuestionAnswersConnection! @source(name: "answers", type: "QuestionAnswersConnection!", subgraph: "Churros")
  """
  La réponse par défaut à cette question. Même si le résultat est bien de type Answer, le champ `id` est vide
  """
  defaultAnswer: ChurrosAnswer @source(name: "defaultAnswer", type: "Answer", subgraph: "Churros")
  """Description en Markdown de la question"""
  description: String!
  """Description en HTML de la question"""
  descriptionHtml: String!
  """Préfixe d'identifiant: question:"""
  id: ID!
  """Liste des labels pour les valeurs possibles"""
  labels: [String!]!
  """Indique si la question est obligatoire"""
  mandatory: Boolean!
  """Valeur maximale"""
  maximum: Int!
  """Label de la valeur maximale"""
  maximumLabel: String!
  """Valeur minimale"""
  minimum: Int!
  """Label de la valeur minimale"""
  minimumLabel: String!
  """La réponse de l'utilisateur·ice connecté·e à cette question"""
  myAnswer: ChurrosAnswer @source(name: "myAnswer", type: "Answer", subgraph: "Churros")
  """Liste des valeurs possibles"""
  options: [Int!]!
  """Ordre de la question dans la section"""
  order: Int!
  """Section du formulaire dans laquelle est la question"""
  section: ChurrosFormSection! @source(name: "section", type: "FormSection!", subgraph: "Churros")
  """Titre de la question"""
  title: String!
  """Nombre total de réponses à cette question"""
  totalAnswers: Int!
  """Type de la question"""
  type: ChurrosQuestionKind! @source(name: "type", type: "QuestionKind!", subgraph: "Churros")
}

"""Question de type `SelectMultiple`"""
type ChurrosQuestionSelectMultiple implements ChurrosQuestion @source(name: "QuestionSelectMultiple", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosQuestion") {
  """
  Indique si la question de type `SelectOne` ou `SelectMultiple` permet une option "Autre", que l'utilisateur·ice peut remplir sans contrainte.
  """
  allowOptionsOther: Boolean!
  """
  Indique si la réponse à la question est anonyme. Si oui, les personnes pouvant voir les réponses ne pouront jamais savoir la réponse d'une personne à la question
  """
  anonymous: Boolean!
  """
  Compte le nombre total de réponses pour chaque option. Retourne un `StringToIntMapping` où les clés sont les options et les valeurs sont le nombre de réponses pour l'option.
  """
  answerCounts: [ChurrosStringToIntMapping!]! @source(name: "answerCounts", type: "[StringToIntMapping!]!", subgraph: "Churros")
  answers(
    after: String
    before: String
    """Récupérer uniquement les réponses d'un utilisateur, par son uid."""
    by: String
    first: Int
    last: Int
  ): ChurrosQuestionAnswersConnection! @source(name: "answers", type: "QuestionAnswersConnection!", subgraph: "Churros")
  """
  La réponse par défaut à cette question. Même si le résultat est bien de type Answer, le champ `id` est vide
  """
  defaultAnswer: ChurrosAnswer @source(name: "defaultAnswer", type: "Answer", subgraph: "Churros")
  """Description en Markdown de la question"""
  description: String!
  """Description en HTML de la question"""
  descriptionHtml: String!
  """Préfixe d'identifiant: question:"""
  id: ID!
  """Indique si la question est obligatoire"""
  mandatory: Boolean!
  """La réponse de l'utilisateur·ice connecté·e à cette question"""
  myAnswer: ChurrosAnswer @source(name: "myAnswer", type: "Answer", subgraph: "Churros")
  """
  Uniquement pertinent pour les questions de type `SelectOne` ou `SelectMultiple`
  """
  options: [String!]!
  """Ordre de la question dans la section"""
  order: Int!
  """Section du formulaire dans laquelle est la question"""
  section: ChurrosFormSection! @source(name: "section", type: "FormSection!", subgraph: "Churros")
  """Titre de la question"""
  title: String!
  """Nombre total de réponses à cette question"""
  totalAnswers: Int!
  """Type de la question"""
  type: ChurrosQuestionKind! @source(name: "type", type: "QuestionKind!", subgraph: "Churros")
}

"""Question de type `SelectOne`"""
type ChurrosQuestionSelectOne implements ChurrosQuestion @source(name: "QuestionSelectOne", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosQuestion") {
  """
  Indique si la question de type `SelectOne` ou `SelectMultiple` permet une option "Autre", que l'utilisateur·ice peut remplir sans contrainte.
  """
  allowOptionsOther: Boolean!
  """
  Indique si la réponse à la question est anonyme. Si oui, les personnes pouvant voir les réponses ne pouront jamais savoir la réponse d'une personne à la question
  """
  anonymous: Boolean!
  """
  Compte le nombre total de réponses pour chaque option. Retourne un `StringToIntMapping` où les clés sont les options et les valeurs sont le nombre de réponses pour l'option.
  """
  answerCounts: [ChurrosStringToIntMapping!]! @source(name: "answerCounts", type: "[StringToIntMapping!]!", subgraph: "Churros")
  answers(
    after: String
    before: String
    """Récupérer uniquement les réponses d'un utilisateur, par son uid."""
    by: String
    first: Int
    last: Int
  ): ChurrosQuestionAnswersConnection! @source(name: "answers", type: "QuestionAnswersConnection!", subgraph: "Churros")
  """
  La réponse par défaut à cette question. Même si le résultat est bien de type Answer, le champ `id` est vide
  """
  defaultAnswer: ChurrosAnswer @source(name: "defaultAnswer", type: "Answer", subgraph: "Churros")
  """Description en Markdown de la question"""
  description: String!
  """Description en HTML de la question"""
  descriptionHtml: String!
  """
  Dans le même ordre que `options`, contient le groupe si l'option porte exactement le nom du groupe, ou null si aucun groupe ne correspond. Pratique pour les questions où l'on demande à choisir entre plusieurs groupes (comme les votes de listes par ex.)
  """
  groups: [ChurrosGroup]! @source(name: "groups", type: "[Group]!", subgraph: "Churros")
  """Préfixe d'identifiant: question:"""
  id: ID!
  """
  Correspondances entre les réponses à cette question et les sections du formulaire à sauter vers. Dans le même ordre que `options`. Quand un élément est null, la section suivante n'est pas modifiée
  """
  jumps: [ChurrosFormSection]! @source(name: "jumps", type: "[FormSection]!", subgraph: "Churros")
  """Indique si la question est obligatoire"""
  mandatory: Boolean!
  """La réponse de l'utilisateur·ice connecté·e à cette question"""
  myAnswer: ChurrosAnswer @source(name: "myAnswer", type: "Answer", subgraph: "Churros")
  """
  Uniquement pertinent pour les questions de type `SelectOne` ou `SelectMultiple`
  """
  options: [String!]!
  """Ordre de la question dans la section"""
  order: Int!
  """Section du formulaire dans laquelle est la question"""
  section: ChurrosFormSection! @source(name: "section", type: "FormSection!", subgraph: "Churros")
  """Titre de la question"""
  title: String!
  """Nombre total de réponses à cette question"""
  totalAnswers: Int!
  """Type de la question"""
  type: ChurrosQuestionKind! @source(name: "type", type: "QuestionKind!", subgraph: "Churros")
}

"""
Lien d'inscription rapide, qui permet de créer un compte étudiant sans adresse mail étudiante et sans validation manuelle
"""
type ChurrosQuickSignup implements ChurrosNode @source(name: "QuickSignup", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosNode") {
  code: String!
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  """Vrai si le lien est expiré"""
  expired: Boolean!
  id: ID!
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  school: ChurrosSchool! @source(name: "school", type: "School!", subgraph: "Churros")
  schoolId: ID!
  updatedAt: ChurrosDateTime! @source(name: "updatedAt", type: "DateTime!", subgraph: "Churros")
  validUntil: ChurrosDateTime! @source(name: "validUntil", type: "DateTime!", subgraph: "Churros")
}

type ChurrosReaction implements ChurrosNode @source(name: "Reaction", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosNode") {
  author: ChurrosUser @source(name: "author", type: "User", subgraph: "Churros")
  authorId: ID
  comment: ChurrosComment @source(name: "comment", type: "Comment", subgraph: "Churros")
  commentId: ID
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  document: ChurrosDocument @source(name: "document", type: "Document", subgraph: "Churros")
  documentId: ID
  emoji: String!
  id: ID!
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  updatedAt: ChurrosDateTime! @source(name: "updatedAt", type: "DateTime!", subgraph: "Churros")
}

type ChurrosRedisHealthCheck @source(name: "RedisHealthCheck", subgraph: "Churros") @join__type(graph: CHURROS) {
  """Whether the Redis publisher client is ready"""
  publish: Boolean!
  """Whether the Redis subscriber client is ready"""
  subscribe: Boolean!
}

"""A reservation is a user's registration for a ticket"""
type ChurrosRegistration implements ChurrosNode @source(name: "Registration", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosNode") {
  author: ChurrosUser @source(name: "author", type: "User", subgraph: "Churros")
  authorEmail: String!
  authorId: ID
  authorIsBeneficiary: Boolean!
  """En attente du démarrage du paiement par l'utilisateur.ice"""
  awaitingPayment: Boolean!
  beneficiary: String! @deprecated(reason: "Use `externalBeneficiary` instead.")
  beneficiaryUser: ChurrosUser @source(name: "beneficiaryUser", type: "User", subgraph: "Churros")
  """
  L'utilisateur.ice connecté.e peut marquer la réservation comme payée, la valider, etc.
  """
  canManage: Boolean!
  cancelled: Boolean!
  cancelledAt: ChurrosDateTime @source(name: "cancelledAt", type: "DateTime", subgraph: "Churros")
  cancelledBy: ChurrosUser @source(name: "cancelledBy", type: "User", subgraph: "Churros")
  code: String!
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  externalBeneficiary: String
  id: ID!
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  opposed: Boolean!
  opposedAt: ChurrosDateTime @source(name: "opposedAt", type: "DateTime", subgraph: "Churros")
  opposedBy: ChurrosUser @source(name: "opposedBy", type: "User", subgraph: "Churros")
  paid: Boolean!
  paymentMethod: ChurrosPaymentMethod @source(name: "paymentMethod", type: "PaymentMethod", subgraph: "Churros")
  """
  Une demande de paiement a été effectuée mais la place n'est pas encore payée
  """
  pendingPayment: Boolean!
  """Returns an SVG path of the QR Code for the given registration"""
  qrCode(
    """
    URL à utiliser pour le QR Code. `[code]` sera remplacé par le code de la réservation
    """
    url: ChurrosURL! @source(name: "url", type: "URL!", subgraph: "Churros")
  ): ChurrosQRCode! @source(name: "qrCode", type: "QRCode!", subgraph: "Churros")
  ticket: ChurrosTicket! @source(name: "ticket", type: "Ticket!", subgraph: "Churros")
  ticketId: ID!
  updatedAt: ChurrosDateTime! @source(name: "updatedAt", type: "DateTime!", subgraph: "Churros")
  verified: Boolean!
  verifiedAt: ChurrosDateTime @source(name: "verifiedAt", type: "DateTime", subgraph: "Churros")
  verifiedBy: ChurrosUser @source(name: "verifiedBy", type: "User", subgraph: "Churros")
  wantsToPay: Float
}

type ChurrosRegistrationSearchResult @source(name: "RegistrationSearchResult", subgraph: "Churros") @join__type(graph: CHURROS) {
  highlightedBeneficiary: String!
  id: ID!
  rank: Float
  registration: ChurrosRegistration! @source(name: "registration", type: "Registration!", subgraph: "Churros")
  similarity: Float!
}

type ChurrosRegistrationVerificationResult @source(name: "RegistrationVerificationResult", subgraph: "Churros") @join__type(graph: CHURROS) {
  message: String
  registration: ChurrosRegistration @source(name: "registration", type: "Registration", subgraph: "Churros")
  state: ChurrosRegistrationVerificationState! @source(name: "state", type: "RegistrationVerificationState!", subgraph: "Churros")
}

type ChurrosRegistrationsCounts @source(name: "RegistrationsCounts", subgraph: "Churros") @join__type(graph: CHURROS) {
  cancelled: Float!
  paid: Float!
  total: Float!
  unpaid(method: ChurrosPaymentMethod @source(name: "method", type: "PaymentMethod", subgraph: "Churros")): Float!
  unpaidLydia: Float! @deprecated(reason: "Use unpaid(method: Lydia)")
  verified: Float!
}

"""A change in the changelog"""
type ChurrosReleaseChange @source(name: "ReleaseChange", subgraph: "Churros") @join__type(graph: CHURROS) {
  """The authors of the change"""
  authors: [String!]!
  html: String!
  """Issues linked to the change"""
  issues: [Int!]!
  """Merge requests linked to the change"""
  mergeRequests: [Int!]!
  """People who created the issues (gave the idea, reported the bug, etc.)"""
  reporters: [String!]!
  """The text of the change"""
  text: String!
}

"""Changes in the changelog, grouped by category"""
type ChurrosReleaseChangesMaps @source(name: "ReleaseChangesMaps", subgraph: "Churros") @join__type(graph: CHURROS) {
  """New features"""
  added: [ChurrosReleaseChange!]! @source(name: "added", type: "[ReleaseChange!]!", subgraph: "Churros")
  """What was fixed"""
  fixed: [ChurrosReleaseChange!]! @source(name: "fixed", type: "[ReleaseChange!]!", subgraph: "Churros")
  """What was improved"""
  improved: [ChurrosReleaseChange!]! @source(name: "improved", type: "[ReleaseChange!]!", subgraph: "Churros")
  """Miscalleanous changes"""
  other: [ChurrosReleaseChange!]! @source(name: "other", type: "[ReleaseChange!]!", subgraph: "Churros")
  """Security changes"""
  security: [ChurrosReleaseChange!]! @source(name: "security", type: "[ReleaseChange!]!", subgraph: "Churros")
  """Technical changes"""
  technical: [ChurrosReleaseChange!]! @source(name: "technical", type: "[ReleaseChange!]!", subgraph: "Churros")
}

type ChurrosSchool implements ChurrosPictured @source(name: "School", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosPictured") {
  address: String!
  aliasMailDomains: [String!]!
  """L'utilisateur.ice connecté.e peut modifier les infos de l'école"""
  canEdit: Boolean!
  color: String!
  description: String!
  """
  Si la ressource supported d'avoir une image en thème sombre différente de celle en thème clair
  """
  hasSeparateDarkPicture: Boolean!
  id: ID!
  majors: [ChurrosMajor!]! @source(name: "majors", type: "[Major!]!", subgraph: "Churros")
  name: String!
  """Texte alternatif de l'image"""
  pictureAltText: String!
  pictureFile: String!
  """Le nom du fichier de l'image, en thème sombre"""
  pictureFileDark: String!
  """L'URL publique de l'image"""
  pictureURL(
    """Utiliser l'image en thème sombre"""
    dark: Boolean! = false
    """
    Ajouter un timestamp à la fin de l'URL pour forcer le navigateur à recharger l'image. Le timestamp correspond à la date de dernière mise à jour de la ressource (si disponible), ou à l'heure actuelle.
    """
    timestamp: Boolean! = true
  ): String!
  services: [ChurrosService!]! @source(name: "services", type: "[Service!]!", subgraph: "Churros")
  slug: String!
  studentAssociations: [ChurrosStudentAssociation!]! @source(name: "studentAssociations", type: "[StudentAssociation!]!", subgraph: "Churros")
  studentMailDomain: String!
  """Nombre d'étudiant.e.s membres d'une filière appartenant à cette école"""
  studentsCount(
    """Filtrer par promotions relatives (1 = 1A, 2 = 2A...)"""
    yearTiers: [Int!]! = []
  ): Int!
  uid: String!
}

type ChurrosSchoolGroup @source(name: "SchoolGroup", subgraph: "Churros") @join__type(graph: CHURROS) {
  majors: [ChurrosMajor!]! @source(name: "majors", type: "[Major!]!", subgraph: "Churros")
  names: [String!]!
}

"""A service"""
type ChurrosService implements ChurrosNode @source(name: "Service", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosNode") {
  """L’utilisateur·ice peut modifier le service"""
  canEdit: Boolean!
  description: String!
  group: ChurrosGroup @source(name: "group", type: "Group", subgraph: "Churros") @deprecated(reason: "Use `owner` instead")
  """Le service n'est pas affiché sur le site"""
  hidden: Boolean!
  id: ID!
  importance: Int!
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  logo: String!
  logoSourceType: ChurrosLogoSourceType! @source(name: "logoSourceType", type: "LogoSourceType!", subgraph: "Churros")
  name: String!
  owner: ChurrosServiceOwner! @source(name: "owner", type: "ServiceOwner!", subgraph: "Churros")
  """
  Le service a été épinglé par l'utilisateur·ice connecté·e. Pour gérer cela, créer ou enlever un `Bookmark` avec pour `path` l'`id` (avec préfixe) du service.
  """
  pinned: Boolean!
  school: ChurrosSchool @source(name: "school", type: "School", subgraph: "Churros") @deprecated(reason: "Use `owner` instead")
  studentAssociation: ChurrosStudentAssociation @source(name: "studentAssociation", type: "StudentAssociation", subgraph: "Churros") @deprecated(reason: "Use `owner` instead")
  url: String!
}

"""Résultat d'une finalisation d'inscription"""
type ChurrosSignupCompletionResult @source(name: "SignupCompletionResult", subgraph: "Churros") @join__type(graph: CHURROS) {
  """
  L'inscription n'est pas encore terminée, l'équipe administrative de l'AE doit valider la demade d'inscription
  """
  needsManualValidation: Boolean!
  """
  Token utilisable pour connecter la personne immédiatement suite à l'inscription
  """
  token: ChurrosCredential @source(name: "token", type: "Credential", subgraph: "Churros")
}

type ChurrosSomeNotCreatedError @source(name: "SomeNotCreatedError", subgraph: "Churros") @join__type(graph: CHURROS) {
  message: String!
}

"""Associe une clé à une valeur de type nombre entier"""
type ChurrosStringToIntMapping @source(name: "StringToIntMapping", subgraph: "Churros") @join__type(graph: CHURROS) {
  """Clé de la paire"""
  key: String!
  """Valeur de la paire"""
  value: Int!
}

"""There is one student association per school"""
type ChurrosStudentAssociation implements ChurrosPictured @source(name: "StudentAssociation", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosPictured") {
  """L'utilisateur.ice connecté.e peut cotiser à cette AE"""
  canContribute: Boolean!
  """
  Si l'utilsateur·ice courant·e peut créer des groupes rattachés à cette AE
  """
  canCreateGroups(
    """
    Quel type de groupe l'on souhaiterait créer. Si non spécifié, renvoie vrai si l'on peut créer au moins un type de groupe
    """
    type: ChurrosGroupType @source(name: "type", type: "GroupType", subgraph: "Churros")
  ): Boolean!
  """
  Si l'utilisateur·ice courant·e peut créer des services rattachés à cette AE
  """
  canCreateServices: Boolean!
  """L'utilisateur.ice connecét.e peut modifier les infos de cette AE"""
  canEditDetails: Boolean!
  """
  L'utilisateur·ice connecté·e peut éditer (créer ou modifier) les pages de l'AE
  """
  canEditPages: Boolean!
  """L'utilisateur·ice connecté·e peut lister les pages de l'AE"""
  canListPages: Boolean!
  """L'utilisateur.ice connecté.e cotise à cette AE"""
  contributing: Boolean!
  contributionOptions: [ChurrosContributionOption!]! @source(name: "contributionOptions", type: "[ContributionOption!]!", subgraph: "Churros")
  """
  Nombre de cotisant.e.s à l'AE. Légalement (selon les statuts de l'AEn7), membres
  """
  contributorsCount(
    """Filtrer par promotions relatives (1 = 1A, 2 = 2A...)"""
    yearTiers: [Int!]!
  ): Int!
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  description: String!
  descriptionHtml: ChurrosHTML! @source(name: "descriptionHtml", type: "HTML!", subgraph: "Churros")
  """Email de contact de l'AE"""
  email: ChurrosEmail @source(name: "email", type: "Email", subgraph: "Churros")
  groups(after: String, before: String, first: Int, last: Int, types: [ChurrosGroupType!] @source(name: "types", type: "[GroupType!]", subgraph: "Churros")): ChurrosStudentAssociationGroupsConnection! @source(name: "groups", type: "StudentAssociationGroupsConnection!", subgraph: "Churros")
  """Nombre de groupes reliés à cette AE"""
  groupsCount: Int!
  """
  Si l'utilisateur·ice connecté·e a une cotisation en attente de paiement
  """
  hasPendingContribution: Boolean!
  """
  Si la ressource supported d'avoir une image en thème sombre différente de celle en thème clair
  """
  hasSeparateDarkPicture: Boolean!
  id: ID!
  links: [ChurrosLink!]! @source(name: "links", type: "[Link!]!", subgraph: "Churros")
  name: String!
  """
  Nombre de membres des différents bureaux de l'AE (selon les statuts de l'AEn7, membres organisateurs)
  """
  organizerMembersCount(
    """Filtrer par promotions relatives (1 = 1A, 2 = 2A...)"""
    yearTiers: [Int!]!
  ): Int!
  """La page associée à l'AE"""
  page(
    """
    Le chemin de la page. Ce n'est pas le chemin complet, mais celui qui est local à l'AE. Voir `Page` pour plus d'informations.
    """
    path: String!
  ): ChurrosPage @source(name: "page", type: "Page", subgraph: "Churros")
  """Les pages associées à l'AE"""
  pages(after: String, before: String, first: Int, last: Int): ChurrosPagesConnection! @source(name: "pages", type: "PagesConnection!", subgraph: "Churros")
  """Texte alternatif de l'image"""
  pictureAltText: String!
  pictureFile: String!
  """Le nom du fichier de l'image, en thème sombre"""
  pictureFileDark: String!
  """L'URL publique de l'image"""
  pictureURL(
    """Utiliser l'image en thème sombre"""
    dark: Boolean! = false
    """
    Ajouter un timestamp à la fin de l'URL pour forcer le navigateur à recharger l'image. Le timestamp correspond à la date de dernière mise à jour de la ressource (si disponible), ou à l'heure actuelle.
    """
    timestamp: Boolean! = true
  ): String!
  school: ChurrosSchool! @source(name: "school", type: "School!", subgraph: "Churros")
  schoolId: ID!
  """Services proposés par une AE"""
  services(after: String, before: String, first: Int, last: Int): ChurrosStudentAssociationServicesConnection! @source(name: "services", type: "StudentAssociationServicesConnection!", subgraph: "Churros")
  """
  Nombre d'étudiant.e.s rattachés à l'AE (cotisant.e.s ou non). Légalement (selon en particulier les statuts de l'AEn7), compte à la fois les membres et les étudiant.e.s susceptibles d'être membres temporaires durant un évènement organisé par l'AE
  """
  studentsCount(
    """Filtrer par promotions relatives (1 = 1A, 2 = 2A...)"""
    yearTiers: [Int!]! = []
  ): Int!
  uid: String!
  updatedAt: ChurrosDateTime! @source(name: "updatedAt", type: "DateTime!", subgraph: "Churros")
}

type ChurrosStudentAssociationGroupsConnection @source(name: "StudentAssociationGroupsConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosStudentAssociationGroupsConnectionEdge!]! @source(name: "edges", type: "[StudentAssociationGroupsConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosGroup!]! @source(name: "nodes", type: "[Group!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosStudentAssociationGroupsConnectionEdge @source(name: "StudentAssociationGroupsConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosGroup! @source(name: "node", type: "Group!", subgraph: "Churros")
}

type ChurrosStudentAssociationServicesConnection @source(name: "StudentAssociationServicesConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosStudentAssociationServicesConnectionEdge!]! @source(name: "edges", type: "[StudentAssociationServicesConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosService!]! @source(name: "nodes", type: "[Service!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosStudentAssociationServicesConnectionEdge @source(name: "StudentAssociationServicesConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosService! @source(name: "node", type: "Service!", subgraph: "Churros")
}

type ChurrosSubject @source(name: "Subject", subgraph: "Churros") @join__type(graph: CHURROS) {
  apogeeCode: String
  documents(after: String, before: String, first: Int, last: Int): ChurrosSubjectDocumentsConnection! @source(name: "documents", type: "SubjectDocumentsConnection!", subgraph: "Churros")
  documentsCount: Int!
  emoji: String!
  forApprentices: Boolean!
  id: ID!
  links: [ChurrosLink!]! @source(name: "links", type: "[Link!]!", subgraph: "Churros")
  majors: [ChurrosMajor!]! @source(name: "majors", type: "[Major!]!", subgraph: "Churros")
  minors: [ChurrosMinor!]! @source(name: "minors", type: "[Minor!]!", subgraph: "Churros")
  name: String!
  nextExamAt: ChurrosDateTime @source(name: "nextExamAt", type: "DateTime", subgraph: "Churros")
  semester: Int
  shortName: String!
  """Un nom lisible sans espaces, adaptés pour des URLs."""
  slug: String!
  uid: String! @deprecated(reason: "Use `slug` instead. This field was never universally unique.")
  unit: ChurrosTeachingUnit @source(name: "unit", type: "TeachingUnit", subgraph: "Churros")
  unitId: ID
  yearTier: Int
}

type ChurrosSubjectDocumentsConnection @source(name: "SubjectDocumentsConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosSubjectDocumentsConnectionEdge!]! @source(name: "edges", type: "[SubjectDocumentsConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosDocument!]! @source(name: "nodes", type: "[Document!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosSubjectDocumentsConnectionEdge @source(name: "SubjectDocumentsConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosDocument! @source(name: "node", type: "Document!", subgraph: "Churros")
}

"""
Permet de faire des requêtes de données temps-réel, via des _websockets_.
L'endpoint pour le temps réel est `wss://churros.inpt.fr/graphql`. 

Pour un client JavaScript, il y a par exemple [GraphQL-WebSocket](https://the-guild.dev/graphql/ws/get-started#use-the-client)
"""
type Subscription @source(name: "Subscription", subgraph: "Churros") @join__type(graph: CHURROS) {
  announcementsNow: [ChurrosAnnouncement!]! @source(name: "announcementsNow", type: "[Announcement!]!", subgraph: "Churros")
  article(id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")): ChurrosArticle! @source(name: "article", type: "Article!", subgraph: "Churros")
  """Récupère une réservation par son code"""
  booking(code: String!): ChurrosRegistration! @source(name: "booking", type: "Registration!", subgraph: "Churros")
  event(id: ChurrosLocalID! @source(name: "id", type: "LocalID!", subgraph: "Churros")): ChurrosEvent! @source(name: "event", type: "Event!", subgraph: "Churros")
  """
  Récupère un formulaire. On peut utiliser une subscription pour avoir la mise à jour en temps réel des réponses au formulaire.
  """
  form(
    """Identifiant local (sans le préfixe `form:`) du formulaire"""
    localId: String!
  ): ChurrosForm @source(name: "form", type: "Form", subgraph: "Churros")
  """Gets the homepage articles, customized if the user is logged in."""
  homepage(after: String, before: String, first: Int, last: Int): ChurrosQueryHomepageConnection! @source(name: "homepage", type: "QueryHomepageConnection!", subgraph: "Churros")
  kioskReload: Boolean!
  registration(id: ID!): ChurrosSubscriptionRegistrationResult! @source(name: "registration", type: "SubscriptionRegistrationResult!", subgraph: "Churros")
}

type ChurrosSubscriptionRegistrationSuccess @source(name: "SubscriptionRegistrationSuccess", subgraph: "Churros") @join__type(graph: CHURROS) {
  data: ChurrosRegistration! @source(name: "data", type: "Registration!", subgraph: "Churros")
}

type ChurrosTeachingUnit @source(name: "TeachingUnit", subgraph: "Churros") @join__type(graph: CHURROS) {
  apogeeCode: String
  id: ID!
  name: String!
  shortName: String!
  subjects: [ChurrosSubject!]! @source(name: "subjects", type: "[Subject!]!", subgraph: "Churros")
}

type ChurrosTheme implements ChurrosNode @source(name: "Theme", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosNode") {
  author: ChurrosGroup @source(name: "author", type: "Group", subgraph: "Churros")
  """
  Si l'utilisateur·ice connecté·e peut changer la visibilité du thème à une certaine valeur
  """
  canChangeVisibility(to: ChurrosVisibility! @source(name: "to", type: "Visibility!", subgraph: "Churros")): Boolean!
  """
  Si l'utilisateur·ice connecté·e peut éditer (modifier ou supprimer) le thème
  """
  canEdit: Boolean!
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  endsAt: ChurrosDateTime! @source(name: "endsAt", type: "DateTime!", subgraph: "Churros")
  id: ID!
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  name: String!
  startsAt: ChurrosDateTime! @source(name: "startsAt", type: "DateTime!", subgraph: "Churros")
  updatedAt: ChurrosDateTime! @source(name: "updatedAt", type: "DateTime!", subgraph: "Churros")
  values(
    """Ne récupérer que les valeurs d'une variante du thème"""
    variant: ChurrosThemeVariant @source(name: "variant", type: "ThemeVariant", subgraph: "Churros")
  ): [ChurrosThemeValue!]! @source(name: "values", type: "[ThemeValue!]!", subgraph: "Churros")
  visibility: ChurrosVisibility! @source(name: "visibility", type: "Visibility!", subgraph: "Churros")
}

"""Définit la valeur d'une variable du thème"""
type ChurrosThemeValue implements ChurrosNode @source(name: "ThemeValue", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosNode") {
  id: ID!
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  theme: ChurrosTheme! @source(name: "theme", type: "Theme!", subgraph: "Churros")
  value: String!
  variable: ChurrosThemeVariable! @source(name: "variable", type: "ThemeVariable!", subgraph: "Churros")
  variant: ChurrosThemeVariant! @source(name: "variant", type: "ThemeVariant!", subgraph: "Churros")
}

"""
A ticket is a way to register for an event. May include a price and conditions.
"""
type ChurrosTicket implements ChurrosNode @source(name: "Ticket", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosNode") {
  allowedPaymentMethods: [ChurrosPaymentMethod!]! @source(name: "allowedPaymentMethods", type: "[PaymentMethod!]!", subgraph: "Churros")
  autojoinGroups: [ChurrosGroup!]! @source(name: "autojoinGroups", type: "[Group!]!", subgraph: "Churros")
  basePrice: Float! @deprecated(reason: "Use minimumPrice instead")
  """
  Indique si le billet peut être supprimé avec `deleteTicket(force: false)`
  """
  canBeSafelyDeleted: Boolean!
  """
  Un message d'explication sur pourquoi la personne connectée peut réserver ce billet pour quelqu'un d'autre. Null si la personne peut.
  """
  cannotBookReason(
    """On souhaite réserver pour soi-même"""
    themself: Boolean!
  ): String
  """
  Nombre de places totales du billet. Null si l'information n'est pas disponible.
  """
  capacity: ChurrosCapacity @source(name: "capacity", type: "Capacity", subgraph: "Churros")
  closesAt: ChurrosDateTime @source(name: "closesAt", type: "DateTime", subgraph: "Churros")
  countingPolicy: ChurrosTicketCountingPolicy! @source(name: "countingPolicy", type: "TicketCountingPolicy!", subgraph: "Churros")
  description: String!
  descriptionHtml: String!
  event: ChurrosEvent! @source(name: "event", type: "Event!", subgraph: "Churros")
  eventId: ID!
  """Full name, including the ticket group's name if any"""
  fullName: String!
  godsonLimit: Int!
  group: ChurrosTicketGroup @source(name: "group", type: "TicketGroup", subgraph: "Churros")
  id: ID!
  """Ce billet appartient au groupe de billet donné"""
  isInGroup(
    """Null pour tester si le billet est dans aucun groupe"""
    id: ChurrosLocalID @source(name: "id", type: "LocalID", subgraph: "Churros")
  ): Boolean!
  links: [ChurrosLink!]! @source(name: "links", type: "[Link!]!", subgraph: "Churros")
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  """Prix maximum du billet"""
  maximumPrice: Float!
  """Prix minimum du billet"""
  minimumPrice(
    """
    Calculer le minimum en prenant en compte les promotions applicables pour l'utilisateur.ice. ATTENTION: Certaines promotions sont confidentielles, et donc le prix minimum avec promotions appliquées ne devrait donc pas être affiché sur des pages susceptibles d'être montrées à d'autres (comme une page de QR code servant à se faire scanner son billet, par exemple)
    """
    applyPromotions: Boolean! = true
  ): Float!
  name: String!
  onlyManagersCanProvide: Boolean!
  """Si le shotgun du billet est ouvert"""
  open: Boolean!
  openToAlumni: Boolean
  openToApprentices: Boolean
  openToContributors: Boolean
  openToExternal: Boolean
  openToGroups: [ChurrosGroup!]! @source(name: "openToGroups", type: "[Group!]!", subgraph: "Churros")
  openToMajors(
    """
    Ne renvoyer que les filières qui ne consistuent pas ensemble la totalité des filières d'une école. Pratique pour l'affichage sur un billet, en combinant avec openToSchools
    """
    smart: Boolean! = false
  ): [ChurrosMajor!]! @source(name: "openToMajors", type: "[Major!]!", subgraph: "Churros")
  openToPromotions: [Int!]!
  """Écoles telles que toutes leur filières sont autorisées sur ce billet"""
  openToSchools: [ChurrosSchool!]! @source(name: "openToSchools", type: "[School!]!", subgraph: "Churros")
  opensAt: ChurrosDateTime @source(name: "opensAt", type: "DateTime", subgraph: "Churros")
  """
  Nombre de places restantes. Null si l'information n'est pas disponible. N'est jamais null quand il n'y a plus de places disponibles (0)
  """
  placesLeft: ChurrosCapacity @source(name: "placesLeft", type: "Capacity", subgraph: "Churros")
  price: Float! @deprecated(reason: "Use minimumPrice(applyPromotions: true) instead")
  """
  Le billet permet de payer un prix choisi par l'utilisateur.ice, entre minimumPrice et maximumPrice
  """
  priceIsVariable: Boolean!
  registrations: [ChurrosRegistration!]! @source(name: "registrations", type: "[Registration!]!", subgraph: "Churros")
  """Nombre de parrainages restants. Null pour illimité"""
  remainingGodsons: Int
  """Un nom lisible sans espaces, adaptés pour des URLs."""
  slug: String!
  ticketGroupId: ID
  uid: String! @deprecated(reason: "Use `slug` instead. This field was never universally unique.")
}

"""
A ticket group allows for conditions on multiple tickets, such as an upper limit on the sum of registrations in the sub-tickets
"""
type ChurrosTicketGroup implements ChurrosNode @source(name: "TicketGroup", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosNode") {
  capacity: Int!
  event: ChurrosEvent! @source(name: "event", type: "Event!", subgraph: "Churros")
  eventId: ID!
  id: ID!
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  name: String!
  tickets: [ChurrosTicket!]! @source(name: "tickets", type: "[Ticket!]!", subgraph: "Churros")
  ticketsCount: Int!
}

"""Users are the people who use the app"""
type ChurrosUser implements ChurrosNode & ChurrosPictured @source(name: "User", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosNode") @join__implements(graph: CHURROS, interface: "ChurrosPictured") {
  address: String
  admin: Boolean!
  """
  Les associations étudiantes dont cet utilisateur·ice est administrateur·ice
  """
  adminOf: [ChurrosStudentAssociation!]! @source(name: "adminOf", type: "[StudentAssociation!]!", subgraph: "Churros")
  """
  Vrai si cette personne est administratrice de l'association étudiante donnée
  """
  adminOfStudentAssociation(
    """UID de l'association étudiante"""
    studentAssociation: String!
  ): Boolean!
  """Formulaires complètement répondus par l'utilisateur"""
  answeredForms(after: String, before: String, first: Int, last: Int): ChurrosUserAnsweredFormsConnection! @source(name: "answeredForms", type: "UserAnsweredFormsConnection!", subgraph: "Churros")
  apprentice: Boolean!
  articles(after: String, before: String, first: Int, last: Int): ChurrosUserArticlesConnection! @source(name: "articles", type: "UserArticlesConnection!", subgraph: "Churros")
  birthday: ChurrosDateTime @source(name: "birthday", type: "DateTime", subgraph: "Churros")
  """Les affiliations de l'utilisateur à des groupes dont iel est au bureau"""
  boardMemberships: [ChurrosGroupMember!]! @source(name: "boardMemberships", type: "[GroupMember!]!", subgraph: "Churros")
  booking(
    """
    Identifiant complet (avec le préfixe) pour un bénéficiaire avec compte Churros, ou texte libre pour un bénéficiaire externe
    """
    beneficiary: String
    event: ID!
  ): ChurrosRegistration! @source(name: "booking", type: "Registration!", subgraph: "Churros")
  bookings(after: String, before: String, first: Int, forUserOnly: Boolean, last: Int): ChurrosUserBookingsConnection! @source(name: "bookings", type: "UserBookingsConnection!", subgraph: "Churros")
  """Les accès rapides de l'utilisateur·rice"""
  bookmarks: [ChurrosBookmark!]! @source(name: "bookmarks", type: "[Bookmark!]!", subgraph: "Churros")
  """
  Vrai si cet utilisateur est un bot (i.e. ne représente pas une personne physique)
  """
  bot: Boolean!
  canAccessDocuments: Boolean!
  """Groupes auxquels l'utilisateur·ice peut ajouter des membres"""
  canAddMembersTo: [ChurrosGroup!]! @source(name: "canAddMembersTo", type: "[Group!]!", subgraph: "Churros")
  canBeEdited: Boolean!
  """Les AEs pour lesquelles la personne peut cotiser"""
  canContributeTo: [ChurrosStudentAssociation!]! @source(name: "canContributeTo", type: "[StudentAssociation!]!", subgraph: "Churros")
  """Groupes sur lesquels l'utilisateur·ice peut créer des évènements"""
  canCreateEventsOn: [ChurrosGroup!]! @source(name: "canCreateEventsOn", type: "[Group!]!", subgraph: "Churros")
  """AEs sur lesquelles l'utilisateur·ice peut créer des groupes"""
  canCreateGroupsOn: [ChurrosStudentAssociation!]! @source(name: "canCreateGroupsOn", type: "[StudentAssociation!]!", subgraph: "Churros")
  """Groupes sur lesquels l'utilisateur·ice peut créer des posts"""
  canCreatePostsOn: [ChurrosGroup!]! @source(name: "canCreatePostsOn", type: "[Group!]!", subgraph: "Churros")
  """Vrai si cette personne peut éditer le groupe donné"""
  canEditGroup(
    """UID du groupe"""
    uid: String!
  ): Boolean!
  """Vrai si cette personne peut éditer les groupes d'au moins une AE"""
  canEditGroups: Boolean!
  """On peut modifier les permissions de cet·te utilisateur·ice"""
  canEditPermissions: Boolean!
  """Peut-on modifier le profil de cet utilisateur·ice ?"""
  canEditProfile(
    """
    Lève une erreur avec ce message si l’utilisateur·ice ne peut pas éditer ce profil
    """
    assert: String
  ): Boolean!
  """
  Si cet·te utilisateur·rice peut créer, modifier ou supprimer des annonces
  """
  canManageAnnouncements: Boolean!
  cededImageRightsToTVn7: Boolean!
  contributesTo: [ChurrosStudentAssociation!] @source(name: "contributesTo", type: "[StudentAssociation!]", subgraph: "Churros")
  contributesWith: [ChurrosContributionOption!]! @source(name: "contributesWith", type: "[ContributionOption!]!", subgraph: "Churros")
  """Options de cotisations que l'utilisateur·ice connecté·e peut utiliser."""
  contributionOptions: [ChurrosContributionOption!]! @source(name: "contributionOptions", type: "[ContributionOption!]!", subgraph: "Churros")
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  credentials: [ChurrosCredential!]! @source(name: "credentials", type: "[Credential!]!", subgraph: "Churros")
  description: String!
  descriptionHtml: ChurrosHTML! @source(name: "descriptionHtml", type: "HTML!", subgraph: "Churros")
  email: ChurrosEmail @source(name: "email", type: "Email", subgraph: "Churros")
  emailChangeRequests(
    """
    Ne renvoyer que les demandes en attente (mail envoyé mais non confirmé)
    """
    pending: Boolean
  ): [ChurrosEmailChange!]! @source(name: "emailChangeRequests", type: "[EmailChange!]!", subgraph: "Churros")
  enabledNotificationChannels: [ChurrosNotificationChannel!]! @source(name: "enabledNotificationChannels", type: "[NotificationChannel!]!", subgraph: "Churros")
  external: Boolean!
  familyTree: ChurrosFamilyTree! @source(name: "familyTree", type: "FamilyTree!", subgraph: "Churros")
  firstName: String!
  fullName: String!
  godchildren: [ChurrosUser!]! @source(name: "godchildren", type: "[User!]!", subgraph: "Churros")
  godparent: ChurrosUser @source(name: "godparent", type: "User", subgraph: "Churros")
  graduationYear: Int!
  groups: [ChurrosGroupMember!]! @source(name: "groups", type: "[GroupMember!]!", subgraph: "Churros")
  """Les groupes dont cet·te utilisateur·ice peut éditer les permissions"""
  groupsEditorOf: [ChurrosStudentAssociation!]! @source(name: "groupsEditorOf", type: "[StudentAssociation!]!", subgraph: "Churros")
  """
  Si la ressource supported d'avoir une image en thème sombre différente de celle en thème clair
  """
  hasSeparateDarkPicture: Boolean!
  id: ID!
  """
  Demandes de parrainage reçues par cet utilisateur·ice (donc pour devenir parrain·e)
  """
  incomingGodparentRequests: [ChurrosGodparentRequest!]! @source(name: "incomingGodparentRequests", type: "[GodparentRequest!]!", subgraph: "Churros")
  """Vrai si cet utilisateur est l’utilisateur connecté"""
  isMe: Boolean
  lastName: String!
  latestVersionSeenInChangelog: String!
  links: [ChurrosLink!]! @source(name: "links", type: "[Link!]!", subgraph: "Churros")
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  lydiaPhone: String
  major: ChurrosMajor @source(name: "major", type: "Major", subgraph: "Churros")
  majorId: ID
  managedEvents: [ChurrosEventManager!]! @source(name: "managedEvents", type: "[EventManager!]!", subgraph: "Churros")
  minor: ChurrosMinor @source(name: "minor", type: "Minor", subgraph: "Churros")
  nickname: String!
  otherEmails: [ChurrosEmail!] @source(name: "otherEmails", type: "[Email!]", subgraph: "Churros")
  """
  Demandes de parrainage faites par cet utilisateur·ice (donc pour devenir fillot·e)
  """
  outgoingGodparentRequests: [ChurrosGodparentRequest!]! @source(name: "outgoingGodparentRequests", type: "[GodparentRequest!]!", subgraph: "Churros")
  """Formulaires partiellement répondus par l'utilisateur"""
  partiallyAnsweredForms(after: String, before: String, first: Int, last: Int): ChurrosUserPartiallyAnsweredFormsConnection! @source(name: "partiallyAnsweredForms", type: "UserPartiallyAnsweredFormsConnection!", subgraph: "Churros")
  pendingContributions: [ChurrosContributionOption!]! @source(name: "pendingContributions", type: "[ContributionOption!]!", subgraph: "Churros")
  phone: String
  """Texte alternatif de l'image"""
  pictureAltText: String!
  pictureFile: String!
  """Le nom du fichier de l'image, en thème sombre"""
  pictureFileDark: String!
  """L'URL publique de l'image"""
  pictureURL(
    """Utiliser l'image en thème sombre"""
    dark: Boolean! = false
    """
    Ajouter un timestamp à la fin de l'URL pour forcer le navigateur à recharger l'image. Le timestamp correspond à la date de dernière mise à jour de la ressource (si disponible), ou à l'heure actuelle.
    """
    timestamp: Boolean! = true
  ): String!
  schoolEmail: ChurrosEmail @source(name: "schoolEmail", type: "Email", subgraph: "Churros")
  schoolUid: String
  """
  Vrai si cette personne est administratrice d'au moins une association étudiante
  """
  studentAssociationAdmin: Boolean!
  uid: String!
  yearTier: Int!
}

type ChurrosUserAnsweredFormsConnection @source(name: "UserAnsweredFormsConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosUserAnsweredFormsConnectionEdge!]! @source(name: "edges", type: "[UserAnsweredFormsConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosForm!]! @source(name: "nodes", type: "[Form!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosUserAnsweredFormsConnectionEdge @source(name: "UserAnsweredFormsConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosForm! @source(name: "node", type: "Form!", subgraph: "Churros")
}

type ChurrosUserArticlesConnection @source(name: "UserArticlesConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosUserArticlesConnectionEdge!]! @source(name: "edges", type: "[UserArticlesConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosArticle!]! @source(name: "nodes", type: "[Article!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosUserArticlesConnectionEdge @source(name: "UserArticlesConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosArticle! @source(name: "node", type: "Article!", subgraph: "Churros")
}

type ChurrosUserBookingsConnection @source(name: "UserBookingsConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosUserBookingsConnectionEdge!]! @source(name: "edges", type: "[UserBookingsConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosRegistration!]! @source(name: "nodes", type: "[Registration!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosUserBookingsConnectionEdge @source(name: "UserBookingsConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosRegistration! @source(name: "node", type: "Registration!", subgraph: "Churros")
}

"""UserCandidates are users in the registration process"""
type ChurrosUserCandidate implements ChurrosNode @source(name: "UserCandidate", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosNode") {
  apprentice: Boolean!
  birthday: ChurrosDateTime @source(name: "birthday", type: "DateTime", subgraph: "Churros")
  cededImageRightsToTVn7: Boolean!
  createdAt: ChurrosDateTime @source(name: "createdAt", type: "DateTime", subgraph: "Churros")
  email: String!
  """Vrai si l'email est une adresse email d'étudiant."""
  emailIsSchoolEmail: Boolean!
  emailValidated: Boolean!
  firstName: String!
  fullName: String!
  graduationYear: Int!
  id: ID!
  lastName: String!
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
  major: ChurrosMajor @source(name: "major", type: "Major", subgraph: "Churros")
  majorId: ID
  """
  Vrai si l'utilisateur aura besoin d'une validation manuelle à la fin de l'inscription. Null si la notion n'a pas encore de sens. Si la filière n'a pas encore été renseignée, retourne vrai seulement si l'inscription devra être validée manuellement si une filière (peut importe laquelle) est choisie. Voir `needsManualValidationForMajor` pour être plus précis
  """
  needsManualValidation: Boolean
  """
  Vrai si l'utilisateur aura besoin d'une validation manuelle à la fin de l'inscription si iel choisi cette filière. Null si la notion n'a pas encore de sens.
  """
  needsManualValidationForMajor(
    """L'UID de la filière"""
    major: String!
  ): Boolean
  suggestedUid: String!
  uid: String!
  """Vrai si l'utilisateur a été créé via un lien d'inscription rapide."""
  usingQuickSignup: Boolean!
}

type ChurrosUserPartiallyAnsweredFormsConnection @source(name: "UserPartiallyAnsweredFormsConnection", subgraph: "Churros") @join__type(graph: CHURROS) {
  edges: [ChurrosUserPartiallyAnsweredFormsConnectionEdge!]! @source(name: "edges", type: "[UserPartiallyAnsweredFormsConnectionEdge!]!", subgraph: "Churros")
  nodes: [ChurrosForm!]! @source(name: "nodes", type: "[Form!]!", subgraph: "Churros")
  pageInfo: ChurrosPageInfo! @source(name: "pageInfo", type: "PageInfo!", subgraph: "Churros")
}

type ChurrosUserPartiallyAnsweredFormsConnectionEdge @source(name: "UserPartiallyAnsweredFormsConnectionEdge", subgraph: "Churros") @join__type(graph: CHURROS) {
  cursor: String!
  node: ChurrosForm! @source(name: "node", type: "Form!", subgraph: "Churros")
}

type ChurrosUserSearchResult @source(name: "UserSearchResult", subgraph: "Churros") @join__type(graph: CHURROS) {
  highlightedDescription: String!
  id: ID!
  rank: Float
  similarity: Float!
  user: ChurrosUser! @source(name: "user", type: "User!", subgraph: "Churros")
}

"""A validation error, as a list of field errors."""
type ChurrosZodError implements ChurrosErrorInterface @source(name: "ZodError", subgraph: "Churros") @join__type(graph: CHURROS) @join__implements(graph: CHURROS, interface: "ChurrosErrorInterface") {
  fieldErrors: [ChurrosZodFieldError!]! @source(name: "fieldErrors", type: "[ZodFieldError!]!", subgraph: "Churros")
  message: String!
}

"""A validation issue for a field."""
type ChurrosZodFieldError @source(name: "ZodFieldError", subgraph: "Churros") @join__type(graph: CHURROS) {
  message: String!
  path: [String!]!
}

interface ChurrosNode @source(name: "Node", subgraph: "Churros") @join__type(graph: CHURROS) {
  id: ID!
  """L'identifiant local de la ressource (sans préfixe)"""
  localID: ChurrosLocalID! @source(name: "localID", type: "LocalID!", subgraph: "Churros")
}

"""
Une réponse à un formulaire. Les réponses peuvent être de plusieurs types différents (en fonction de la question).
"""
interface ChurrosAnswer @source(name: "Answer", subgraph: "Churros") @join__type(graph: CHURROS) {
  answerString: String!
  """Réservation associée à la réponse"""
  booking: ChurrosRegistration @source(name: "booking", type: "Registration", subgraph: "Churros")
  checkboxIsMarked: Boolean
  """Date de création de la réponse"""
  createdAt: ChurrosDateTime! @source(name: "createdAt", type: "DateTime!", subgraph: "Churros")
  """Utilisateur ayant répondu à la question"""
  createdBy: ChurrosUser @source(name: "createdBy", type: "User", subgraph: "Churros")
  """Formulaire auquel appartient la question"""
  form: ChurrosForm! @source(name: "form", type: "Form!", subgraph: "Churros")
  """Préfixe de l'identifiant: `answer:`"""
  id: ID!
  question: ChurrosQuestion! @source(name: "question", type: "Question!", subgraph: "Churros")
  """Section du formulaire auquel appartient la question"""
  section: ChurrosFormSection! @source(name: "section", type: "FormSection!", subgraph: "Churros")
  """Date de dernière mise à jour de la réponse"""
  updatedAt: ChurrosDateTime! @source(name: "updatedAt", type: "DateTime!", subgraph: "Churros")
}

"""Une resource pouvant être commentée par les utilisateur·ice·s"""
interface ChurrosCommentable @source(name: "Commentable", subgraph: "Churros") @join__type(graph: CHURROS) {
  comments(after: String, before: String, first: Int, last: Int): ChurrosCommentsConnection! @source(name: "comments", type: "CommentsConnection!", subgraph: "Churros")
  """L’identifiant de la resource commentée"""
  id: ID!
}

"""Une ressource qui possède une image associée"""
interface ChurrosPictured @source(name: "Pictured", subgraph: "Churros") @join__type(graph: CHURROS) {
  """
  Si la ressource supported d'avoir une image en thème sombre différente de celle en thème clair
  """
  hasSeparateDarkPicture: Boolean!
  """L'identifiant global de la ressource"""
  id: ID!
  """Texte alternatif de l'image"""
  pictureAltText: String!
  """Le nom du fichier de l'image"""
  pictureFile: String!
  """Le nom du fichier de l'image, en thème sombre"""
  pictureFileDark: String!
  """L'URL publique de l'image"""
  pictureURL(
    """Utiliser l'image en thème sombre"""
    dark: Boolean! = false
    """
    Ajouter un timestamp à la fin de l'URL pour forcer le navigateur à recharger l'image. Le timestamp correspond à la date de dernière mise à jour de la ressource (si disponible), ou à l'heure actuelle.
    """
    timestamp: Boolean! = true
  ): String!
}

"""
Une resource pouvant recevoir des réactions (likes, etc) par les utilisateur·ice·s
"""
interface ChurrosReactable @source(name: "Reactable", subgraph: "Churros") @join__type(graph: CHURROS) {
  """L’identifiant de la resource"""
  id: ID!
  """Vrai si l’utilisateur·ice connecté·e a réagi avec cet emoji"""
  reacted(emoji: String!): Boolean!
  """Nombre total de réactions avec cet emoji"""
  reactions(emoji: String!): Int!
}

"""Ressource dont le nombre de partages est compté"""
interface ChurrosShareable @source(name: "Shareable", subgraph: "Churros") @join__type(graph: CHURROS) {
  id: ID!
  """Nombre de partages"""
  shares: Int!
}

"""Basic interface for all error types to implement."""
interface ChurrosErrorInterface @source(name: "ErrorInterface", subgraph: "Churros") @join__type(graph: CHURROS) {
  message: String!
}

"""Une question dans un formulaire"""
interface ChurrosQuestion @source(name: "Question", subgraph: "Churros") @join__type(graph: CHURROS) {
  """
  Indique si la réponse à la question est anonyme. Si oui, les personnes pouvant voir les réponses ne pouront jamais savoir la réponse d'une personne à la question
  """
  anonymous: Boolean!
  answers(
    after: String
    before: String
    """Récupérer uniquement les réponses d'un utilisateur, par son uid."""
    by: String
    first: Int
    last: Int
  ): ChurrosQuestionAnswersConnection! @source(name: "answers", type: "QuestionAnswersConnection!", subgraph: "Churros")
  """
  La réponse par défaut à cette question. Même si le résultat est bien de type Answer, le champ `id` est vide
  """
  defaultAnswer: ChurrosAnswer @source(name: "defaultAnswer", type: "Answer", subgraph: "Churros")
  """Description en Markdown de la question"""
  description: String!
  """Description en HTML de la question"""
  descriptionHtml: String!
  """Préfixe d'identifiant: question:"""
  id: ID!
  """Indique si la question est obligatoire"""
  mandatory: Boolean!
  """La réponse de l'utilisateur·ice connecté·e à cette question"""
  myAnswer: ChurrosAnswer @source(name: "myAnswer", type: "Answer", subgraph: "Churros")
  """Ordre de la question dans la section"""
  order: Int!
  """Section du formulaire dans laquelle est la question"""
  section: ChurrosFormSection! @source(name: "section", type: "FormSection!", subgraph: "Churros")
  """Titre de la question"""
  title: String!
  """Nombre total de réponses à cette question"""
  totalAnswers: Int!
  """Type de la question"""
  type: ChurrosQuestionKind! @source(name: "type", type: "QuestionKind!", subgraph: "Churros")
}

union AdminAppsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "App") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "admin_apps_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "App") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = App | ValidationError | GenericError

union AdminMetricsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "LoginMetrics") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "admin_metrics_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "LoginMetrics") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = LoginMetrics | ValidationError | GenericError

union AdminModelsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "App") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "admin_models_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "App") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = App | ValidationError | GenericError

union AdminSettingsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Settings") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "admin_settings_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Settings") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Settings | ValidationError | GenericError

union AdminSystemRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SystemInfo") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "admin_system_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SystemInfo") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SystemInfo | ValidationError | GenericError

union AdminVersionRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Version") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "admin_version_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Version") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Version | ValidationError | GenericError

union AdminVersionHistoryListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "VersionHistory") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "admin_version_history_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VersionHistory") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VersionHistory | ValidationError | GenericError

union AdminVersionHistoryRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "VersionHistory") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "admin_version_history_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VersionHistory") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VersionHistory | ValidationError | GenericError

union AdminWorkersRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Workers") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "admin_workers_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Workers") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Workers | ValidationError | GenericError

union AuthenticatorsAdminAllListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Device") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_all_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Device") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Device | ValidationError | GenericError

union AuthenticatorsAdminDuoListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedDuoDeviceList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_duo_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedDuoDeviceList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedDuoDeviceList | ValidationError | GenericError

union AuthenticatorsAdminDuoRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "DuoDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_duo_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "DuoDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = DuoDevice | ValidationError | GenericError

union AuthenticatorsAdminEndpointListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedEndpointDeviceList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_endpoint_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedEndpointDeviceList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedEndpointDeviceList | ValidationError | GenericError

union AuthenticatorsAdminEndpointRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "EndpointDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_endpoint_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "EndpointDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = EndpointDevice | ValidationError | GenericError

union AuthenticatorsAdminSmsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedSMSDeviceList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_sms_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedSmsDeviceList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedSmsDeviceList | ValidationError | GenericError

union AuthenticatorsAdminSmsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SMSDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_sms_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SmsDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SmsDevice | ValidationError | GenericError

union AuthenticatorsAdminStaticListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedStaticDeviceList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_static_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedStaticDeviceList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedStaticDeviceList | ValidationError | GenericError

union AuthenticatorsAdminStaticRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "StaticDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_static_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "StaticDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = StaticDevice | ValidationError | GenericError

union AuthenticatorsAdminTotpListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedTOTPDeviceList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_totp_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedTotpDeviceList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedTotpDeviceList | ValidationError | GenericError

union AuthenticatorsAdminTotpRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "TOTPDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_totp_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "TotpDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = TotpDevice | ValidationError | GenericError

union AuthenticatorsAdminWebauthnListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedWebAuthnDeviceList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_webauthn_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedWebAuthnDeviceList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedWebAuthnDeviceList | ValidationError | GenericError

union AuthenticatorsAdminWebauthnRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "WebAuthnDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_webauthn_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "WebAuthnDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = WebAuthnDevice | ValidationError | GenericError

union AuthenticatorsAllListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Device") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_all_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Device") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Device | ValidationError | GenericError

union AuthenticatorsDuoListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedDuoDeviceList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_duo_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedDuoDeviceList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedDuoDeviceList | ValidationError | GenericError

union AuthenticatorsDuoRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "DuoDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_duo_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "DuoDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = DuoDevice | ValidationError | GenericError

union AuthenticatorsDuoUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_duo_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union AuthenticatorsEndpointListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedEndpointDeviceList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_endpoint_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedEndpointDeviceList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedEndpointDeviceList | ValidationError | GenericError

union AuthenticatorsEndpointRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "EndpointDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_endpoint_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "EndpointDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = EndpointDevice | ValidationError | GenericError

union AuthenticatorsEndpointUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_endpoint_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union AuthenticatorsSmsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedSMSDeviceList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_sms_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedSmsDeviceList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedSmsDeviceList | ValidationError | GenericError

union AuthenticatorsSmsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SMSDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_sms_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SmsDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SmsDevice | ValidationError | GenericError

union AuthenticatorsSmsUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_sms_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union AuthenticatorsStaticListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedStaticDeviceList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_static_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedStaticDeviceList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedStaticDeviceList | ValidationError | GenericError

union AuthenticatorsStaticRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "StaticDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_static_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "StaticDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = StaticDevice | ValidationError | GenericError

union AuthenticatorsStaticUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_static_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union AuthenticatorsTotpListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedTOTPDeviceList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_totp_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedTotpDeviceList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedTotpDeviceList | ValidationError | GenericError

union AuthenticatorsTotpRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "TOTPDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_totp_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "TotpDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = TotpDevice | ValidationError | GenericError

union AuthenticatorsTotpUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_totp_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union AuthenticatorsWebauthnListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedWebAuthnDeviceList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_webauthn_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedWebAuthnDeviceList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedWebAuthnDeviceList | ValidationError | GenericError

union AuthenticatorsWebauthnRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "WebAuthnDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_webauthn_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "WebAuthnDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = WebAuthnDevice | ValidationError | GenericError

union AuthenticatorsWebauthnUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_webauthn_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union CoreApplicationsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedApplicationList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_applications_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedApplicationList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedApplicationList | ValidationError | GenericError

union CoreApplicationsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Application") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_applications_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Application") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Application | ValidationError | GenericError

union CoreApplicationsCheckAccessRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PolicyTestResult") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_applications_check_access_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PolicyTestResult") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PolicyTestResult | ValidationError | GenericError

union CoreApplicationsMetricsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Coordinate") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_applications_metrics_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Coordinate") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Coordinate | ValidationError | GenericError

union CoreApplicationsUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_applications_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union CoreAuthenticatedSessionsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedAuthenticatedSessionList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_authenticated_sessions_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedAuthenticatedSessionList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedAuthenticatedSessionList | ValidationError | GenericError

union CoreAuthenticatedSessionsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "AuthenticatedSession") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_authenticated_sessions_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatedSession") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatedSession | ValidationError | GenericError

union CoreAuthenticatedSessionsUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_authenticated_sessions_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union CoreBrandsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedBrandList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_brands_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedBrandList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedBrandList | ValidationError | GenericError

union CoreBrandsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Brand") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_brands_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Brand") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Brand | ValidationError | GenericError

union CoreBrandsUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_brands_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union CoreBrandsCurrentRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "CurrentBrand") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_brands_current_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "CurrentBrand") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = CurrentBrand | ValidationError | GenericError

union CoreGroupsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedGroupList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_groups_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedGroupList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedGroupList | ValidationError | GenericError

union CoreGroupsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Group") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_groups_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Group") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Group | ValidationError | GenericError

union CoreGroupsUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_groups_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union CoreTokensListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedTokenList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_tokens_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedTokenList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedTokenList | ValidationError | GenericError

union CoreTokensRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Token") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_tokens_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Token") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Token | ValidationError | GenericError

union CoreTokensUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_tokens_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union CoreTokensViewKeyRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "TokenView") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_tokens_view_key_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "TokenView") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = TokenView | ValidationError | GenericError

union CoreUserConsentListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedUserConsentList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_user_consent_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedUserConsentList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedUserConsentList | ValidationError | GenericError

union CoreUserConsentRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserConsent") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_user_consent_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserConsent") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserConsent | ValidationError | GenericError

union CoreUserConsentUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_user_consent_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union CoreUsersListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedUserList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_users_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedUserList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedUserList | ValidationError | GenericError

union CoreUsersRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "User") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_users_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "User") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = User | ValidationError | GenericError

union CoreUsersMetricsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserMetrics") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_users_metrics_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserMetrics") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserMetrics | ValidationError | GenericError

union CoreUsersUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_users_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union CoreUsersImpersonateEndRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_users_impersonate_end_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union CoreUsersMeRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SessionUser") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_users_me_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SessionUser") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SessionUser | ValidationError | GenericError

union CoreUsersPathsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserPath") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_users_paths_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserPath") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserPath | ValidationError | GenericError

union CryptoCertificatekeypairsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedCertificateKeyPairList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "crypto_certificatekeypairs_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedCertificateKeyPairList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedCertificateKeyPairList | ValidationError | GenericError

union CryptoCertificatekeypairsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "CertificateKeyPair") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "crypto_certificatekeypairs_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "CertificateKeyPair") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = CertificateKeyPair | ValidationError | GenericError

union CryptoCertificatekeypairsUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "crypto_certificatekeypairs_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union CryptoCertificatekeypairsViewCertificateRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "CertificateData") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "crypto_certificatekeypairs_view_certificate_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "CertificateData") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = CertificateData | ValidationError | GenericError

union CryptoCertificatekeypairsViewPrivateKeyRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "CertificateData") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "crypto_certificatekeypairs_view_private_key_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "CertificateData") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = CertificateData | ValidationError | GenericError

union EnterpriseLicenseListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedLicenseList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "enterprise_license_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedLicenseList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedLicenseList | ValidationError | GenericError

union EnterpriseLicenseRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "License") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "enterprise_license_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "License") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = License | ValidationError | GenericError

union EnterpriseLicenseUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "enterprise_license_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union EnterpriseLicenseForecastRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "LicenseForecast") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "enterprise_license_forecast_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "LicenseForecast") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = LicenseForecast | ValidationError | GenericError

union EnterpriseLicenseInstallIdRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "InstallID") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "enterprise_license_install_id_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "InstallId") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = InstallId | ValidationError | GenericError

union EnterpriseLicenseSummaryRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "LicenseSummary") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "enterprise_license_summary_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "LicenseSummary") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = LicenseSummary | ValidationError | GenericError

union EventsEventsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedEventList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_events_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedEventList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedEventList | ValidationError | GenericError

union EventsEventsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Event") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_events_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Event") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Event | ValidationError | GenericError

union EventsEventsActionsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "TypeCreate") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_events_actions_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "TypeCreate") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = TypeCreate | ValidationError | GenericError

union EventsEventsPerMonthListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Coordinate") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_events_per_month_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Coordinate") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Coordinate | ValidationError | GenericError

union EventsEventsTopPerUserListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "EventTopPerUser") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_events_top_per_user_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "EventTopPerUser") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = EventTopPerUser | ValidationError | GenericError

union EventsEventsVolumeListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Coordinate") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_events_volume_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Coordinate") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Coordinate | ValidationError | GenericError

union EventsNotificationsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedNotificationList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_notifications_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedNotificationList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedNotificationList | ValidationError | GenericError

union EventsNotificationsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Notification") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_notifications_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Notification") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Notification | ValidationError | GenericError

union EventsNotificationsUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_notifications_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union EventsRulesListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedNotificationRuleList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_rules_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedNotificationRuleList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedNotificationRuleList | ValidationError | GenericError

union EventsRulesRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "NotificationRule") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_rules_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "NotificationRule") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = NotificationRule | ValidationError | GenericError

union EventsRulesUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_rules_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union EventsSystemTasksListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedSystemTaskList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_system_tasks_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedSystemTaskList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedSystemTaskList | ValidationError | GenericError

union EventsSystemTasksRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SystemTask") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_system_tasks_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SystemTask") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SystemTask | ValidationError | GenericError

union EventsTransportsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedNotificationTransportList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_transports_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedNotificationTransportList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedNotificationTransportList | ValidationError | GenericError

union EventsTransportsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "NotificationTransport") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_transports_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "NotificationTransport") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = NotificationTransport | ValidationError | GenericError

union EventsTransportsUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_transports_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union FlowsBindingsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedFlowStageBindingList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "flows_bindings_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedFlowStageBindingList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedFlowStageBindingList | ValidationError | GenericError

union FlowsBindingsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "FlowStageBinding") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "flows_bindings_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "FlowStageBinding") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = FlowStageBinding | ValidationError | GenericError

union FlowsBindingsUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "flows_bindings_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union FlowsExecutorGetResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "flows_executor_get_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AccessDeniedChallenge") @join__unionMember(graph: AUTHENTIK, member: "AppleLoginChallenge") @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorDuoChallenge") @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorSmsChallenge") @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorStaticChallenge") @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorTotpChallenge") @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorValidationChallenge") @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorWebAuthnChallenge") @join__unionMember(graph: AUTHENTIK, member: "AutosubmitChallenge") @join__unionMember(graph: AUTHENTIK, member: "CaptchaChallenge") @join__unionMember(graph: AUTHENTIK, member: "ConsentChallenge") @join__unionMember(graph: AUTHENTIK, member: "EmailChallenge") @join__unionMember(graph: AUTHENTIK, member: "FlowErrorChallenge") @join__unionMember(graph: AUTHENTIK, member: "FrameChallenge") @join__unionMember(graph: AUTHENTIK, member: "IdentificationChallenge") @join__unionMember(graph: AUTHENTIK, member: "OAuthDeviceCodeChallenge") @join__unionMember(graph: AUTHENTIK, member: "OAuthDeviceCodeFinishChallenge") @join__unionMember(graph: AUTHENTIK, member: "PasswordChallenge") @join__unionMember(graph: AUTHENTIK, member: "PlexAuthenticationChallenge") @join__unionMember(graph: AUTHENTIK, member: "PromptChallenge") @join__unionMember(graph: AUTHENTIK, member: "RedirectChallenge") @join__unionMember(graph: AUTHENTIK, member: "SessionEndChallenge") @join__unionMember(graph: AUTHENTIK, member: "ShellChallenge") @join__unionMember(graph: AUTHENTIK, member: "UserLoginChallenge") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AccessDeniedChallenge | AppleLoginChallenge | AuthenticatorDuoChallenge | AuthenticatorSmsChallenge | AuthenticatorStaticChallenge | AuthenticatorTotpChallenge | AuthenticatorValidationChallenge | AuthenticatorWebAuthnChallenge | AutosubmitChallenge | CaptchaChallenge | ConsentChallenge | EmailChallenge | FlowErrorChallenge | FrameChallenge | IdentificationChallenge | OAuthDeviceCodeChallenge | OAuthDeviceCodeFinishChallenge | PasswordChallenge | PlexAuthenticationChallenge | PromptChallenge | RedirectChallenge | SessionEndChallenge | ShellChallenge | UserLoginChallenge | ValidationError | GenericError

union LoginChallengeTypes @discriminator(subgraph: "Authentik", field: "component", mapping: [["xak-flow-redirect", "RedirectChallenge"], ["ak-source-oauth-apple", "AppleLoginChallenge"], ["ak-source-plex", "PlexAuthenticationChallenge"]]) @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "RedirectChallenge") @join__unionMember(graph: AUTHENTIK, member: "AppleLoginChallenge") @join__unionMember(graph: AUTHENTIK, member: "PlexAuthenticationChallenge") = RedirectChallenge | AppleLoginChallenge | PlexAuthenticationChallenge

union FlowsInspectorGetResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "FlowInspection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "flows_inspector_get_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "FlowInspection") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = FlowInspection | GenericError

union FlowsInstancesListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedFlowList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "flows_instances_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedFlowList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedFlowList | ValidationError | GenericError

union FlowsInstancesRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Flow") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "flows_instances_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Flow") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Flow | ValidationError | GenericError

union FlowsInstancesDiagramRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "FlowDiagram") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "flows_instances_diagram_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "FlowDiagram") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = FlowDiagram | ValidationError | GenericError

union FlowsInstancesExecuteRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Link") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "flows_instances_execute_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Link") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Link | GenericError

union FlowsInstancesExportRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "File_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "flows_instances_export_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "FileContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = FileContainer | ValidationError | GenericError

union FlowsInstancesUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "flows_instances_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union FlowsInstancesCacheInfoRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Cache") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "flows_instances_cache_info_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Cache") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Cache | ValidationError | GenericError

union ManagedBlueprintsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedBlueprintInstanceList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "managed_blueprints_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedBlueprintInstanceList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedBlueprintInstanceList | ValidationError | GenericError

union ManagedBlueprintsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "BlueprintInstance") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "managed_blueprints_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "BlueprintInstance") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = BlueprintInstance | ValidationError | GenericError

union ManagedBlueprintsUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "managed_blueprints_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union ManagedBlueprintsAvailableListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "BlueprintFile") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "managed_blueprints_available_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "BlueprintFile") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = BlueprintFile | ValidationError | GenericError

union Oauth2AccessTokensListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedTokenModelList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "oauth2_access_tokens_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedTokenModelList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedTokenModelList | ValidationError | GenericError

union Oauth2AccessTokensRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "TokenModel") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "oauth2_access_tokens_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "TokenModel") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = TokenModel | ValidationError | GenericError

union Oauth2AccessTokensUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "oauth2_access_tokens_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union Oauth2AuthorizationCodesListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedExpiringBaseGrantModelList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "oauth2_authorization_codes_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedExpiringBaseGrantModelList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedExpiringBaseGrantModelList | ValidationError | GenericError

union Oauth2AuthorizationCodesRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ExpiringBaseGrantModel") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "oauth2_authorization_codes_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ExpiringBaseGrantModel") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ExpiringBaseGrantModel | ValidationError | GenericError

union Oauth2AuthorizationCodesUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "oauth2_authorization_codes_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union Oauth2RefreshTokensListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedTokenModelList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "oauth2_refresh_tokens_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedTokenModelList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedTokenModelList | ValidationError | GenericError

union Oauth2RefreshTokensRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "TokenModel") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "oauth2_refresh_tokens_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "TokenModel") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = TokenModel | ValidationError | GenericError

union Oauth2RefreshTokensUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "oauth2_refresh_tokens_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union OutpostsInstancesListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedOutpostList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_instances_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedOutpostList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedOutpostList | ValidationError | GenericError

union OutpostsInstancesRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Outpost") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_instances_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Outpost") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Outpost | ValidationError | GenericError

union OutpostsInstancesHealthListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "OutpostHealth") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_instances_health_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "OutpostHealth") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = OutpostHealth | ValidationError | GenericError

union OutpostsInstancesUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_instances_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union OutpostsInstancesDefaultSettingsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "OutpostDefaultConfig") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_instances_default_settings_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "OutpostDefaultConfig") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = OutpostDefaultConfig | ValidationError | GenericError

union OutpostsLdapListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedLDAPOutpostConfigList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_ldap_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedLdapOutpostConfigList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedLdapOutpostConfigList | ValidationError | GenericError

union OutpostsLdapAccessCheckResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "LDAPCheckAccess") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_ldap_access_check_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "LdapCheckAccess") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = LdapCheckAccess | ValidationError | GenericError

union OutpostsProxyListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedProxyOutpostConfigList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_proxy_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedProxyOutpostConfigList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedProxyOutpostConfigList | ValidationError | GenericError

union OutpostsRadiusListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedRadiusOutpostConfigList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_radius_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedRadiusOutpostConfigList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedRadiusOutpostConfigList | ValidationError | GenericError

union OutpostsRadiusAccessCheckResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "RadiusCheckAccess") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_radius_access_check_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "RadiusCheckAccess") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = RadiusCheckAccess | ValidationError | GenericError

union OutpostsServiceConnectionsAllListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedServiceConnectionList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_service_connections_all_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedServiceConnectionList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedServiceConnectionList | ValidationError | GenericError

union OutpostsServiceConnectionsAllRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ServiceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_service_connections_all_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ServiceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ServiceConnection | ValidationError | GenericError

union OutpostsServiceConnectionsAllStateRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ServiceConnectionState") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_service_connections_all_state_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ServiceConnectionState") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ServiceConnectionState | ValidationError | GenericError

union OutpostsServiceConnectionsAllUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_service_connections_all_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union OutpostsServiceConnectionsAllTypesListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "TypeCreate") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_service_connections_all_types_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "TypeCreate") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = TypeCreate | ValidationError | GenericError

union OutpostsServiceConnectionsDockerListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedDockerServiceConnectionList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_service_connections_docker_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedDockerServiceConnectionList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedDockerServiceConnectionList | ValidationError | GenericError

union OutpostsServiceConnectionsDockerRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "DockerServiceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_service_connections_docker_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "DockerServiceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = DockerServiceConnection | ValidationError | GenericError

union OutpostsServiceConnectionsDockerUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_service_connections_docker_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union OutpostsServiceConnectionsKubernetesListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedKubernetesServiceConnectionList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_service_connections_kubernetes_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedKubernetesServiceConnectionList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedKubernetesServiceConnectionList | ValidationError | GenericError

union OutpostsServiceConnectionsKubernetesRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "KubernetesServiceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_service_connections_kubernetes_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "KubernetesServiceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = KubernetesServiceConnection | ValidationError | GenericError

union OutpostsServiceConnectionsKubernetesUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_service_connections_kubernetes_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union PoliciesAllListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedPolicyList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_all_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedPolicyList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedPolicyList | ValidationError | GenericError

union PoliciesAllRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Policy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_all_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Policy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Policy | ValidationError | GenericError

union PoliciesAllUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_all_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union PoliciesAllCacheInfoRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Cache") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_all_cache_info_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Cache") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Cache | ValidationError | GenericError

union PoliciesAllTypesListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "TypeCreate") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_all_types_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "TypeCreate") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = TypeCreate | ValidationError | GenericError

union PoliciesBindingsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedPolicyBindingList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_bindings_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedPolicyBindingList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedPolicyBindingList | ValidationError | GenericError

union PoliciesBindingsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PolicyBinding") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_bindings_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PolicyBinding") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PolicyBinding | ValidationError | GenericError

union PoliciesBindingsUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_bindings_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union PoliciesDummyListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedDummyPolicyList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_dummy_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedDummyPolicyList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedDummyPolicyList | ValidationError | GenericError

union PoliciesDummyRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "DummyPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_dummy_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "DummyPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = DummyPolicy | ValidationError | GenericError

union PoliciesDummyUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_dummy_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union PoliciesEventMatcherListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedEventMatcherPolicyList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_event_matcher_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedEventMatcherPolicyList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedEventMatcherPolicyList | ValidationError | GenericError

union PoliciesEventMatcherRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "EventMatcherPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_event_matcher_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "EventMatcherPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = EventMatcherPolicy | ValidationError | GenericError

union PoliciesEventMatcherUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_event_matcher_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union PoliciesExpressionListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedExpressionPolicyList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_expression_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedExpressionPolicyList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedExpressionPolicyList | ValidationError | GenericError

union PoliciesExpressionRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ExpressionPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_expression_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ExpressionPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ExpressionPolicy | ValidationError | GenericError

union PoliciesExpressionUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_expression_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union PoliciesGeoipListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedGeoIPPolicyList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_geoip_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedGeoIpPolicyList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedGeoIpPolicyList | ValidationError | GenericError

union PoliciesGeoipRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "GeoIPPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_geoip_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GeoIpPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GeoIpPolicy | ValidationError | GenericError

union PoliciesGeoipUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_geoip_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union PoliciesGeoipIso3166ListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "DetailedCountry") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_geoip_iso3166_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "DetailedCountry") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = DetailedCountry | ValidationError | GenericError

union PoliciesPasswordListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedPasswordPolicyList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_password_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedPasswordPolicyList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedPasswordPolicyList | ValidationError | GenericError

union PoliciesPasswordRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PasswordPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_password_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PasswordPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PasswordPolicy | ValidationError | GenericError

union PoliciesPasswordUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_password_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union PoliciesPasswordExpiryListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedPasswordExpiryPolicyList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_password_expiry_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedPasswordExpiryPolicyList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedPasswordExpiryPolicyList | ValidationError | GenericError

union PoliciesPasswordExpiryRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PasswordExpiryPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_password_expiry_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PasswordExpiryPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PasswordExpiryPolicy | ValidationError | GenericError

union PoliciesPasswordExpiryUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_password_expiry_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union PoliciesReputationListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedReputationPolicyList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_reputation_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedReputationPolicyList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedReputationPolicyList | ValidationError | GenericError

union PoliciesReputationRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ReputationPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_reputation_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ReputationPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ReputationPolicy | ValidationError | GenericError

union PoliciesReputationUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_reputation_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union PoliciesReputationScoresListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedReputationList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_reputation_scores_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedReputationList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedReputationList | ValidationError | GenericError

union PoliciesReputationScoresRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Reputation") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_reputation_scores_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Reputation") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Reputation | ValidationError | GenericError

union PoliciesReputationScoresUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_reputation_scores_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union PropertymappingsAllListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedPropertyMappingList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_all_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedPropertyMappingList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedPropertyMappingList | ValidationError | GenericError

union PropertymappingsAllRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_all_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PropertyMapping | ValidationError | GenericError

union PropertymappingsAllUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_all_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union PropertymappingsAllTypesListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "TypeCreate") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_all_types_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "TypeCreate") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = TypeCreate | ValidationError | GenericError

union PropertymappingsNotificationListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedNotificationWebhookMappingList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_notification_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedNotificationWebhookMappingList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedNotificationWebhookMappingList | ValidationError | GenericError

union PropertymappingsNotificationRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "NotificationWebhookMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_notification_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "NotificationWebhookMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = NotificationWebhookMapping | ValidationError | GenericError

union PropertymappingsNotificationUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_notification_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union PropertymappingsProviderGoogleWorkspaceListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedGoogleWorkspaceProviderMappingList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_google_workspace_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedGoogleWorkspaceProviderMappingList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedGoogleWorkspaceProviderMappingList | ValidationError | GenericError

union PropertymappingsProviderGoogleWorkspaceRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "GoogleWorkspaceProviderMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_google_workspace_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GoogleWorkspaceProviderMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GoogleWorkspaceProviderMapping | ValidationError | GenericError

union PropertymappingsProviderGoogleWorkspaceUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_google_workspace_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union PropertymappingsProviderMicrosoftEntraListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedMicrosoftEntraProviderMappingList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_microsoft_entra_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedMicrosoftEntraProviderMappingList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedMicrosoftEntraProviderMappingList | ValidationError | GenericError

union PropertymappingsProviderMicrosoftEntraRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "MicrosoftEntraProviderMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_microsoft_entra_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "MicrosoftEntraProviderMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = MicrosoftEntraProviderMapping | ValidationError | GenericError

union PropertymappingsProviderMicrosoftEntraUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_microsoft_entra_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union PropertymappingsProviderRacListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedRACPropertyMappingList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_rac_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedRacPropertyMappingList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedRacPropertyMappingList | ValidationError | GenericError

union PropertymappingsProviderRacRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "RACPropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_rac_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "RacPropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = RacPropertyMapping | ValidationError | GenericError

union PropertymappingsProviderRacUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_rac_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union PropertymappingsProviderRadiusListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedRadiusProviderPropertyMappingList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_radius_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedRadiusProviderPropertyMappingList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedRadiusProviderPropertyMappingList | ValidationError | GenericError

union PropertymappingsProviderRadiusRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "RadiusProviderPropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_radius_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "RadiusProviderPropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = RadiusProviderPropertyMapping | ValidationError | GenericError

union PropertymappingsProviderRadiusUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_radius_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union PropertymappingsProviderSamlListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedSAMLPropertyMappingList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_saml_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedSamlPropertyMappingList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedSamlPropertyMappingList | ValidationError | GenericError

union PropertymappingsProviderSamlRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SAMLPropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_saml_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SamlPropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SamlPropertyMapping | ValidationError | GenericError

union PropertymappingsProviderSamlUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_saml_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union PropertymappingsProviderScimListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedSCIMMappingList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_scim_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedScimMappingList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedScimMappingList | ValidationError | GenericError

union PropertymappingsProviderScimRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SCIMMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_scim_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimMapping | ValidationError | GenericError

union PropertymappingsProviderScimUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_scim_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union PropertymappingsProviderScopeListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedScopeMappingList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_scope_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedScopeMappingList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedScopeMappingList | ValidationError | GenericError

union PropertymappingsProviderScopeRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ScopeMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_scope_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScopeMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScopeMapping | ValidationError | GenericError

union PropertymappingsProviderScopeUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_scope_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union PropertymappingsSourceKerberosListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedKerberosSourcePropertyMappingList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_kerberos_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedKerberosSourcePropertyMappingList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedKerberosSourcePropertyMappingList | ValidationError | GenericError

union PropertymappingsSourceKerberosRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "KerberosSourcePropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_kerberos_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "KerberosSourcePropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = KerberosSourcePropertyMapping | ValidationError | GenericError

union PropertymappingsSourceKerberosUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_kerberos_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union PropertymappingsSourceLdapListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedLDAPSourcePropertyMappingList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_ldap_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedLdapSourcePropertyMappingList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedLdapSourcePropertyMappingList | ValidationError | GenericError

union PropertymappingsSourceLdapRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "LDAPSourcePropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_ldap_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "LdapSourcePropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = LdapSourcePropertyMapping | ValidationError | GenericError

union PropertymappingsSourceLdapUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_ldap_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union PropertymappingsSourceOauthListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedOAuthSourcePropertyMappingList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_oauth_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedOAuthSourcePropertyMappingList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedOAuthSourcePropertyMappingList | ValidationError | GenericError

union PropertymappingsSourceOauthRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "OAuthSourcePropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_oauth_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "OAuthSourcePropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = OAuthSourcePropertyMapping | ValidationError | GenericError

union PropertymappingsSourceOauthUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_oauth_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union PropertymappingsSourcePlexListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedPlexSourcePropertyMappingList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_plex_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedPlexSourcePropertyMappingList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedPlexSourcePropertyMappingList | ValidationError | GenericError

union PropertymappingsSourcePlexRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PlexSourcePropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_plex_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PlexSourcePropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PlexSourcePropertyMapping | ValidationError | GenericError

union PropertymappingsSourcePlexUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_plex_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union PropertymappingsSourceSamlListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedSAMLSourcePropertyMappingList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_saml_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedSamlSourcePropertyMappingList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedSamlSourcePropertyMappingList | ValidationError | GenericError

union PropertymappingsSourceSamlRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SAMLSourcePropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_saml_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SamlSourcePropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SamlSourcePropertyMapping | ValidationError | GenericError

union PropertymappingsSourceSamlUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_saml_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union PropertymappingsSourceScimListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedSCIMSourcePropertyMappingList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_scim_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedScimSourcePropertyMappingList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedScimSourcePropertyMappingList | ValidationError | GenericError

union PropertymappingsSourceScimRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SCIMSourcePropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_scim_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimSourcePropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimSourcePropertyMapping | ValidationError | GenericError

union PropertymappingsSourceScimUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_scim_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union ProvidersAllListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedProviderList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_all_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedProviderList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedProviderList | ValidationError | GenericError

union ProvidersAllRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Provider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_all_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Provider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Provider | ValidationError | GenericError

union ProvidersAllUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_all_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union ProvidersAllTypesListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "TypeCreate") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_all_types_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "TypeCreate") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = TypeCreate | ValidationError | GenericError

union ProvidersGoogleWorkspaceListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedGoogleWorkspaceProviderList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_google_workspace_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedGoogleWorkspaceProviderList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedGoogleWorkspaceProviderList | ValidationError | GenericError

union ProvidersGoogleWorkspaceRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "GoogleWorkspaceProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_google_workspace_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GoogleWorkspaceProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GoogleWorkspaceProvider | ValidationError | GenericError

union ProvidersGoogleWorkspaceSyncStatusRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SyncStatus") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_google_workspace_sync_status_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SyncStatus") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SyncStatus | ValidationError | GenericError

union ProvidersGoogleWorkspaceUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_google_workspace_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union ProvidersGoogleWorkspaceGroupsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedGoogleWorkspaceProviderGroupList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_google_workspace_groups_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedGoogleWorkspaceProviderGroupList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedGoogleWorkspaceProviderGroupList | ValidationError | GenericError

union ProvidersGoogleWorkspaceGroupsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "GoogleWorkspaceProviderGroup") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_google_workspace_groups_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GoogleWorkspaceProviderGroup") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GoogleWorkspaceProviderGroup | ValidationError | GenericError

union ProvidersGoogleWorkspaceGroupsUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_google_workspace_groups_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union ProvidersGoogleWorkspaceUsersListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedGoogleWorkspaceProviderUserList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_google_workspace_users_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedGoogleWorkspaceProviderUserList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedGoogleWorkspaceProviderUserList | ValidationError | GenericError

union ProvidersGoogleWorkspaceUsersRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "GoogleWorkspaceProviderUser") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_google_workspace_users_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GoogleWorkspaceProviderUser") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GoogleWorkspaceProviderUser | ValidationError | GenericError

union ProvidersGoogleWorkspaceUsersUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_google_workspace_users_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union ProvidersLdapListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedLDAPProviderList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_ldap_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedLdapProviderList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedLdapProviderList | ValidationError | GenericError

union ProvidersLdapRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "LDAPProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_ldap_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "LdapProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = LdapProvider | ValidationError | GenericError

union ProvidersLdapUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_ldap_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union ProvidersMicrosoftEntraListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedMicrosoftEntraProviderList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_microsoft_entra_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedMicrosoftEntraProviderList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedMicrosoftEntraProviderList | ValidationError | GenericError

union ProvidersMicrosoftEntraRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "MicrosoftEntraProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_microsoft_entra_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "MicrosoftEntraProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = MicrosoftEntraProvider | ValidationError | GenericError

union ProvidersMicrosoftEntraSyncStatusRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SyncStatus") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_microsoft_entra_sync_status_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SyncStatus") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SyncStatus | ValidationError | GenericError

union ProvidersMicrosoftEntraUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_microsoft_entra_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union ProvidersMicrosoftEntraGroupsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedMicrosoftEntraProviderGroupList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_microsoft_entra_groups_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedMicrosoftEntraProviderGroupList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedMicrosoftEntraProviderGroupList | ValidationError | GenericError

union ProvidersMicrosoftEntraGroupsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "MicrosoftEntraProviderGroup") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_microsoft_entra_groups_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "MicrosoftEntraProviderGroup") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = MicrosoftEntraProviderGroup | ValidationError | GenericError

union ProvidersMicrosoftEntraGroupsUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_microsoft_entra_groups_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union ProvidersMicrosoftEntraUsersListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedMicrosoftEntraProviderUserList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_microsoft_entra_users_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedMicrosoftEntraProviderUserList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedMicrosoftEntraProviderUserList | ValidationError | GenericError

union ProvidersMicrosoftEntraUsersRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "MicrosoftEntraProviderUser") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_microsoft_entra_users_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "MicrosoftEntraProviderUser") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = MicrosoftEntraProviderUser | ValidationError | GenericError

union ProvidersMicrosoftEntraUsersUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_microsoft_entra_users_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union ProvidersOauth2ListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedOAuth2ProviderList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_oauth2_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedOAuth2ProviderList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedOAuth2ProviderList | ValidationError | GenericError

union ProvidersOauth2RetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "OAuth2Provider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_oauth2_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "OAuth2Provider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = OAuth2Provider | ValidationError | GenericError

union ProvidersOauth2PreviewUserRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PropertyMappingPreview") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_oauth2_preview_user_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PropertyMappingPreview") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PropertyMappingPreview | GenericError

union ProvidersOauth2SetupUrlsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "OAuth2ProviderSetupURLs") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_oauth2_setup_urls_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "OAuth2ProviderSetupUrLs") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = OAuth2ProviderSetupUrLs | ValidationError | GenericError

union ProvidersOauth2UsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_oauth2_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union ProvidersProxyListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedProxyProviderList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_proxy_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedProxyProviderList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedProxyProviderList | ValidationError | GenericError

union ProvidersProxyRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ProxyProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_proxy_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ProxyProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ProxyProvider | ValidationError | GenericError

union ProvidersProxyUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_proxy_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union ProvidersRacListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedRACProviderList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_rac_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedRacProviderList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedRacProviderList | ValidationError | GenericError

union ProvidersRacRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "RACProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_rac_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "RacProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = RacProvider | ValidationError | GenericError

union ProvidersRacUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_rac_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union ProvidersRadiusListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedRadiusProviderList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_radius_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedRadiusProviderList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedRadiusProviderList | ValidationError | GenericError

union ProvidersRadiusRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "RadiusProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_radius_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "RadiusProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = RadiusProvider | ValidationError | GenericError

union ProvidersRadiusUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_radius_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union ProvidersSamlListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedSAMLProviderList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_saml_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedSamlProviderList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedSamlProviderList | ValidationError | GenericError

union ProvidersSamlRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SAMLProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_saml_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SamlProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SamlProvider | ValidationError | GenericError

union ProvidersSamlMetadataRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SAMLMetadata") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_saml_metadata_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SamlMetadata") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SamlMetadata | ValidationError | GenericError

union ProvidersSamlPreviewUserRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PropertyMappingPreview") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_saml_preview_user_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PropertyMappingPreview") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PropertyMappingPreview | GenericError

union ProvidersSamlUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_saml_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union ProvidersScimListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedSCIMProviderList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_scim_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedScimProviderList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedScimProviderList | ValidationError | GenericError

union ProvidersScimRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SCIMProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_scim_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimProvider | ValidationError | GenericError

union ProvidersScimSyncStatusRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SyncStatus") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_scim_sync_status_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SyncStatus") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SyncStatus | ValidationError | GenericError

union ProvidersScimUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_scim_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union ProvidersScimGroupsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedSCIMProviderGroupList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_scim_groups_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedScimProviderGroupList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedScimProviderGroupList | ValidationError | GenericError

union ProvidersScimGroupsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SCIMProviderGroup") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_scim_groups_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimProviderGroup") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimProviderGroup | ValidationError | GenericError

union ProvidersScimGroupsUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_scim_groups_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union ProvidersScimUsersListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedSCIMProviderUserList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_scim_users_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedScimProviderUserList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedScimProviderUserList | ValidationError | GenericError

union ProvidersScimUsersRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SCIMProviderUser") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_scim_users_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimProviderUser") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimProviderUser | ValidationError | GenericError

union ProvidersScimUsersUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_scim_users_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union RacConnectionTokensListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedConnectionTokenList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rac_connection_tokens_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedConnectionTokenList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedConnectionTokenList | ValidationError | GenericError

union RacConnectionTokensRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ConnectionToken") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rac_connection_tokens_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ConnectionToken") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ConnectionToken | ValidationError | GenericError

union RacConnectionTokensUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rac_connection_tokens_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union RacEndpointsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedEndpointList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rac_endpoints_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedEndpointList") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedEndpointList | GenericError

union RacEndpointsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Endpoint") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rac_endpoints_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Endpoint") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Endpoint | ValidationError | GenericError

union RacEndpointsUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rac_endpoints_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union RbacPermissionsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedPermissionList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rbac_permissions_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedPermissionList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedPermissionList | ValidationError | GenericError

union RbacPermissionsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Permission") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rbac_permissions_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Permission") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Permission | ValidationError | GenericError

union RbacPermissionsAssignedByRolesListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedRoleAssignedObjectPermissionList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rbac_permissions_assigned_by_roles_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedRoleAssignedObjectPermissionList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedRoleAssignedObjectPermissionList | ValidationError | GenericError

union RbacPermissionsAssignedByUsersListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedUserAssignedObjectPermissionList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rbac_permissions_assigned_by_users_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedUserAssignedObjectPermissionList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedUserAssignedObjectPermissionList | ValidationError | GenericError

union RbacPermissionsRolesListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedExtraRoleObjectPermissionList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rbac_permissions_roles_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedExtraRoleObjectPermissionList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedExtraRoleObjectPermissionList | ValidationError | GenericError

union RbacPermissionsRolesRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ExtraRoleObjectPermission") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rbac_permissions_roles_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ExtraRoleObjectPermission") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ExtraRoleObjectPermission | ValidationError | GenericError

union RbacPermissionsUsersListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedExtraUserObjectPermissionList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rbac_permissions_users_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedExtraUserObjectPermissionList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedExtraUserObjectPermissionList | ValidationError | GenericError

union RbacPermissionsUsersRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ExtraUserObjectPermission") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rbac_permissions_users_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ExtraUserObjectPermission") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ExtraUserObjectPermission | ValidationError | GenericError

union RbacRolesListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedRoleList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rbac_roles_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedRoleList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedRoleList | ValidationError | GenericError

union RbacRolesRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Role") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rbac_roles_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Role") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Role | ValidationError | GenericError

union RbacRolesUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rbac_roles_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union RootConfigRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Config") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "root_config_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Config") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Config | ValidationError | GenericError

union SchemaRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "JSON_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "schema_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "JsonContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = JsonContainer | ValidationError | GenericError

union SourcesAllListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedSourceList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_all_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedSourceList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedSourceList | ValidationError | GenericError

union SourcesAllRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Source") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_all_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Source") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Source | ValidationError | GenericError

union SourcesAllUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_all_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union SourcesAllTypesListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "TypeCreate") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_all_types_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "TypeCreate") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = TypeCreate | ValidationError | GenericError

union SourcesAllUserSettingsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserSetting") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_all_user_settings_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserSetting") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserSetting | ValidationError | GenericError

union SourcesGroupConnectionsKerberosListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedGroupKerberosSourceConnectionList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_kerberos_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedGroupKerberosSourceConnectionList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedGroupKerberosSourceConnectionList | ValidationError | GenericError

union SourcesGroupConnectionsKerberosRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "GroupKerberosSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_kerberos_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GroupKerberosSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GroupKerberosSourceConnection | ValidationError | GenericError

union SourcesGroupConnectionsKerberosUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_kerberos_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union SourcesGroupConnectionsOauthListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedGroupOAuthSourceConnectionList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_oauth_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedGroupOAuthSourceConnectionList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedGroupOAuthSourceConnectionList | ValidationError | GenericError

union SourcesGroupConnectionsOauthRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "GroupOAuthSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_oauth_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GroupOAuthSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GroupOAuthSourceConnection | ValidationError | GenericError

union SourcesGroupConnectionsOauthUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_oauth_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union SourcesGroupConnectionsPlexListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedGroupPlexSourceConnectionList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_plex_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedGroupPlexSourceConnectionList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedGroupPlexSourceConnectionList | ValidationError | GenericError

union SourcesGroupConnectionsPlexRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "GroupPlexSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_plex_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GroupPlexSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GroupPlexSourceConnection | ValidationError | GenericError

union SourcesGroupConnectionsPlexUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_plex_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union SourcesGroupConnectionsSamlListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedGroupSAMLSourceConnectionList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_saml_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedGroupSamlSourceConnectionList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedGroupSamlSourceConnectionList | ValidationError | GenericError

union SourcesGroupConnectionsSamlRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "GroupSAMLSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_saml_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GroupSamlSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GroupSamlSourceConnection | ValidationError | GenericError

union SourcesGroupConnectionsSamlUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_saml_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union SourcesKerberosListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedKerberosSourceList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_kerberos_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedKerberosSourceList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedKerberosSourceList | ValidationError | GenericError

union SourcesKerberosRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "KerberosSource") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_kerberos_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "KerberosSource") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = KerberosSource | ValidationError | GenericError

union SourcesKerberosSyncStatusRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "KerberosSyncStatus") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_kerberos_sync_status_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "KerberosSyncStatus") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = KerberosSyncStatus | ValidationError | GenericError

union SourcesKerberosUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_kerberos_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union SourcesLdapListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedLDAPSourceList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_ldap_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedLdapSourceList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedLdapSourceList | ValidationError | GenericError

union SourcesLdapRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "LDAPSource") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_ldap_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "LdapSource") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = LdapSource | ValidationError | GenericError

union SourcesLdapDebugRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "LDAPDebug") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_ldap_debug_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "LdapDebug") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = LdapDebug | ValidationError | GenericError

union SourcesLdapSyncStatusRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SyncStatus") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_ldap_sync_status_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SyncStatus") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SyncStatus | ValidationError | GenericError

union SourcesLdapUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_ldap_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union SourcesOauthListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedOAuthSourceList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_oauth_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedOAuthSourceList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedOAuthSourceList | ValidationError | GenericError

union SourcesOauthRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "OAuthSource") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_oauth_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "OAuthSource") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = OAuthSource | ValidationError | GenericError

union SourcesOauthUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_oauth_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union SourcesOauthSourceTypesListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SourceType") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_oauth_source_types_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SourceType") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SourceType | ValidationError | GenericError

union SourcesPlexListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedPlexSourceList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_plex_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedPlexSourceList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedPlexSourceList | ValidationError | GenericError

union SourcesPlexRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PlexSource") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_plex_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PlexSource") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PlexSource | ValidationError | GenericError

union SourcesPlexUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_plex_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union SourcesSamlListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedSAMLSourceList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_saml_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedSamlSourceList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedSamlSourceList | ValidationError | GenericError

union SourcesSamlRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SAMLSource") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_saml_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SamlSource") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SamlSource | ValidationError | GenericError

union SourcesSamlMetadataRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SAMLMetadata") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_saml_metadata_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SamlMetadata") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SamlMetadata | ValidationError | GenericError

union SourcesSamlUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_saml_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union SourcesScimListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedSCIMSourceList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_scim_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedScimSourceList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedScimSourceList | ValidationError | GenericError

union SourcesScimRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SCIMSource") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_scim_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimSource") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimSource | ValidationError | GenericError

union SourcesScimUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_scim_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union SourcesScimGroupsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedSCIMSourceGroupList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_scim_groups_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedScimSourceGroupList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedScimSourceGroupList | ValidationError | GenericError

union SourcesScimGroupsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SCIMSourceGroup") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_scim_groups_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimSourceGroup") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimSourceGroup | ValidationError | GenericError

union SourcesScimGroupsUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_scim_groups_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union SourcesScimUsersListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedSCIMSourceUserList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_scim_users_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedScimSourceUserList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedScimSourceUserList | ValidationError | GenericError

union SourcesScimUsersRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SCIMSourceUser") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_scim_users_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimSourceUser") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimSourceUser | ValidationError | GenericError

union SourcesScimUsersUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_scim_users_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union SourcesUserConnectionsAllListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedUserSourceConnectionList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_all_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedUserSourceConnectionList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedUserSourceConnectionList | ValidationError | GenericError

union SourcesUserConnectionsAllRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_all_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserSourceConnection | ValidationError | GenericError

union SourcesUserConnectionsAllUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_all_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union SourcesUserConnectionsKerberosListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedUserKerberosSourceConnectionList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_kerberos_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedUserKerberosSourceConnectionList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedUserKerberosSourceConnectionList | ValidationError | GenericError

union SourcesUserConnectionsKerberosRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserKerberosSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_kerberos_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserKerberosSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserKerberosSourceConnection | ValidationError | GenericError

union SourcesUserConnectionsKerberosUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_kerberos_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union SourcesUserConnectionsOauthListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedUserOAuthSourceConnectionList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_oauth_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedUserOAuthSourceConnectionList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedUserOAuthSourceConnectionList | ValidationError | GenericError

union SourcesUserConnectionsOauthRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserOAuthSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_oauth_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserOAuthSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserOAuthSourceConnection | ValidationError | GenericError

union SourcesUserConnectionsOauthUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_oauth_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union SourcesUserConnectionsPlexListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedUserPlexSourceConnectionList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_plex_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedUserPlexSourceConnectionList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedUserPlexSourceConnectionList | ValidationError | GenericError

union SourcesUserConnectionsPlexRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserPlexSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_plex_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserPlexSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserPlexSourceConnection | ValidationError | GenericError

union SourcesUserConnectionsPlexUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_plex_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union SourcesUserConnectionsSamlListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedUserSAMLSourceConnectionList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_saml_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedUserSamlSourceConnectionList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedUserSamlSourceConnectionList | ValidationError | GenericError

union SourcesUserConnectionsSamlRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserSAMLSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_saml_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserSamlSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserSamlSourceConnection | ValidationError | GenericError

union SourcesUserConnectionsSamlUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_saml_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union StagesAllListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedStageList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_all_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedStageList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedStageList | ValidationError | GenericError

union StagesAllRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Stage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_all_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Stage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Stage | ValidationError | GenericError

union StagesAllUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_all_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union StagesAllTypesListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "TypeCreate") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_all_types_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "TypeCreate") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = TypeCreate | ValidationError | GenericError

union StagesAllUserSettingsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserSetting") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_all_user_settings_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserSetting") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserSetting | ValidationError | GenericError

union StagesAuthenticatorDuoListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedAuthenticatorDuoStageList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_duo_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedAuthenticatorDuoStageList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedAuthenticatorDuoStageList | ValidationError | GenericError

union StagesAuthenticatorDuoRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "AuthenticatorDuoStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_duo_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorDuoStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorDuoStage | ValidationError | GenericError

union StagesAuthenticatorDuoUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_duo_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union StagesAuthenticatorEndpointGdtcListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedAuthenticatorEndpointGDTCStageList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_endpoint_gdtc_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedAuthenticatorEndpointGdtcStageList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedAuthenticatorEndpointGdtcStageList | ValidationError | GenericError

union StagesAuthenticatorEndpointGdtcRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "AuthenticatorEndpointGDTCStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_endpoint_gdtc_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorEndpointGdtcStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorEndpointGdtcStage | ValidationError | GenericError

union StagesAuthenticatorEndpointGdtcUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_endpoint_gdtc_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union StagesAuthenticatorSmsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedAuthenticatorSMSStageList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_sms_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedAuthenticatorSmsStageList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedAuthenticatorSmsStageList | ValidationError | GenericError

union StagesAuthenticatorSmsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "AuthenticatorSMSStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_sms_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorSmsStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorSmsStage | ValidationError | GenericError

union StagesAuthenticatorSmsUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_sms_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union StagesAuthenticatorStaticListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedAuthenticatorStaticStageList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_static_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedAuthenticatorStaticStageList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedAuthenticatorStaticStageList | ValidationError | GenericError

union StagesAuthenticatorStaticRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "AuthenticatorStaticStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_static_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorStaticStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorStaticStage | ValidationError | GenericError

union StagesAuthenticatorStaticUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_static_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union StagesAuthenticatorTotpListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedAuthenticatorTOTPStageList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_totp_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedAuthenticatorTotpStageList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedAuthenticatorTotpStageList | ValidationError | GenericError

union StagesAuthenticatorTotpRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "AuthenticatorTOTPStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_totp_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorTotpStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorTotpStage | ValidationError | GenericError

union StagesAuthenticatorTotpUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_totp_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union StagesAuthenticatorValidateListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedAuthenticatorValidateStageList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_validate_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedAuthenticatorValidateStageList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedAuthenticatorValidateStageList | ValidationError | GenericError

union StagesAuthenticatorValidateRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "AuthenticatorValidateStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_validate_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorValidateStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorValidateStage | ValidationError | GenericError

union StagesAuthenticatorValidateUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_validate_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union StagesAuthenticatorWebauthnListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedAuthenticatorWebAuthnStageList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_webauthn_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedAuthenticatorWebAuthnStageList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedAuthenticatorWebAuthnStageList | ValidationError | GenericError

union StagesAuthenticatorWebauthnRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "AuthenticatorWebAuthnStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_webauthn_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorWebAuthnStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorWebAuthnStage | ValidationError | GenericError

union StagesAuthenticatorWebauthnUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_webauthn_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union StagesAuthenticatorWebauthnDeviceTypesListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedWebAuthnDeviceTypeList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_webauthn_device_types_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedWebAuthnDeviceTypeList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedWebAuthnDeviceTypeList | ValidationError | GenericError

union StagesAuthenticatorWebauthnDeviceTypesRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "WebAuthnDeviceType") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_webauthn_device_types_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "WebAuthnDeviceType") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = WebAuthnDeviceType | ValidationError | GenericError

union StagesCaptchaListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedCaptchaStageList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_captcha_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedCaptchaStageList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedCaptchaStageList | ValidationError | GenericError

union StagesCaptchaRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "CaptchaStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_captcha_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "CaptchaStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = CaptchaStage | ValidationError | GenericError

union StagesCaptchaUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_captcha_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union StagesConsentListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedConsentStageList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_consent_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedConsentStageList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedConsentStageList | ValidationError | GenericError

union StagesConsentRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ConsentStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_consent_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ConsentStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ConsentStage | ValidationError | GenericError

union StagesConsentUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_consent_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union StagesDenyListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedDenyStageList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_deny_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedDenyStageList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedDenyStageList | ValidationError | GenericError

union StagesDenyRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "DenyStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_deny_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "DenyStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = DenyStage | ValidationError | GenericError

union StagesDenyUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_deny_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union StagesDummyListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedDummyStageList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_dummy_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedDummyStageList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedDummyStageList | ValidationError | GenericError

union StagesDummyRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "DummyStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_dummy_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "DummyStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = DummyStage | ValidationError | GenericError

union StagesDummyUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_dummy_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union StagesEmailListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedEmailStageList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_email_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedEmailStageList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedEmailStageList | ValidationError | GenericError

union StagesEmailRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "EmailStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_email_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "EmailStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = EmailStage | ValidationError | GenericError

union StagesEmailUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_email_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union StagesEmailTemplatesListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "TypeCreate") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_email_templates_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "TypeCreate") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = TypeCreate | ValidationError | GenericError

union StagesIdentificationListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedIdentificationStageList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_identification_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedIdentificationStageList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedIdentificationStageList | ValidationError | GenericError

union StagesIdentificationRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "IdentificationStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_identification_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "IdentificationStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = IdentificationStage | ValidationError | GenericError

union StagesIdentificationUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_identification_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union StagesInvitationInvitationsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedInvitationList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_invitation_invitations_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedInvitationList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedInvitationList | ValidationError | GenericError

union StagesInvitationInvitationsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Invitation") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_invitation_invitations_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Invitation") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Invitation | ValidationError | GenericError

union StagesInvitationInvitationsUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_invitation_invitations_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union StagesInvitationStagesListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedInvitationStageList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_invitation_stages_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedInvitationStageList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedInvitationStageList | ValidationError | GenericError

union StagesInvitationStagesRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "InvitationStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_invitation_stages_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "InvitationStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = InvitationStage | ValidationError | GenericError

union StagesInvitationStagesUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_invitation_stages_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union StagesPasswordListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedPasswordStageList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_password_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedPasswordStageList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedPasswordStageList | ValidationError | GenericError

union StagesPasswordRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PasswordStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_password_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PasswordStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PasswordStage | ValidationError | GenericError

union StagesPasswordUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_password_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union StagesPromptPromptsListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedPromptList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_prompt_prompts_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedPromptList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedPromptList | ValidationError | GenericError

union StagesPromptPromptsRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Prompt") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_prompt_prompts_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Prompt") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Prompt | ValidationError | GenericError

union StagesPromptPromptsUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_prompt_prompts_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union StagesPromptStagesListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedPromptStageList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_prompt_stages_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedPromptStageList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedPromptStageList | ValidationError | GenericError

union StagesPromptStagesRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PromptStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_prompt_stages_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PromptStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PromptStage | ValidationError | GenericError

union StagesPromptStagesUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_prompt_stages_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union StagesSourceListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedSourceStageList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_source_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedSourceStageList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedSourceStageList | ValidationError | GenericError

union StagesSourceRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SourceStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_source_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SourceStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SourceStage | ValidationError | GenericError

union StagesSourceUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_source_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union StagesUserDeleteListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedUserDeleteStageList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_delete_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedUserDeleteStageList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedUserDeleteStageList | ValidationError | GenericError

union StagesUserDeleteRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserDeleteStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_delete_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserDeleteStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserDeleteStage | ValidationError | GenericError

union StagesUserDeleteUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_delete_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union StagesUserLoginListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedUserLoginStageList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_login_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedUserLoginStageList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedUserLoginStageList | ValidationError | GenericError

union StagesUserLoginRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserLoginStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_login_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserLoginStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserLoginStage | ValidationError | GenericError

union StagesUserLoginUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_login_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union StagesUserLogoutListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedUserLogoutStageList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_logout_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedUserLogoutStageList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedUserLogoutStageList | ValidationError | GenericError

union StagesUserLogoutRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserLogoutStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_logout_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserLogoutStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserLogoutStage | ValidationError | GenericError

union StagesUserLogoutUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_logout_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union StagesUserWriteListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PaginatedUserWriteStageList") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_write_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PaginatedUserWriteStageList") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PaginatedUserWriteStageList | ValidationError | GenericError

union StagesUserWriteRetrieveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserWriteStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_write_retrieve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserWriteStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserWriteStage | ValidationError | GenericError

union StagesUserWriteUsedByListResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UsedBy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_write_used_by_list_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UsedBy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UsedBy | ValidationError | GenericError

union AdminSettingsUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Settings") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "admin_settings_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Settings") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Settings | ValidationError | GenericError

union AdminSettingsPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Settings") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "admin_settings_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Settings") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Settings | ValidationError | GenericError

union AdminSystemCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SystemInfo") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "admin_system_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SystemInfo") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SystemInfo | ValidationError | GenericError

union AuthenticatorsAdminDuoCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "DuoDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_duo_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "DuoDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = DuoDevice | ValidationError | GenericError

union AuthenticatorsAdminDuoUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "DuoDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_duo_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "DuoDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = DuoDevice | ValidationError | GenericError

union AuthenticatorsAdminDuoPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "DuoDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_duo_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "DuoDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = DuoDevice | ValidationError | GenericError

union AuthenticatorsAdminDuoDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_duo_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union AuthenticatorsAdminEndpointCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "EndpointDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_endpoint_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "EndpointDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = EndpointDevice | ValidationError | GenericError

union AuthenticatorsAdminEndpointUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "EndpointDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_endpoint_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "EndpointDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = EndpointDevice | ValidationError | GenericError

union AuthenticatorsAdminEndpointPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "EndpointDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_endpoint_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "EndpointDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = EndpointDevice | ValidationError | GenericError

union AuthenticatorsAdminEndpointDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_endpoint_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union AuthenticatorsAdminSmsCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "SMSDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_sms_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SmsDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SmsDevice | ValidationError | GenericError

union AuthenticatorsAdminSmsUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SMSDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_sms_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SmsDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SmsDevice | ValidationError | GenericError

union AuthenticatorsAdminSmsPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SMSDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_sms_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SmsDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SmsDevice | ValidationError | GenericError

union AuthenticatorsAdminSmsDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_sms_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union AuthenticatorsAdminStaticCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "StaticDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_static_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "StaticDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = StaticDevice | ValidationError | GenericError

union AuthenticatorsAdminStaticUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "StaticDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_static_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "StaticDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = StaticDevice | ValidationError | GenericError

union AuthenticatorsAdminStaticPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "StaticDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_static_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "StaticDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = StaticDevice | ValidationError | GenericError

union AuthenticatorsAdminStaticDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_static_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union AuthenticatorsAdminTotpCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "TOTPDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_totp_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "TotpDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = TotpDevice | ValidationError | GenericError

union AuthenticatorsAdminTotpUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "TOTPDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_totp_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "TotpDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = TotpDevice | ValidationError | GenericError

union AuthenticatorsAdminTotpPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "TOTPDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_totp_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "TotpDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = TotpDevice | ValidationError | GenericError

union AuthenticatorsAdminTotpDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_totp_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union AuthenticatorsAdminWebauthnCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "WebAuthnDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_webauthn_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "WebAuthnDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = WebAuthnDevice | ValidationError | GenericError

union AuthenticatorsAdminWebauthnUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "WebAuthnDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_webauthn_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "WebAuthnDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = WebAuthnDevice | ValidationError | GenericError

union AuthenticatorsAdminWebauthnPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "WebAuthnDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_webauthn_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "WebAuthnDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = WebAuthnDevice | ValidationError | GenericError

union AuthenticatorsAdminWebauthnDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_admin_webauthn_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union AuthenticatorsDuoUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "DuoDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_duo_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "DuoDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = DuoDevice | ValidationError | GenericError

union AuthenticatorsDuoPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "DuoDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_duo_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "DuoDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = DuoDevice | ValidationError | GenericError

union AuthenticatorsDuoDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_duo_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union AuthenticatorsSmsUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SMSDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_sms_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SmsDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SmsDevice | ValidationError | GenericError

union AuthenticatorsSmsPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SMSDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_sms_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SmsDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SmsDevice | ValidationError | GenericError

union AuthenticatorsSmsDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_sms_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union AuthenticatorsStaticUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "StaticDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_static_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "StaticDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = StaticDevice | ValidationError | GenericError

union AuthenticatorsStaticPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "StaticDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_static_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "StaticDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = StaticDevice | ValidationError | GenericError

union AuthenticatorsStaticDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_static_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union AuthenticatorsTotpUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "TOTPDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_totp_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "TotpDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = TotpDevice | ValidationError | GenericError

union AuthenticatorsTotpPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "TOTPDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_totp_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "TotpDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = TotpDevice | ValidationError | GenericError

union AuthenticatorsTotpDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_totp_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union AuthenticatorsWebauthnUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "WebAuthnDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_webauthn_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "WebAuthnDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = WebAuthnDevice | ValidationError | GenericError

union AuthenticatorsWebauthnPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "WebAuthnDevice") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_webauthn_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "WebAuthnDevice") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = WebAuthnDevice | ValidationError | GenericError

union AuthenticatorsWebauthnDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "authenticators_webauthn_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union CoreApplicationsCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "Application") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_applications_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Application") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Application | ValidationError | GenericError

union CoreApplicationsUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Application") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_applications_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Application") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Application | ValidationError | GenericError

union CoreApplicationsPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Application") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_applications_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Application") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Application | ValidationError | GenericError

union CoreApplicationsDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_applications_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union CoreAuthenticatedSessionsDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_authenticated_sessions_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union CoreBrandsCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "Brand") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_brands_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Brand") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Brand | ValidationError | GenericError

union CoreBrandsUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Brand") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_brands_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Brand") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Brand | ValidationError | GenericError

union CoreBrandsPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Brand") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_brands_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Brand") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Brand | ValidationError | GenericError

union CoreBrandsDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_brands_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union CoreGroupsCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "Group") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_groups_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Group") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Group | ValidationError | GenericError

union CoreGroupsUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Group") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_groups_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Group") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Group | ValidationError | GenericError

union CoreGroupsPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Group") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_groups_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Group") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Group | ValidationError | GenericError

union CoreGroupsDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_groups_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union CoreGroupsAddUserCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_groups_add_user_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union CoreGroupsRemoveUserCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_groups_remove_user_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union CoreTokensCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "Token") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_tokens_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Token") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Token | ValidationError | GenericError

union CoreTokensUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Token") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_tokens_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Token") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Token | ValidationError | GenericError

union CoreTokensPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Token") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_tokens_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Token") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Token | ValidationError | GenericError

union CoreTokensDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_tokens_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union CoreTokensSetKeyCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_tokens_set_key_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | GenericError

union CoreTransactionalApplicationsUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "TransactionApplicationResponse") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_transactional_applications_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "TransactionApplicationResponse") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = TransactionApplicationResponse | ValidationError | GenericError

union CoreUserConsentDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_user_consent_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union CoreUsersCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "User") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_users_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "User") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = User | ValidationError | GenericError

union CoreUsersUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "User") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_users_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "User") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = User | ValidationError | GenericError

union CoreUsersPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "User") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_users_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "User") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = User | ValidationError | GenericError

union CoreUsersDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_users_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union CoreUsersImpersonateCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_users_impersonate_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union CoreUsersRecoveryCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Link") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_users_recovery_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Link") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Link | ValidationError | GenericError

union CoreUsersRecoveryEmailCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_users_recovery_email_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union CoreUsersSetPasswordCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_users_set_password_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | GenericError

union CoreUsersServiceAccountCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserServiceAccountResponse") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "core_users_service_account_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserServiceAccountResponse") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserServiceAccountResponse | ValidationError | GenericError

union CryptoCertificatekeypairsCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "CertificateKeyPair") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "crypto_certificatekeypairs_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "CertificateKeyPair") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = CertificateKeyPair | ValidationError | GenericError

union CryptoCertificatekeypairsUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "CertificateKeyPair") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "crypto_certificatekeypairs_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "CertificateKeyPair") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = CertificateKeyPair | ValidationError | GenericError

union CryptoCertificatekeypairsPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "CertificateKeyPair") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "crypto_certificatekeypairs_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "CertificateKeyPair") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = CertificateKeyPair | ValidationError | GenericError

union CryptoCertificatekeypairsDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "crypto_certificatekeypairs_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union CryptoCertificatekeypairsGenerateCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "CertificateKeyPair") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "crypto_certificatekeypairs_generate_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "CertificateKeyPair") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = CertificateKeyPair | GenericError

union EnterpriseLicenseCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "License") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "enterprise_license_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "License") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = License | ValidationError | GenericError

union EnterpriseLicenseUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "License") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "enterprise_license_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "License") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = License | ValidationError | GenericError

union EnterpriseLicensePartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "License") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "enterprise_license_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "License") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = License | ValidationError | GenericError

union EnterpriseLicenseDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "enterprise_license_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union EventsEventsCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "Event") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_events_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Event") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Event | ValidationError | GenericError

union EventsEventsUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Event") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_events_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Event") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Event | ValidationError | GenericError

union EventsEventsPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Event") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_events_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Event") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Event | ValidationError | GenericError

union EventsEventsDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_events_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union EventsNotificationsUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Notification") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_notifications_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Notification") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Notification | ValidationError | GenericError

union EventsNotificationsPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Notification") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_notifications_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Notification") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Notification | ValidationError | GenericError

union EventsNotificationsDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_notifications_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union EventsNotificationsMarkAllSeenCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_notifications_mark_all_seen_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union EventsRulesCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "NotificationRule") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_rules_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "NotificationRule") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = NotificationRule | ValidationError | GenericError

union EventsRulesUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "NotificationRule") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_rules_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "NotificationRule") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = NotificationRule | ValidationError | GenericError

union EventsRulesPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "NotificationRule") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_rules_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "NotificationRule") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = NotificationRule | ValidationError | GenericError

union EventsRulesDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_rules_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union EventsSystemTasksRunCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_system_tasks_run_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union EventsTransportsCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "NotificationTransport") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_transports_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "NotificationTransport") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = NotificationTransport | ValidationError | GenericError

union EventsTransportsUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "NotificationTransport") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_transports_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "NotificationTransport") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = NotificationTransport | ValidationError | GenericError

union EventsTransportsPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "NotificationTransport") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_transports_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "NotificationTransport") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = NotificationTransport | ValidationError | GenericError

union EventsTransportsDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_transports_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union EventsTransportsTestCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "NotificationTransportTest") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "events_transports_test_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "NotificationTransportTest") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = NotificationTransportTest | ValidationError | GenericError

union FlowsBindingsCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "FlowStageBinding") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "flows_bindings_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "FlowStageBinding") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = FlowStageBinding | ValidationError | GenericError

union FlowsBindingsUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "FlowStageBinding") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "flows_bindings_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "FlowStageBinding") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = FlowStageBinding | ValidationError | GenericError

union FlowsBindingsPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "FlowStageBinding") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "flows_bindings_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "FlowStageBinding") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = FlowStageBinding | ValidationError | GenericError

union FlowsBindingsDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "flows_bindings_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union FlowsExecutorSolveResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "flows_executor_solve_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AccessDeniedChallenge") @join__unionMember(graph: AUTHENTIK, member: "AppleLoginChallenge") @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorDuoChallenge") @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorSmsChallenge") @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorStaticChallenge") @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorTotpChallenge") @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorValidationChallenge") @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorWebAuthnChallenge") @join__unionMember(graph: AUTHENTIK, member: "AutosubmitChallenge") @join__unionMember(graph: AUTHENTIK, member: "CaptchaChallenge") @join__unionMember(graph: AUTHENTIK, member: "ConsentChallenge") @join__unionMember(graph: AUTHENTIK, member: "EmailChallenge") @join__unionMember(graph: AUTHENTIK, member: "FlowErrorChallenge") @join__unionMember(graph: AUTHENTIK, member: "FrameChallenge") @join__unionMember(graph: AUTHENTIK, member: "IdentificationChallenge") @join__unionMember(graph: AUTHENTIK, member: "OAuthDeviceCodeChallenge") @join__unionMember(graph: AUTHENTIK, member: "OAuthDeviceCodeFinishChallenge") @join__unionMember(graph: AUTHENTIK, member: "PasswordChallenge") @join__unionMember(graph: AUTHENTIK, member: "PlexAuthenticationChallenge") @join__unionMember(graph: AUTHENTIK, member: "PromptChallenge") @join__unionMember(graph: AUTHENTIK, member: "RedirectChallenge") @join__unionMember(graph: AUTHENTIK, member: "SessionEndChallenge") @join__unionMember(graph: AUTHENTIK, member: "ShellChallenge") @join__unionMember(graph: AUTHENTIK, member: "UserLoginChallenge") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AccessDeniedChallenge | AppleLoginChallenge | AuthenticatorDuoChallenge | AuthenticatorSmsChallenge | AuthenticatorStaticChallenge | AuthenticatorTotpChallenge | AuthenticatorValidationChallenge | AuthenticatorWebAuthnChallenge | AutosubmitChallenge | CaptchaChallenge | ConsentChallenge | EmailChallenge | FlowErrorChallenge | FrameChallenge | IdentificationChallenge | OAuthDeviceCodeChallenge | OAuthDeviceCodeFinishChallenge | PasswordChallenge | PlexAuthenticationChallenge | PromptChallenge | RedirectChallenge | SessionEndChallenge | ShellChallenge | UserLoginChallenge | ValidationError | GenericError

union FlowsInstancesCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "Flow") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "flows_instances_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Flow") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Flow | ValidationError | GenericError

union FlowsInstancesUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Flow") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "flows_instances_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Flow") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Flow | ValidationError | GenericError

union FlowsInstancesPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Flow") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "flows_instances_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Flow") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Flow | ValidationError | GenericError

union FlowsInstancesDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "flows_instances_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union FlowsInstancesCacheClearCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "flows_instances_cache_clear_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | GenericError

union FlowsInstancesImportCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "FlowImportResult") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "FlowImportResult") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "flows_instances_import_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "FlowImportResult") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = FlowImportResult | GenericError

union ManagedBlueprintsCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "BlueprintInstance") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "managed_blueprints_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "BlueprintInstance") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = BlueprintInstance | ValidationError | GenericError

union ManagedBlueprintsUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "BlueprintInstance") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "managed_blueprints_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "BlueprintInstance") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = BlueprintInstance | ValidationError | GenericError

union ManagedBlueprintsPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "BlueprintInstance") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "managed_blueprints_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "BlueprintInstance") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = BlueprintInstance | ValidationError | GenericError

union ManagedBlueprintsDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "managed_blueprints_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union ManagedBlueprintsApplyCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "BlueprintInstance") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "managed_blueprints_apply_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "BlueprintInstance") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = BlueprintInstance | ValidationError | GenericError

union Oauth2AccessTokensDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "oauth2_access_tokens_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union Oauth2AuthorizationCodesDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "oauth2_authorization_codes_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union Oauth2RefreshTokensDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "oauth2_refresh_tokens_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union OutpostsInstancesCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "Outpost") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_instances_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Outpost") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Outpost | ValidationError | GenericError

union OutpostsInstancesUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Outpost") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_instances_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Outpost") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Outpost | ValidationError | GenericError

union OutpostsInstancesPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Outpost") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_instances_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Outpost") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Outpost | ValidationError | GenericError

union OutpostsInstancesDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_instances_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union OutpostsServiceConnectionsAllDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_service_connections_all_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union OutpostsServiceConnectionsDockerCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "DockerServiceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_service_connections_docker_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "DockerServiceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = DockerServiceConnection | ValidationError | GenericError

union OutpostsServiceConnectionsDockerUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "DockerServiceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_service_connections_docker_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "DockerServiceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = DockerServiceConnection | ValidationError | GenericError

union OutpostsServiceConnectionsDockerPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "DockerServiceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_service_connections_docker_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "DockerServiceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = DockerServiceConnection | ValidationError | GenericError

union OutpostsServiceConnectionsDockerDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_service_connections_docker_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union OutpostsServiceConnectionsKubernetesCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "KubernetesServiceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_service_connections_kubernetes_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "KubernetesServiceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = KubernetesServiceConnection | ValidationError | GenericError

union OutpostsServiceConnectionsKubernetesUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "KubernetesServiceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_service_connections_kubernetes_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "KubernetesServiceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = KubernetesServiceConnection | ValidationError | GenericError

union OutpostsServiceConnectionsKubernetesPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "KubernetesServiceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_service_connections_kubernetes_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "KubernetesServiceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = KubernetesServiceConnection | ValidationError | GenericError

union OutpostsServiceConnectionsKubernetesDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "outposts_service_connections_kubernetes_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union PoliciesAllDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_all_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union PoliciesAllTestCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PolicyTestResult") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_all_test_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PolicyTestResult") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PolicyTestResult | GenericError

union PoliciesAllCacheClearCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_all_cache_clear_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | GenericError

union PoliciesBindingsCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "PolicyBinding") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_bindings_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PolicyBinding") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PolicyBinding | ValidationError | GenericError

union PoliciesBindingsUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PolicyBinding") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_bindings_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PolicyBinding") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PolicyBinding | ValidationError | GenericError

union PoliciesBindingsPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PolicyBinding") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_bindings_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PolicyBinding") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PolicyBinding | ValidationError | GenericError

union PoliciesBindingsDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_bindings_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union PoliciesDummyCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "DummyPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_dummy_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "DummyPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = DummyPolicy | ValidationError | GenericError

union PoliciesDummyUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "DummyPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_dummy_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "DummyPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = DummyPolicy | ValidationError | GenericError

union PoliciesDummyPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "DummyPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_dummy_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "DummyPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = DummyPolicy | ValidationError | GenericError

union PoliciesDummyDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_dummy_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union PoliciesEventMatcherCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "EventMatcherPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_event_matcher_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "EventMatcherPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = EventMatcherPolicy | ValidationError | GenericError

union PoliciesEventMatcherUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "EventMatcherPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_event_matcher_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "EventMatcherPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = EventMatcherPolicy | ValidationError | GenericError

union PoliciesEventMatcherPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "EventMatcherPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_event_matcher_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "EventMatcherPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = EventMatcherPolicy | ValidationError | GenericError

union PoliciesEventMatcherDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_event_matcher_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union PoliciesExpressionCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "ExpressionPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_expression_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ExpressionPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ExpressionPolicy | ValidationError | GenericError

union PoliciesExpressionUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ExpressionPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_expression_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ExpressionPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ExpressionPolicy | ValidationError | GenericError

union PoliciesExpressionPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ExpressionPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_expression_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ExpressionPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ExpressionPolicy | ValidationError | GenericError

union PoliciesExpressionDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_expression_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union PoliciesGeoipCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "GeoIPPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_geoip_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GeoIpPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GeoIpPolicy | ValidationError | GenericError

union PoliciesGeoipUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "GeoIPPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_geoip_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GeoIpPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GeoIpPolicy | ValidationError | GenericError

union PoliciesGeoipPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "GeoIPPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_geoip_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GeoIpPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GeoIpPolicy | ValidationError | GenericError

union PoliciesGeoipDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_geoip_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union PoliciesPasswordCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "PasswordPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_password_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PasswordPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PasswordPolicy | ValidationError | GenericError

union PoliciesPasswordUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PasswordPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_password_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PasswordPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PasswordPolicy | ValidationError | GenericError

union PoliciesPasswordPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PasswordPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_password_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PasswordPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PasswordPolicy | ValidationError | GenericError

union PoliciesPasswordDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_password_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union PoliciesPasswordExpiryCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "PasswordExpiryPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_password_expiry_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PasswordExpiryPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PasswordExpiryPolicy | ValidationError | GenericError

union PoliciesPasswordExpiryUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PasswordExpiryPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_password_expiry_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PasswordExpiryPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PasswordExpiryPolicy | ValidationError | GenericError

union PoliciesPasswordExpiryPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PasswordExpiryPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_password_expiry_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PasswordExpiryPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PasswordExpiryPolicy | ValidationError | GenericError

union PoliciesPasswordExpiryDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_password_expiry_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union PoliciesReputationCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "ReputationPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_reputation_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ReputationPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ReputationPolicy | ValidationError | GenericError

union PoliciesReputationUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ReputationPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_reputation_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ReputationPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ReputationPolicy | ValidationError | GenericError

union PoliciesReputationPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ReputationPolicy") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_reputation_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ReputationPolicy") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ReputationPolicy | ValidationError | GenericError

union PoliciesReputationDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_reputation_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union PoliciesReputationScoresDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "policies_reputation_scores_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union PropertymappingsAllDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_all_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union PropertymappingsAllTestCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PropertyMappingTestResult") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_all_test_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PropertyMappingTestResult") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PropertyMappingTestResult | GenericError

union PropertymappingsNotificationCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "NotificationWebhookMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_notification_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "NotificationWebhookMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = NotificationWebhookMapping | ValidationError | GenericError

union PropertymappingsNotificationUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "NotificationWebhookMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_notification_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "NotificationWebhookMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = NotificationWebhookMapping | ValidationError | GenericError

union PropertymappingsNotificationPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "NotificationWebhookMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_notification_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "NotificationWebhookMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = NotificationWebhookMapping | ValidationError | GenericError

union PropertymappingsNotificationDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_notification_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union PropertymappingsProviderGoogleWorkspaceCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "GoogleWorkspaceProviderMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_google_workspace_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GoogleWorkspaceProviderMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GoogleWorkspaceProviderMapping | ValidationError | GenericError

union PropertymappingsProviderGoogleWorkspaceUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "GoogleWorkspaceProviderMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_google_workspace_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GoogleWorkspaceProviderMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GoogleWorkspaceProviderMapping | ValidationError | GenericError

union PropertymappingsProviderGoogleWorkspacePartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "GoogleWorkspaceProviderMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_google_workspace_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GoogleWorkspaceProviderMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GoogleWorkspaceProviderMapping | ValidationError | GenericError

union PropertymappingsProviderGoogleWorkspaceDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_google_workspace_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union PropertymappingsProviderMicrosoftEntraCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "MicrosoftEntraProviderMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_microsoft_entra_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "MicrosoftEntraProviderMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = MicrosoftEntraProviderMapping | ValidationError | GenericError

union PropertymappingsProviderMicrosoftEntraUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "MicrosoftEntraProviderMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_microsoft_entra_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "MicrosoftEntraProviderMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = MicrosoftEntraProviderMapping | ValidationError | GenericError

union PropertymappingsProviderMicrosoftEntraPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "MicrosoftEntraProviderMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_microsoft_entra_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "MicrosoftEntraProviderMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = MicrosoftEntraProviderMapping | ValidationError | GenericError

union PropertymappingsProviderMicrosoftEntraDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_microsoft_entra_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union PropertymappingsProviderRacCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "RACPropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_rac_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "RacPropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = RacPropertyMapping | ValidationError | GenericError

union PropertymappingsProviderRacUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "RACPropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_rac_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "RacPropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = RacPropertyMapping | ValidationError | GenericError

union PropertymappingsProviderRacPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "RACPropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_rac_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "RacPropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = RacPropertyMapping | ValidationError | GenericError

union PropertymappingsProviderRacDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_rac_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union PropertymappingsProviderRadiusCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "RadiusProviderPropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_radius_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "RadiusProviderPropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = RadiusProviderPropertyMapping | ValidationError | GenericError

union PropertymappingsProviderRadiusUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "RadiusProviderPropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_radius_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "RadiusProviderPropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = RadiusProviderPropertyMapping | ValidationError | GenericError

union PropertymappingsProviderRadiusPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "RadiusProviderPropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_radius_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "RadiusProviderPropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = RadiusProviderPropertyMapping | ValidationError | GenericError

union PropertymappingsProviderRadiusDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_radius_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union PropertymappingsProviderSamlCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "SAMLPropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_saml_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SamlPropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SamlPropertyMapping | ValidationError | GenericError

union PropertymappingsProviderSamlUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SAMLPropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_saml_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SamlPropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SamlPropertyMapping | ValidationError | GenericError

union PropertymappingsProviderSamlPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SAMLPropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_saml_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SamlPropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SamlPropertyMapping | ValidationError | GenericError

union PropertymappingsProviderSamlDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_saml_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union PropertymappingsProviderScimCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "SCIMMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_scim_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimMapping | ValidationError | GenericError

union PropertymappingsProviderScimUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SCIMMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_scim_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimMapping | ValidationError | GenericError

union PropertymappingsProviderScimPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SCIMMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_scim_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimMapping | ValidationError | GenericError

union PropertymappingsProviderScimDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_scim_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union PropertymappingsProviderScopeCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "ScopeMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_scope_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScopeMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScopeMapping | ValidationError | GenericError

union PropertymappingsProviderScopeUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ScopeMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_scope_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScopeMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScopeMapping | ValidationError | GenericError

union PropertymappingsProviderScopePartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ScopeMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_scope_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScopeMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScopeMapping | ValidationError | GenericError

union PropertymappingsProviderScopeDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_provider_scope_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union PropertymappingsSourceKerberosCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "KerberosSourcePropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_kerberos_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "KerberosSourcePropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = KerberosSourcePropertyMapping | ValidationError | GenericError

union PropertymappingsSourceKerberosUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "KerberosSourcePropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_kerberos_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "KerberosSourcePropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = KerberosSourcePropertyMapping | ValidationError | GenericError

union PropertymappingsSourceKerberosPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "KerberosSourcePropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_kerberos_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "KerberosSourcePropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = KerberosSourcePropertyMapping | ValidationError | GenericError

union PropertymappingsSourceKerberosDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_kerberos_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union PropertymappingsSourceLdapCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "LDAPSourcePropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_ldap_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "LdapSourcePropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = LdapSourcePropertyMapping | ValidationError | GenericError

union PropertymappingsSourceLdapUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "LDAPSourcePropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_ldap_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "LdapSourcePropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = LdapSourcePropertyMapping | ValidationError | GenericError

union PropertymappingsSourceLdapPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "LDAPSourcePropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_ldap_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "LdapSourcePropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = LdapSourcePropertyMapping | ValidationError | GenericError

union PropertymappingsSourceLdapDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_ldap_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union PropertymappingsSourceOauthCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "OAuthSourcePropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_oauth_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "OAuthSourcePropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = OAuthSourcePropertyMapping | ValidationError | GenericError

union PropertymappingsSourceOauthUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "OAuthSourcePropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_oauth_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "OAuthSourcePropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = OAuthSourcePropertyMapping | ValidationError | GenericError

union PropertymappingsSourceOauthPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "OAuthSourcePropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_oauth_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "OAuthSourcePropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = OAuthSourcePropertyMapping | ValidationError | GenericError

union PropertymappingsSourceOauthDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_oauth_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union PropertymappingsSourcePlexCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "PlexSourcePropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_plex_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PlexSourcePropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PlexSourcePropertyMapping | ValidationError | GenericError

union PropertymappingsSourcePlexUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PlexSourcePropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_plex_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PlexSourcePropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PlexSourcePropertyMapping | ValidationError | GenericError

union PropertymappingsSourcePlexPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PlexSourcePropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_plex_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PlexSourcePropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PlexSourcePropertyMapping | ValidationError | GenericError

union PropertymappingsSourcePlexDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_plex_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union PropertymappingsSourceSamlCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "SAMLSourcePropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_saml_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SamlSourcePropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SamlSourcePropertyMapping | ValidationError | GenericError

union PropertymappingsSourceSamlUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SAMLSourcePropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_saml_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SamlSourcePropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SamlSourcePropertyMapping | ValidationError | GenericError

union PropertymappingsSourceSamlPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SAMLSourcePropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_saml_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SamlSourcePropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SamlSourcePropertyMapping | ValidationError | GenericError

union PropertymappingsSourceSamlDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_saml_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union PropertymappingsSourceScimCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "SCIMSourcePropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_scim_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimSourcePropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimSourcePropertyMapping | ValidationError | GenericError

union PropertymappingsSourceScimUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SCIMSourcePropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_scim_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimSourcePropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimSourcePropertyMapping | ValidationError | GenericError

union PropertymappingsSourceScimPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SCIMSourcePropertyMapping") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_scim_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimSourcePropertyMapping") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimSourcePropertyMapping | ValidationError | GenericError

union PropertymappingsSourceScimDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "propertymappings_source_scim_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union ProvidersAllDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_all_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union ProvidersGoogleWorkspaceCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "GoogleWorkspaceProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_google_workspace_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GoogleWorkspaceProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GoogleWorkspaceProvider | ValidationError | GenericError

union ProvidersGoogleWorkspaceUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "GoogleWorkspaceProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_google_workspace_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GoogleWorkspaceProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GoogleWorkspaceProvider | ValidationError | GenericError

union ProvidersGoogleWorkspacePartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "GoogleWorkspaceProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_google_workspace_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GoogleWorkspaceProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GoogleWorkspaceProvider | ValidationError | GenericError

union ProvidersGoogleWorkspaceDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_google_workspace_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union ProvidersGoogleWorkspaceSyncObjectCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SyncObjectResult") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_google_workspace_sync_object_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SyncObjectResult") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SyncObjectResult | ValidationError | GenericError

union ProvidersGoogleWorkspaceGroupsCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "GoogleWorkspaceProviderGroup") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_google_workspace_groups_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GoogleWorkspaceProviderGroup") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GoogleWorkspaceProviderGroup | ValidationError | GenericError

union ProvidersGoogleWorkspaceGroupsDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_google_workspace_groups_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union ProvidersGoogleWorkspaceUsersCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "GoogleWorkspaceProviderUser") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_google_workspace_users_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GoogleWorkspaceProviderUser") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GoogleWorkspaceProviderUser | ValidationError | GenericError

union ProvidersGoogleWorkspaceUsersDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_google_workspace_users_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union ProvidersLdapCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "LDAPProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_ldap_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "LdapProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = LdapProvider | ValidationError | GenericError

union ProvidersLdapUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "LDAPProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_ldap_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "LdapProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = LdapProvider | ValidationError | GenericError

union ProvidersLdapPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "LDAPProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_ldap_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "LdapProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = LdapProvider | ValidationError | GenericError

union ProvidersLdapDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_ldap_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union ProvidersMicrosoftEntraCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "MicrosoftEntraProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_microsoft_entra_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "MicrosoftEntraProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = MicrosoftEntraProvider | ValidationError | GenericError

union ProvidersMicrosoftEntraUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "MicrosoftEntraProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_microsoft_entra_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "MicrosoftEntraProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = MicrosoftEntraProvider | ValidationError | GenericError

union ProvidersMicrosoftEntraPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "MicrosoftEntraProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_microsoft_entra_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "MicrosoftEntraProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = MicrosoftEntraProvider | ValidationError | GenericError

union ProvidersMicrosoftEntraDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_microsoft_entra_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union ProvidersMicrosoftEntraSyncObjectCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SyncObjectResult") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_microsoft_entra_sync_object_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SyncObjectResult") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SyncObjectResult | ValidationError | GenericError

union ProvidersMicrosoftEntraGroupsCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "MicrosoftEntraProviderGroup") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_microsoft_entra_groups_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "MicrosoftEntraProviderGroup") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = MicrosoftEntraProviderGroup | ValidationError | GenericError

union ProvidersMicrosoftEntraGroupsDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_microsoft_entra_groups_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union ProvidersMicrosoftEntraUsersCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "MicrosoftEntraProviderUser") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_microsoft_entra_users_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "MicrosoftEntraProviderUser") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = MicrosoftEntraProviderUser | ValidationError | GenericError

union ProvidersMicrosoftEntraUsersDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_microsoft_entra_users_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union ProvidersOauth2CreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "OAuth2Provider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_oauth2_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "OAuth2Provider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = OAuth2Provider | ValidationError | GenericError

union ProvidersOauth2UpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "OAuth2Provider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_oauth2_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "OAuth2Provider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = OAuth2Provider | ValidationError | GenericError

union ProvidersOauth2PartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "OAuth2Provider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_oauth2_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "OAuth2Provider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = OAuth2Provider | ValidationError | GenericError

union ProvidersOauth2DestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_oauth2_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union ProvidersProxyCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "ProxyProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_proxy_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ProxyProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ProxyProvider | ValidationError | GenericError

union ProvidersProxyUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ProxyProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_proxy_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ProxyProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ProxyProvider | ValidationError | GenericError

union ProvidersProxyPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ProxyProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_proxy_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ProxyProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ProxyProvider | ValidationError | GenericError

union ProvidersProxyDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_proxy_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union ProvidersRacCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "RACProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_rac_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "RacProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = RacProvider | ValidationError | GenericError

union ProvidersRacUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "RACProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_rac_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "RacProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = RacProvider | ValidationError | GenericError

union ProvidersRacPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "RACProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_rac_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "RacProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = RacProvider | ValidationError | GenericError

union ProvidersRacDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_rac_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union ProvidersRadiusCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "RadiusProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_radius_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "RadiusProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = RadiusProvider | ValidationError | GenericError

union ProvidersRadiusUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "RadiusProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_radius_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "RadiusProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = RadiusProvider | ValidationError | GenericError

union ProvidersRadiusPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "RadiusProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_radius_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "RadiusProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = RadiusProvider | ValidationError | GenericError

union ProvidersRadiusDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_radius_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union ProvidersSamlCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "SAMLProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_saml_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SamlProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SamlProvider | ValidationError | GenericError

union ProvidersSamlUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SAMLProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_saml_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SamlProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SamlProvider | ValidationError | GenericError

union ProvidersSamlPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SAMLProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_saml_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SamlProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SamlProvider | ValidationError | GenericError

union ProvidersSamlDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_saml_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union ProvidersSamlImportMetadataCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_saml_import_metadata_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | GenericError

union ProvidersScimCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "SCIMProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_scim_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimProvider | ValidationError | GenericError

union ProvidersScimUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SCIMProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_scim_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimProvider | ValidationError | GenericError

union ProvidersScimPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SCIMProvider") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_scim_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimProvider") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimProvider | ValidationError | GenericError

union ProvidersScimDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_scim_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union ProvidersScimSyncObjectCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SyncObjectResult") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_scim_sync_object_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SyncObjectResult") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SyncObjectResult | ValidationError | GenericError

union ProvidersScimGroupsCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "SCIMProviderGroup") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_scim_groups_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimProviderGroup") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimProviderGroup | ValidationError | GenericError

union ProvidersScimGroupsDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_scim_groups_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union ProvidersScimUsersCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "SCIMProviderUser") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_scim_users_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimProviderUser") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimProviderUser | ValidationError | GenericError

union ProvidersScimUsersDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "providers_scim_users_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union RacConnectionTokensUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ConnectionToken") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rac_connection_tokens_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ConnectionToken") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ConnectionToken | ValidationError | GenericError

union RacConnectionTokensPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ConnectionToken") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rac_connection_tokens_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ConnectionToken") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ConnectionToken | ValidationError | GenericError

union RacConnectionTokensDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rac_connection_tokens_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union RacEndpointsCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "Endpoint") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rac_endpoints_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Endpoint") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Endpoint | ValidationError | GenericError

union RacEndpointsUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Endpoint") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rac_endpoints_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Endpoint") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Endpoint | ValidationError | GenericError

union RacEndpointsPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Endpoint") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rac_endpoints_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Endpoint") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Endpoint | ValidationError | GenericError

union RacEndpointsDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rac_endpoints_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union RbacPermissionsAssignedByRolesAssignResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PermissionAssignResult") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rbac_permissions_assigned_by_roles_assign_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PermissionAssignResult") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PermissionAssignResult | ValidationError | GenericError

union RbacPermissionsAssignedByRolesUnassignPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rbac_permissions_assigned_by_roles_unassign_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union RbacPermissionsAssignedByUsersAssignResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PermissionAssignResult") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rbac_permissions_assigned_by_users_assign_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PermissionAssignResult") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PermissionAssignResult | ValidationError | GenericError

union RbacPermissionsAssignedByUsersUnassignPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rbac_permissions_assigned_by_users_unassign_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union RbacPermissionsRolesUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ExtraRoleObjectPermission") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rbac_permissions_roles_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ExtraRoleObjectPermission") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ExtraRoleObjectPermission | ValidationError | GenericError

union RbacPermissionsRolesPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ExtraRoleObjectPermission") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rbac_permissions_roles_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ExtraRoleObjectPermission") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ExtraRoleObjectPermission | ValidationError | GenericError

union RbacPermissionsRolesDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rbac_permissions_roles_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union RbacPermissionsUsersUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ExtraUserObjectPermission") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rbac_permissions_users_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ExtraUserObjectPermission") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ExtraUserObjectPermission | ValidationError | GenericError

union RbacPermissionsUsersPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ExtraUserObjectPermission") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rbac_permissions_users_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ExtraUserObjectPermission") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ExtraUserObjectPermission | ValidationError | GenericError

union RbacPermissionsUsersDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rbac_permissions_users_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union RbacRolesCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "Role") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rbac_roles_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Role") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Role | ValidationError | GenericError

union RbacRolesUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Role") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rbac_roles_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Role") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Role | ValidationError | GenericError

union RbacRolesPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Role") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rbac_roles_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Role") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Role | ValidationError | GenericError

union RbacRolesDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "rbac_roles_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union SourcesAllDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_all_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union SourcesGroupConnectionsKerberosUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "GroupKerberosSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_kerberos_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GroupKerberosSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GroupKerberosSourceConnection | ValidationError | GenericError

union SourcesGroupConnectionsKerberosPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "GroupKerberosSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_kerberos_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GroupKerberosSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GroupKerberosSourceConnection | ValidationError | GenericError

union SourcesGroupConnectionsKerberosDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_kerberos_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union SourcesGroupConnectionsOauthCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "GroupOAuthSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_oauth_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GroupOAuthSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GroupOAuthSourceConnection | ValidationError | GenericError

union SourcesGroupConnectionsOauthUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "GroupOAuthSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_oauth_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GroupOAuthSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GroupOAuthSourceConnection | ValidationError | GenericError

union SourcesGroupConnectionsOauthPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "GroupOAuthSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_oauth_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GroupOAuthSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GroupOAuthSourceConnection | ValidationError | GenericError

union SourcesGroupConnectionsOauthDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_oauth_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union SourcesGroupConnectionsPlexCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "GroupPlexSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_plex_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GroupPlexSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GroupPlexSourceConnection | ValidationError | GenericError

union SourcesGroupConnectionsPlexUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "GroupPlexSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_plex_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GroupPlexSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GroupPlexSourceConnection | ValidationError | GenericError

union SourcesGroupConnectionsPlexPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "GroupPlexSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_plex_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GroupPlexSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GroupPlexSourceConnection | ValidationError | GenericError

union SourcesGroupConnectionsPlexDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_plex_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union SourcesGroupConnectionsSamlUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "GroupSAMLSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_saml_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GroupSamlSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GroupSamlSourceConnection | ValidationError | GenericError

union SourcesGroupConnectionsSamlPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "GroupSAMLSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_saml_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "GroupSamlSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = GroupSamlSourceConnection | ValidationError | GenericError

union SourcesGroupConnectionsSamlDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_group_connections_saml_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union SourcesKerberosCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "KerberosSource") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_kerberos_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "KerberosSource") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = KerberosSource | ValidationError | GenericError

union SourcesKerberosUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "KerberosSource") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_kerberos_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "KerberosSource") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = KerberosSource | ValidationError | GenericError

union SourcesKerberosPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "KerberosSource") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_kerberos_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "KerberosSource") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = KerberosSource | ValidationError | GenericError

union SourcesKerberosDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_kerberos_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union SourcesLdapCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "LDAPSource") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_ldap_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "LdapSource") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = LdapSource | ValidationError | GenericError

union SourcesLdapUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "LDAPSource") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_ldap_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "LdapSource") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = LdapSource | ValidationError | GenericError

union SourcesLdapPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "LDAPSource") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_ldap_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "LdapSource") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = LdapSource | ValidationError | GenericError

union SourcesLdapDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_ldap_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union SourcesOauthCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "OAuthSource") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_oauth_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "OAuthSource") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = OAuthSource | ValidationError | GenericError

union SourcesOauthUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "OAuthSource") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_oauth_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "OAuthSource") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = OAuthSource | ValidationError | GenericError

union SourcesOauthPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "OAuthSource") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_oauth_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "OAuthSource") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = OAuthSource | ValidationError | GenericError

union SourcesOauthDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_oauth_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union SourcesPlexCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "PlexSource") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_plex_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PlexSource") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PlexSource | ValidationError | GenericError

union SourcesPlexUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PlexSource") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_plex_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PlexSource") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PlexSource | ValidationError | GenericError

union SourcesPlexPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PlexSource") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_plex_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PlexSource") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PlexSource | ValidationError | GenericError

union SourcesPlexDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_plex_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union SourcesSamlCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "SAMLSource") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_saml_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SamlSource") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SamlSource | ValidationError | GenericError

union SourcesSamlUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SAMLSource") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_saml_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SamlSource") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SamlSource | ValidationError | GenericError

union SourcesSamlPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SAMLSource") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_saml_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SamlSource") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SamlSource | ValidationError | GenericError

union SourcesSamlDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_saml_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union SourcesScimCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "SCIMSource") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_scim_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimSource") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimSource | ValidationError | GenericError

union SourcesScimUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SCIMSource") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_scim_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimSource") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimSource | ValidationError | GenericError

union SourcesScimPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SCIMSource") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_scim_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimSource") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimSource | ValidationError | GenericError

union SourcesScimDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_scim_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union SourcesScimGroupsCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "SCIMSourceGroup") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_scim_groups_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimSourceGroup") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimSourceGroup | ValidationError | GenericError

union SourcesScimGroupsUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SCIMSourceGroup") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_scim_groups_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimSourceGroup") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimSourceGroup | ValidationError | GenericError

union SourcesScimGroupsPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SCIMSourceGroup") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_scim_groups_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimSourceGroup") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimSourceGroup | ValidationError | GenericError

union SourcesScimGroupsDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_scim_groups_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union SourcesScimUsersCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "SCIMSourceUser") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_scim_users_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimSourceUser") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimSourceUser | ValidationError | GenericError

union SourcesScimUsersUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SCIMSourceUser") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_scim_users_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimSourceUser") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimSourceUser | ValidationError | GenericError

union SourcesScimUsersPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SCIMSourceUser") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_scim_users_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ScimSourceUser") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ScimSourceUser | ValidationError | GenericError

union SourcesScimUsersDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_scim_users_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union SourcesUserConnectionsAllUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_all_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserSourceConnection | ValidationError | GenericError

union SourcesUserConnectionsAllPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_all_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserSourceConnection | ValidationError | GenericError

union SourcesUserConnectionsAllDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_all_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union SourcesUserConnectionsKerberosCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "UserKerberosSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_kerberos_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserKerberosSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserKerberosSourceConnection | ValidationError | GenericError

union SourcesUserConnectionsKerberosUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserKerberosSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_kerberos_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserKerberosSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserKerberosSourceConnection | ValidationError | GenericError

union SourcesUserConnectionsKerberosPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserKerberosSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_kerberos_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserKerberosSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserKerberosSourceConnection | ValidationError | GenericError

union SourcesUserConnectionsKerberosDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_kerberos_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union SourcesUserConnectionsOauthCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "UserOAuthSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_oauth_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserOAuthSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserOAuthSourceConnection | ValidationError | GenericError

union SourcesUserConnectionsOauthUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserOAuthSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_oauth_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserOAuthSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserOAuthSourceConnection | ValidationError | GenericError

union SourcesUserConnectionsOauthPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserOAuthSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_oauth_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserOAuthSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserOAuthSourceConnection | ValidationError | GenericError

union SourcesUserConnectionsOauthDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_oauth_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union SourcesUserConnectionsPlexCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "UserPlexSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_plex_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserPlexSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserPlexSourceConnection | ValidationError | GenericError

union SourcesUserConnectionsPlexUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserPlexSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_plex_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserPlexSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserPlexSourceConnection | ValidationError | GenericError

union SourcesUserConnectionsPlexPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserPlexSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_plex_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserPlexSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserPlexSourceConnection | ValidationError | GenericError

union SourcesUserConnectionsPlexDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_plex_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union SourcesUserConnectionsSamlCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "UserSAMLSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_saml_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserSamlSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserSamlSourceConnection | ValidationError | GenericError

union SourcesUserConnectionsSamlUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserSAMLSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_saml_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserSamlSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserSamlSourceConnection | ValidationError | GenericError

union SourcesUserConnectionsSamlPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserSAMLSourceConnection") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_saml_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserSamlSourceConnection") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserSamlSourceConnection | ValidationError | GenericError

union SourcesUserConnectionsSamlDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "sources_user_connections_saml_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union StagesAllDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_all_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union StagesAuthenticatorDuoCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "AuthenticatorDuoStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_duo_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorDuoStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorDuoStage | ValidationError | GenericError

union StagesAuthenticatorDuoUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "AuthenticatorDuoStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_duo_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorDuoStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorDuoStage | ValidationError | GenericError

union StagesAuthenticatorDuoPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "AuthenticatorDuoStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_duo_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorDuoStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorDuoStage | ValidationError | GenericError

union StagesAuthenticatorDuoDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_duo_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union StagesAuthenticatorDuoEnrollmentStatusCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "DuoDeviceEnrollmentStatus") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_duo_enrollment_status_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "DuoDeviceEnrollmentStatus") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = DuoDeviceEnrollmentStatus | ValidationError | GenericError

union StagesAuthenticatorDuoImportDeviceManualCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_duo_import_device_manual_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | GenericError

union StagesAuthenticatorDuoImportDevicesAutomaticCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "AuthenticatorDuoStageDeviceImportResponse") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_duo_import_devices_automatic_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorDuoStageDeviceImportResponse") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorDuoStageDeviceImportResponse | GenericError

union StagesAuthenticatorEndpointGdtcCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "AuthenticatorEndpointGDTCStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_endpoint_gdtc_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorEndpointGdtcStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorEndpointGdtcStage | ValidationError | GenericError

union StagesAuthenticatorEndpointGdtcUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "AuthenticatorEndpointGDTCStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_endpoint_gdtc_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorEndpointGdtcStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorEndpointGdtcStage | ValidationError | GenericError

union StagesAuthenticatorEndpointGdtcPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "AuthenticatorEndpointGDTCStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_endpoint_gdtc_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorEndpointGdtcStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorEndpointGdtcStage | ValidationError | GenericError

union StagesAuthenticatorEndpointGdtcDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_endpoint_gdtc_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union StagesAuthenticatorSmsCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "AuthenticatorSMSStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_sms_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorSmsStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorSmsStage | ValidationError | GenericError

union StagesAuthenticatorSmsUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "AuthenticatorSMSStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_sms_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorSmsStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorSmsStage | ValidationError | GenericError

union StagesAuthenticatorSmsPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "AuthenticatorSMSStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_sms_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorSmsStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorSmsStage | ValidationError | GenericError

union StagesAuthenticatorSmsDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_sms_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union StagesAuthenticatorStaticCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "AuthenticatorStaticStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_static_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorStaticStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorStaticStage | ValidationError | GenericError

union StagesAuthenticatorStaticUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "AuthenticatorStaticStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_static_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorStaticStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorStaticStage | ValidationError | GenericError

union StagesAuthenticatorStaticPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "AuthenticatorStaticStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_static_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorStaticStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorStaticStage | ValidationError | GenericError

union StagesAuthenticatorStaticDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_static_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union StagesAuthenticatorTotpCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "AuthenticatorTOTPStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_totp_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorTotpStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorTotpStage | ValidationError | GenericError

union StagesAuthenticatorTotpUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "AuthenticatorTOTPStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_totp_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorTotpStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorTotpStage | ValidationError | GenericError

union StagesAuthenticatorTotpPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "AuthenticatorTOTPStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_totp_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorTotpStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorTotpStage | ValidationError | GenericError

union StagesAuthenticatorTotpDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_totp_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union StagesAuthenticatorValidateCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "AuthenticatorValidateStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_validate_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorValidateStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorValidateStage | ValidationError | GenericError

union StagesAuthenticatorValidateUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "AuthenticatorValidateStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_validate_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorValidateStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorValidateStage | ValidationError | GenericError

union StagesAuthenticatorValidatePartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "AuthenticatorValidateStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_validate_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorValidateStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorValidateStage | ValidationError | GenericError

union StagesAuthenticatorValidateDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_validate_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union StagesAuthenticatorWebauthnCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "AuthenticatorWebAuthnStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_webauthn_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorWebAuthnStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorWebAuthnStage | ValidationError | GenericError

union StagesAuthenticatorWebauthnUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "AuthenticatorWebAuthnStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_webauthn_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorWebAuthnStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorWebAuthnStage | ValidationError | GenericError

union StagesAuthenticatorWebauthnPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "AuthenticatorWebAuthnStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_webauthn_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "AuthenticatorWebAuthnStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = AuthenticatorWebAuthnStage | ValidationError | GenericError

union StagesAuthenticatorWebauthnDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_authenticator_webauthn_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union StagesCaptchaCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "CaptchaStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_captcha_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "CaptchaStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = CaptchaStage | ValidationError | GenericError

union StagesCaptchaUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "CaptchaStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_captcha_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "CaptchaStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = CaptchaStage | ValidationError | GenericError

union StagesCaptchaPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "CaptchaStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_captcha_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "CaptchaStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = CaptchaStage | ValidationError | GenericError

union StagesCaptchaDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_captcha_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union StagesConsentCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "ConsentStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_consent_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ConsentStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ConsentStage | ValidationError | GenericError

union StagesConsentUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ConsentStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_consent_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ConsentStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ConsentStage | ValidationError | GenericError

union StagesConsentPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "ConsentStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_consent_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "ConsentStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = ConsentStage | ValidationError | GenericError

union StagesConsentDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_consent_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union StagesDenyCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "DenyStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_deny_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "DenyStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = DenyStage | ValidationError | GenericError

union StagesDenyUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "DenyStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_deny_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "DenyStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = DenyStage | ValidationError | GenericError

union StagesDenyPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "DenyStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_deny_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "DenyStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = DenyStage | ValidationError | GenericError

union StagesDenyDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_deny_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union StagesDummyCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "DummyStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_dummy_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "DummyStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = DummyStage | ValidationError | GenericError

union StagesDummyUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "DummyStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_dummy_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "DummyStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = DummyStage | ValidationError | GenericError

union StagesDummyPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "DummyStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_dummy_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "DummyStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = DummyStage | ValidationError | GenericError

union StagesDummyDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_dummy_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union StagesEmailCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "EmailStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_email_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "EmailStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = EmailStage | ValidationError | GenericError

union StagesEmailUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "EmailStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_email_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "EmailStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = EmailStage | ValidationError | GenericError

union StagesEmailPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "EmailStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_email_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "EmailStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = EmailStage | ValidationError | GenericError

union StagesEmailDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_email_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union StagesIdentificationCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "IdentificationStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_identification_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "IdentificationStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = IdentificationStage | ValidationError | GenericError

union StagesIdentificationUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "IdentificationStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_identification_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "IdentificationStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = IdentificationStage | ValidationError | GenericError

union StagesIdentificationPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "IdentificationStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_identification_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "IdentificationStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = IdentificationStage | ValidationError | GenericError

union StagesIdentificationDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_identification_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union StagesInvitationInvitationsCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "Invitation") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_invitation_invitations_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Invitation") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Invitation | ValidationError | GenericError

union StagesInvitationInvitationsUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Invitation") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_invitation_invitations_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Invitation") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Invitation | ValidationError | GenericError

union StagesInvitationInvitationsPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Invitation") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_invitation_invitations_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Invitation") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Invitation | ValidationError | GenericError

union StagesInvitationInvitationsDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_invitation_invitations_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union StagesInvitationStagesCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "InvitationStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_invitation_stages_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "InvitationStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = InvitationStage | ValidationError | GenericError

union StagesInvitationStagesUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "InvitationStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_invitation_stages_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "InvitationStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = InvitationStage | ValidationError | GenericError

union StagesInvitationStagesPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "InvitationStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_invitation_stages_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "InvitationStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = InvitationStage | ValidationError | GenericError

union StagesInvitationStagesDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_invitation_stages_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union StagesPasswordCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "PasswordStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_password_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PasswordStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PasswordStage | ValidationError | GenericError

union StagesPasswordUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PasswordStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_password_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PasswordStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PasswordStage | ValidationError | GenericError

union StagesPasswordPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PasswordStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_password_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PasswordStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PasswordStage | ValidationError | GenericError

union StagesPasswordDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_password_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union StagesPromptPromptsCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "Prompt") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_prompt_prompts_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Prompt") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Prompt | ValidationError | GenericError

union StagesPromptPromptsUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Prompt") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_prompt_prompts_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Prompt") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Prompt | ValidationError | GenericError

union StagesPromptPromptsPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "Prompt") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_prompt_prompts_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "Prompt") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = Prompt | ValidationError | GenericError

union StagesPromptPromptsDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_prompt_prompts_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union StagesPromptPromptsPreviewCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PromptChallenge") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_prompt_prompts_preview_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PromptChallenge") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PromptChallenge | ValidationError | GenericError

union StagesPromptStagesCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "PromptStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_prompt_stages_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PromptStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PromptStage | ValidationError | GenericError

union StagesPromptStagesUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PromptStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_prompt_stages_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PromptStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PromptStage | ValidationError | GenericError

union StagesPromptStagesPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "PromptStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_prompt_stages_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "PromptStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = PromptStage | ValidationError | GenericError

union StagesPromptStagesDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_prompt_stages_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union StagesSourceCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "SourceStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_source_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SourceStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SourceStage | ValidationError | GenericError

union StagesSourceUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SourceStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_source_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SourceStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SourceStage | ValidationError | GenericError

union StagesSourcePartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "SourceStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_source_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "SourceStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = SourceStage | ValidationError | GenericError

union StagesSourceDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_source_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union StagesUserDeleteCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "UserDeleteStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_delete_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserDeleteStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserDeleteStage | ValidationError | GenericError

union StagesUserDeleteUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserDeleteStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_delete_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserDeleteStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserDeleteStage | ValidationError | GenericError

union StagesUserDeletePartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserDeleteStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_delete_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserDeleteStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserDeleteStage | ValidationError | GenericError

union StagesUserDeleteDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_delete_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union StagesUserLoginCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "UserLoginStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_login_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserLoginStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserLoginStage | ValidationError | GenericError

union StagesUserLoginUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserLoginStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_login_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserLoginStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserLoginStage | ValidationError | GenericError

union StagesUserLoginPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserLoginStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_login_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserLoginStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserLoginStage | ValidationError | GenericError

union StagesUserLoginDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_login_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union StagesUserLogoutCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "UserLogoutStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_logout_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserLogoutStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserLogoutStage | ValidationError | GenericError

union StagesUserLogoutUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserLogoutStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_logout_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserLogoutStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserLogoutStage | ValidationError | GenericError

union StagesUserLogoutPartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserLogoutStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_logout_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserLogoutStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserLogoutStage | ValidationError | GenericError

union StagesUserLogoutDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_logout_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union StagesUserWriteCreateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "201", typeName: "UserWriteStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_write_create_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserWriteStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserWriteStage | ValidationError | GenericError

union StagesUserWriteUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserWriteStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_write_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserWriteStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserWriteStage | ValidationError | GenericError

union StagesUserWritePartialUpdateResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "200", typeName: "UserWriteStage") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_write_partial_update_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "UserWriteStage") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = UserWriteStage | ValidationError | GenericError

union StagesUserWriteDestroyResponse @statusCodeTypeName(subgraph: "Authentik", statusCode: "204", typeName: "Void_container") @statusCodeTypeName(subgraph: "Authentik", statusCode: "400", typeName: "ValidationError") @statusCodeTypeName(subgraph: "Authentik", statusCode: "403", typeName: "GenericError") @source(name: "stages_user_write_destroy_response", subgraph: "Authentik") @join__type(graph: AUTHENTIK) @join__unionMember(graph: AUTHENTIK, member: "VoidContainer") @join__unionMember(graph: AUTHENTIK, member: "ValidationError") @join__unionMember(graph: AUTHENTIK, member: "GenericError") = VoidContainer | ValidationError | GenericError

union ChurrosEventBookingsCsvResult @source(name: "EventBookingsCsvResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosEventBookingsCsvSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosEventBookingsCsvSuccess | ChurrosZodError

"""
Manager d'évènemet, qu'il soit sur l'évènement directement ou hérité d'une appartenance à un groupe
"""
union ChurrosEventManagerMaybeInherited @source(name: "EventManagerMaybeInherited", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosEventManager") @join__unionMember(graph: CHURROS, member: "ChurrosInheritedEventManager") = ChurrosEventManager | ChurrosInheritedEventManager

union ChurrosHasLinks @source(name: "HasLinks", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosArticle") @join__unionMember(graph: CHURROS, member: "ChurrosEvent") @join__unionMember(graph: CHURROS, member: "ChurrosGroup") @join__unionMember(graph: CHURROS, member: "ChurrosTicket") @join__unionMember(graph: CHURROS, member: "ChurrosUser") = ChurrosArticle | ChurrosEvent | ChurrosGroup | ChurrosTicket | ChurrosUser

union ChurrosMutationAcceptRegistrationResult @source(name: "MutationAcceptRegistrationResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationAcceptRegistrationSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationAcceptRegistrationSuccess | ChurrosZodError

union ChurrosMutationAddFileToPageResult @source(name: "MutationAddFileToPageResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationAddFileToPageSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationAddFileToPageSuccess | ChurrosZodError

union ChurrosMutationAddGroupMemberResult @source(name: "MutationAddGroupMemberResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationAddGroupMemberSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationAddGroupMemberSuccess | ChurrosZodError

union ChurrosMutationAddGroupMemberV2Result @source(name: "MutationAddGroupMemberV2Result", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationAddGroupMemberV2Success") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationAddGroupMemberV2Success | ChurrosZodError

union ChurrosMutationAddLinksResult @source(name: "MutationAddLinksResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationAddLinksSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationAddLinksSuccess | ChurrosZodError

union ChurrosMutationAnswerFormSectionResult @source(name: "MutationAnswerFormSectionResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationAnswerFormSectionSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationAnswerFormSectionSuccess | ChurrosZodError

union ChurrosMutationAnswerGodparentRequestResult @source(name: "MutationAnswerGodparentRequestResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationAnswerGodparentRequestSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationAnswerGodparentRequestSuccess | ChurrosZodError

union ChurrosMutationBanFromEventResult @source(name: "MutationBanFromEventResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationBanFromEventSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationBanFromEventSuccess | ChurrosZodError

union ChurrosMutationBookEventResult @source(name: "MutationBookEventResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationBookEventSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationBookEventSuccess | ChurrosZodError

union ChurrosMutationCancelBookingResult @source(name: "MutationCancelBookingResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationCancelBookingSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationCancelBookingSuccess | ChurrosZodError

union ChurrosMutationCancelPendingContributionResult @source(name: "MutationCancelPendingContributionResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationCancelPendingContributionSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationCancelPendingContributionSuccess | ChurrosZodError

union ChurrosMutationChangeEventOrganizerResult @source(name: "MutationChangeEventOrganizerResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationChangeEventOrganizerSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationChangeEventOrganizerSuccess | ChurrosZodError

union ChurrosMutationChangePostOwnerResult @source(name: "MutationChangePostOwnerResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationChangePostOwnerSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationChangePostOwnerSuccess | ChurrosZodError

union ChurrosMutationCheckIfBookingIsPaidResult @source(name: "MutationCheckIfBookingIsPaidResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationCheckIfBookingIsPaidSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationCheckIfBookingIsPaidSuccess | ChurrosZodError

union ChurrosMutationContributeResult @source(name: "MutationContributeResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationContributeSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationContributeSuccess | ChurrosZodError

union ChurrosMutationCreateAppleWalletPassResult @source(name: "MutationCreateAppleWalletPassResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationCreateAppleWalletPassSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationCreateAppleWalletPassSuccess | ChurrosZodError

union ChurrosMutationCreateEventResult @source(name: "MutationCreateEventResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationCreateEventSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationCreateEventSuccess | ChurrosZodError

union ChurrosMutationCreateGoogleWalletPassResult @source(name: "MutationCreateGoogleWalletPassResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationCreateGoogleWalletPassSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationCreateGoogleWalletPassSuccess | ChurrosZodError

union ChurrosMutationCreateGroupAccessTokenResult @source(name: "MutationCreateGroupAccessTokenResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationCreateGroupAccessTokenSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationCreateGroupAccessTokenSuccess | ChurrosZodError

union ChurrosMutationCreateGroupResult @source(name: "MutationCreateGroupResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationCreateGroupSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationCreateGroupSuccess | ChurrosZodError

union ChurrosMutationCreatePasswordResetResult @source(name: "MutationCreatePasswordResetResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationCreatePasswordResetSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationCreatePasswordResetSuccess | ChurrosZodError

union ChurrosMutationCreatePostResult @source(name: "MutationCreatePostResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationCreatePostSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationCreatePostSuccess | ChurrosZodError

union ChurrosMutationCreateSpecialOfferCodesResult @source(name: "MutationCreateSpecialOfferCodesResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationCreateSpecialOfferCodesSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosSomeNotCreatedError") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationCreateSpecialOfferCodesSuccess | ChurrosSomeNotCreatedError | ChurrosZodError

union ChurrosMutationCreateTicketResult @source(name: "MutationCreateTicketResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationCreateTicketSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationCreateTicketSuccess | ChurrosZodError

union ChurrosMutationDeduplicateBookingsResult @source(name: "MutationDeduplicateBookingsResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationDeduplicateBookingsSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationDeduplicateBookingsSuccess | ChurrosZodError

union ChurrosMutationDeleteArticleResult @source(name: "MutationDeleteArticleResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationDeleteArticleSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationDeleteArticleSuccess | ChurrosZodError

union ChurrosMutationDeleteContributionResult @source(name: "MutationDeleteContributionResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationDeleteContributionSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationDeleteContributionSuccess | ChurrosZodError

union ChurrosMutationDeleteEventResult @source(name: "MutationDeleteEventResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationDeleteEventSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationDeleteEventSuccess | ChurrosZodError

union ChurrosMutationDeleteGodchildResult @source(name: "MutationDeleteGodchildResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationDeleteGodchildSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationDeleteGodchildSuccess | ChurrosZodError

union ChurrosMutationDeleteGodparentResult @source(name: "MutationDeleteGodparentResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationDeleteGodparentSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationDeleteGodparentSuccess | ChurrosZodError

union ChurrosMutationDeleteGroupMemberResult @source(name: "MutationDeleteGroupMemberResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationDeleteGroupMemberSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationDeleteGroupMemberSuccess | ChurrosZodError

union ChurrosMutationDeleteLinkResult @source(name: "MutationDeleteLinkResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationDeleteLinkSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationDeleteLinkSuccess | ChurrosZodError

union ChurrosMutationDeleteLydiaAccountResult @source(name: "MutationDeleteLydiaAccountResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationDeleteLydiaAccountSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationDeleteLydiaAccountSuccess | ChurrosZodError

union ChurrosMutationDeletePageResult @source(name: "MutationDeletePageResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationDeletePageSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationDeletePageSuccess | ChurrosZodError

union ChurrosMutationDeleteServiceResult @source(name: "MutationDeleteServiceResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationDeleteServiceSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationDeleteServiceSuccess | ChurrosZodError

union ChurrosMutationDeleteTicketGroupResult @source(name: "MutationDeleteTicketGroupResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationDeleteTicketGroupSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationDeleteTicketGroupSuccess | ChurrosZodError

union ChurrosMutationDeleteTicketResult @source(name: "MutationDeleteTicketResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationDeleteTicketSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationDeleteTicketSuccess | ChurrosZodError

union ChurrosMutationFinishPaypalRegistrationPaymentResult @source(name: "MutationFinishPaypalRegistrationPaymentResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationFinishPaypalRegistrationPaymentSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationFinishPaypalRegistrationPaymentSuccess | ChurrosZodError

union ChurrosMutationLoginResult @source(name: "MutationLoginResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosAwaitingValidationError") @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationLoginSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosAwaitingValidationError | ChurrosError | ChurrosMutationLoginSuccess | ChurrosZodError

union ChurrosMutationMailFormAnswersResult @source(name: "MutationMailFormAnswersResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationMailFormAnswersSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationMailFormAnswersSuccess | ChurrosZodError

union ChurrosMutationMarkBookingAsPaidResult @source(name: "MutationMarkBookingAsPaidResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationMarkBookingAsPaidSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationMarkBookingAsPaidSuccess | ChurrosZodError

union ChurrosMutationMarkContributionAsPaidResult @source(name: "MutationMarkContributionAsPaidResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationMarkContributionAsPaidSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationMarkContributionAsPaidSuccess | ChurrosZodError

union ChurrosMutationOpposeRegistrationResult @source(name: "MutationOpposeRegistrationResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationOpposeRegistrationSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationOpposeRegistrationSuccess | ChurrosZodError

union ChurrosMutationPayBookingResult @source(name: "MutationPayBookingResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationPayBookingSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationPayBookingSuccess | ChurrosZodError

union ChurrosMutationRegisterGoogleCredentialResult @source(name: "MutationRegisterGoogleCredentialResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationRegisterGoogleCredentialSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationRegisterGoogleCredentialSuccess | ChurrosZodError

union ChurrosMutationRemoveEventManagerResult @source(name: "MutationRemoveEventManagerResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationRemoveEventManagerSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationRemoveEventManagerSuccess | ChurrosZodError

union ChurrosMutationRemoveFileFromPageResult @source(name: "MutationRemoveFileFromPageResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationRemoveFileFromPageSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationRemoveFileFromPageSuccess | ChurrosZodError

union ChurrosMutationRequestEmailChangeResult @source(name: "MutationRequestEmailChangeResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationRequestEmailChangeSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationRequestEmailChangeSuccess | ChurrosZodError

union ChurrosMutationResetPasswordResult @source(name: "MutationResetPasswordResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationResetPasswordSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationResetPasswordSuccess | ChurrosZodError

union ChurrosMutationSaveLydiaPhoneNumberResult @source(name: "MutationSaveLydiaPhoneNumberResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationSaveLydiaPhoneNumberSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationSaveLydiaPhoneNumberSuccess | ChurrosZodError

union ChurrosMutationSelfJoinGroupResult @source(name: "MutationSelfJoinGroupResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationSelfJoinGroupSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationSelfJoinGroupSuccess | ChurrosZodError

union ChurrosMutationSetEventApplicableOffersResult @source(name: "MutationSetEventApplicableOffersResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationSetEventApplicableOffersSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationSetEventApplicableOffersSuccess | ChurrosZodError

union ChurrosMutationSetEventBeneficiaryResult @source(name: "MutationSetEventBeneficiaryResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationSetEventBeneficiarySuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationSetEventBeneficiarySuccess | ChurrosZodError

union ChurrosMutationSetEventCoOrganizersResult @source(name: "MutationSetEventCoOrganizersResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationSetEventCoOrganizersSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationSetEventCoOrganizersSuccess | ChurrosZodError

union ChurrosMutationSetEventDatesResult @source(name: "MutationSetEventDatesResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationSetEventDatesSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationSetEventDatesSuccess | ChurrosZodError

union ChurrosMutationSetEventVisibilityResult @source(name: "MutationSetEventVisibilityResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationSetEventVisibilitySuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationSetEventVisibilitySuccess | ChurrosZodError

union ChurrosMutationSetGroupJoinPolicyResult @source(name: "MutationSetGroupJoinPolicyResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationSetGroupJoinPolicySuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationSetGroupJoinPolicySuccess | ChurrosZodError

union ChurrosMutationSetGroupStudentAssociationResult @source(name: "MutationSetGroupStudentAssociationResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationSetGroupStudentAssociationSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationSetGroupStudentAssociationSuccess | ChurrosZodError

union ChurrosMutationSetGroupTypeResult @source(name: "MutationSetGroupTypeResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationSetGroupTypeSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationSetGroupTypeSuccess | ChurrosZodError

union ChurrosMutationSetParentGroupResult @source(name: "MutationSetParentGroupResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationSetParentGroupSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationSetParentGroupSuccess | ChurrosZodError

union ChurrosMutationSetPictureResult @source(name: "MutationSetPictureResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationSetPictureSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationSetPictureSuccess | ChurrosZodError

union ChurrosMutationSetTicketGroupResult @source(name: "MutationSetTicketGroupResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationSetTicketGroupSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationSetTicketGroupSuccess | ChurrosZodError

union ChurrosMutationStartSignupResult @source(name: "MutationStartSignupResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationStartSignupSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationStartSignupSuccess | ChurrosZodError

union ChurrosMutationSubscribeToNotificationsResult @source(name: "MutationSubscribeToNotificationsResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationSubscribeToNotificationsSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationSubscribeToNotificationsSuccess | ChurrosZodError

union ChurrosMutationUnbanFromEventResult @source(name: "MutationUnbanFromEventResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUnbanFromEventSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUnbanFromEventSuccess | ChurrosZodError

union ChurrosMutationUnlinkEventFromPostResult @source(name: "MutationUnlinkEventFromPostResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUnlinkEventFromPostSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUnlinkEventFromPostSuccess | ChurrosZodError

union ChurrosMutationUnsubscribeFromNotificationsResult @source(name: "MutationUnsubscribeFromNotificationsResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUnsubscribeFromNotificationsSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUnsubscribeFromNotificationsSuccess | ChurrosZodError

union ChurrosMutationUpdateEventRecurrenceResult @source(name: "MutationUpdateEventRecurrenceResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpdateEventRecurrenceSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpdateEventRecurrenceSuccess | ChurrosZodError

union ChurrosMutationUpdateEventResult @source(name: "MutationUpdateEventResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpdateEventSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpdateEventSuccess | ChurrosZodError

union ChurrosMutationUpdateGroupMemberResult @source(name: "MutationUpdateGroupMemberResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpdateGroupMemberSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpdateGroupMemberSuccess | ChurrosZodError

union ChurrosMutationUpdateGroupProfileResult @source(name: "MutationUpdateGroupProfileResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpdateGroupProfileSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpdateGroupProfileSuccess | ChurrosZodError

union ChurrosMutationUpdateLinkResult @source(name: "MutationUpdateLinkResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpdateLinkSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpdateLinkSuccess | ChurrosZodError

union ChurrosMutationUpdateTicketConstraintsResult @source(name: "MutationUpdateTicketConstraintsResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpdateTicketConstraintsSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpdateTicketConstraintsSuccess | ChurrosZodError

union ChurrosMutationUpdateTicketResult @source(name: "MutationUpdateTicketResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpdateTicketSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpdateTicketSuccess | ChurrosZodError

union ChurrosMutationUpdateUserCandidateResult @source(name: "MutationUpdateUserCandidateResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpdateUserCandidateSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpdateUserCandidateSuccess | ChurrosZodError

union ChurrosMutationUpdateUserCurriculumResult @source(name: "MutationUpdateUserCurriculumResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpdateUserCurriculumSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpdateUserCurriculumSuccess | ChurrosZodError

union ChurrosMutationUpdateUserPermissionsResult @source(name: "MutationUpdateUserPermissionsResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpdateUserPermissionsSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpdateUserPermissionsSuccess | ChurrosZodError

union ChurrosMutationUpdateUserProfileResult @source(name: "MutationUpdateUserProfileResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpdateUserProfileSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpdateUserProfileSuccess | ChurrosZodError

union ChurrosMutationUpdateUserResult @source(name: "MutationUpdateUserResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpdateUserSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpdateUserSuccess | ChurrosZodError

union ChurrosMutationUpsertAnnouncementResult @source(name: "MutationUpsertAnnouncementResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpsertAnnouncementSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpsertAnnouncementSuccess | ChurrosZodError

union ChurrosMutationUpsertArticleResult @source(name: "MutationUpsertArticleResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpsertArticleSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpsertArticleSuccess | ChurrosZodError

union ChurrosMutationUpsertArticleV2Result @source(name: "MutationUpsertArticleV2Result", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpsertArticleV2Success") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpsertArticleV2Success | ChurrosZodError

union ChurrosMutationUpsertDocumentResult @source(name: "MutationUpsertDocumentResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpsertDocumentSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpsertDocumentSuccess | ChurrosZodError

union ChurrosMutationUpsertEventManagerResult @source(name: "MutationUpsertEventManagerResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpsertEventManagerSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpsertEventManagerSuccess | ChurrosZodError

union ChurrosMutationUpsertGodparentRequestResult @source(name: "MutationUpsertGodparentRequestResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpsertGodparentRequestSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpsertGodparentRequestSuccess | ChurrosZodError

union ChurrosMutationUpsertGroupResult @source(name: "MutationUpsertGroupResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpsertGroupSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpsertGroupSuccess | ChurrosZodError

union ChurrosMutationUpsertLydiaAccountResult @source(name: "MutationUpsertLydiaAccountResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpsertLydiaAccountSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpsertLydiaAccountSuccess | ChurrosZodError

union ChurrosMutationUpsertPageResult @source(name: "MutationUpsertPageResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpsertPageSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpsertPageSuccess | ChurrosZodError

union ChurrosMutationUpsertRegistrationResult @source(name: "MutationUpsertRegistrationResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpsertRegistrationSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpsertRegistrationSuccess | ChurrosZodError

union ChurrosMutationUpsertServiceResult @source(name: "MutationUpsertServiceResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpsertServiceSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpsertServiceSuccess | ChurrosZodError

union ChurrosMutationUpsertServiceV2Result @source(name: "MutationUpsertServiceV2Result", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpsertServiceV2Success") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpsertServiceV2Success | ChurrosZodError

union ChurrosMutationUpsertThemeResult @source(name: "MutationUpsertThemeResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpsertThemeSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpsertThemeSuccess | ChurrosZodError

union ChurrosMutationUpsertTicketGroupResult @source(name: "MutationUpsertTicketGroupResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUpsertTicketGroupSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUpsertTicketGroupSuccess | ChurrosZodError

union ChurrosMutationUsePasswordResetResult @source(name: "MutationUsePasswordResetResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationUsePasswordResetSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationUsePasswordResetSuccess | ChurrosZodError

union ChurrosMutationValidateEmailResult @source(name: "MutationValidateEmailResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationValidateEmailSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationValidateEmailSuccess | ChurrosZodError

union ChurrosMutationVerifyBookingResult @source(name: "MutationVerifyBookingResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosMutationVerifyBookingSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosMutationVerifyBookingSuccess | ChurrosZodError

"""
Resource possédant un '@' (uid) et pouvant raisonnablement posséder une page de profil, avec nom, photo, bio/description...
"""
union ChurrosProfile @source(name: "Profile", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosGroup") @join__unionMember(graph: CHURROS, member: "ChurrosMajor") @join__unionMember(graph: CHURROS, member: "ChurrosSchool") @join__unionMember(graph: CHURROS, member: "ChurrosStudentAssociation") @join__unionMember(graph: CHURROS, member: "ChurrosUser") = ChurrosGroup | ChurrosMajor | ChurrosSchool | ChurrosStudentAssociation | ChurrosUser

union ChurrosQueryCodeContributorsResult @source(name: "QueryCodeContributorsResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosQueryCodeContributorsSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosQueryCodeContributorsSuccess | ChurrosZodError

union ChurrosQueryCombinedChangelogResult @source(name: "QueryCombinedChangelogResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosQueryCombinedChangelogSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosQueryCombinedChangelogSuccess | ChurrosZodError

union ChurrosQueryGroupMembersCsvResult @source(name: "QueryGroupMembersCsvResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosQueryGroupMembersCsvSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosQueryGroupMembersCsvSuccess | ChurrosZodError

union ChurrosQueryRegistrationResult @source(name: "QueryRegistrationResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosQueryRegistrationSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosQueryRegistrationSuccess | ChurrosZodError

union ChurrosQueryUpcomingChangelogResult @source(name: "QueryUpcomingChangelogResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosQueryUpcomingChangelogSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosQueryUpcomingChangelogSuccess | ChurrosZodError

union ChurrosSearchResult @source(name: "SearchResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosArticleSearchResult") @join__unionMember(graph: CHURROS, member: "ChurrosDocumentSearchResult") @join__unionMember(graph: CHURROS, member: "ChurrosEventSearchResult") @join__unionMember(graph: CHURROS, member: "ChurrosGroupSearchResult") @join__unionMember(graph: CHURROS, member: "ChurrosUserSearchResult") = ChurrosArticleSearchResult | ChurrosDocumentSearchResult | ChurrosEventSearchResult | ChurrosGroupSearchResult | ChurrosUserSearchResult

"""Responsable d'un service"""
union ChurrosServiceOwner @source(name: "ServiceOwner", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosGroup") @join__unionMember(graph: CHURROS, member: "ChurrosSchool") @join__unionMember(graph: CHURROS, member: "ChurrosStudentAssociation") = ChurrosGroup | ChurrosSchool | ChurrosStudentAssociation

union ChurrosSubscriptionRegistrationResult @source(name: "SubscriptionRegistrationResult", subgraph: "Churros") @join__type(graph: CHURROS) @join__unionMember(graph: CHURROS, member: "ChurrosError") @join__unionMember(graph: CHURROS, member: "ChurrosSubscriptionRegistrationSuccess") @join__unionMember(graph: CHURROS, member: "ChurrosZodError") = ChurrosError | ChurrosSubscriptionRegistrationSuccess | ChurrosZodError

enum QueryInputCoreTokensListIntent @source(name: "queryInput_core_tokens_list_intent", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  API @source(name: "api", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  APP_PASSWORD @source(name: "app_password", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  RECOVERY @source(name: "recovery", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  VERIFICATION @source(name: "verification", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputCoreUsersListTypeItems @source(name: "queryInput_core_users_list_type_items", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  EXTERNAL @source(name: "external", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  INTERNAL @source(name: "internal", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  INTERNAL_SERVICE_ACCOUNT @source(name: "internal_service_account", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SERVICE_ACCOUNT @source(name: "service_account", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputEventsNotificationsListSeverity @source(name: "queryInput_events_notifications_list_severity", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  ALERT @source(name: "alert", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  NOTICE @source(name: "notice", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  WARNING @source(name: "warning", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

"""Controls which severity level the created notifications will have."""
enum QueryInputEventsRulesListSeverity @source(name: "queryInput_events_rules_list_severity", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  ALERT @source(name: "alert", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  NOTICE @source(name: "notice", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  WARNING @source(name: "warning", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputEventsSystemTasksListStatus @source(name: "queryInput_events_system_tasks_list_status", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  ERROR @source(name: "error", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SUCCESSFUL @source(name: "successful", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  UNKNOWN @source(name: "unknown", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  WARNING @source(name: "warning", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputEventsTransportsListMode @source(name: "queryInput_events_transports_list_mode", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  EMAIL @source(name: "email", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  LOCAL @source(name: "local", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  WEBHOOK @source(name: "webhook", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  WEBHOOK_SLACK @source(name: "webhook_slack", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

"""
Configure how the flow executor should handle an invalid response to a challenge. RETRY returns the error message and a similar challenge to the executor. RESTART restarts the flow from the beginning, and RESTART_WITH_CONTEXT restarts the flow while keeping the current context.
"""
enum QueryInputFlowsBindingsListInvalidResponseAction @source(name: "queryInput_flows_bindings_list_invalid_response_action", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  RESTART @source(name: "restart", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  RESTART_WITH_CONTEXT @source(name: "restart_with_context", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  RETRY @source(name: "retry", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputFlowsBindingsListPolicyEngineMode @source(name: "queryInput_flows_bindings_list_policy_engine_mode", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  ALL @source(name: "all", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  ANY @source(name: "any", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

"""Configure what should happen when a flow denies access to a user."""
enum QueryInputFlowsInstancesListDeniedAction @source(name: "queryInput_flows_instances_list_denied_action", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  CONTINUE @source(name: "continue", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  MESSAGE @source(name: "message", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  MESSAGE_CONTINUE @source(name: "message_continue", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

"""
Decides what this Flow is used for. For example, the Authentication flow is redirect to when an un-authenticated user visits authentik.
"""
enum QueryInputFlowsInstancesListDesignation @source(name: "queryInput_flows_instances_list_designation", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  AUTHENTICATION @source(name: "authentication", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHORIZATION @source(name: "authorization", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  ENROLLMENT @source(name: "enrollment", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  INVALIDATION @source(name: "invalidation", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  RECOVERY @source(name: "recovery", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  STAGE_CONFIGURATION @source(name: "stage_configuration", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  UNENROLLMENT @source(name: "unenrollment", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

"""
Match created events with this action type. When left empty, all action types will be matched.
"""
enum QueryInputPoliciesEventMatcherListAction @source(name: "queryInput_policies_event_matcher_list_action", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  AUTHORIZE_APPLICATION @source(name: "authorize_application", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  CONFIGURATION_ERROR @source(name: "configuration_error", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  CUSTOM_ @source(name: "custom_", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  EMAIL_SENT @source(name: "email_sent", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  FLOW_EXECUTION @source(name: "flow_execution", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  IMPERSONATION_ENDED @source(name: "impersonation_ended", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  IMPERSONATION_STARTED @source(name: "impersonation_started", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  INVITATION_USED @source(name: "invitation_used", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  LOGIN @source(name: "login", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  LOGIN_FAILED @source(name: "login_failed", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  LOGOUT @source(name: "logout", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  MODEL_CREATED @source(name: "model_created", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  MODEL_DELETED @source(name: "model_deleted", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  MODEL_UPDATED @source(name: "model_updated", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  PASSWORD_SET @source(name: "password_set", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  POLICY_EXCEPTION @source(name: "policy_exception", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  POLICY_EXECUTION @source(name: "policy_execution", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  PROPERTY_MAPPING_EXCEPTION @source(name: "property_mapping_exception", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SECRET_ROTATE @source(name: "secret_rotate", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SECRET_VIEW @source(name: "secret_view", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SOURCE_LINKED @source(name: "source_linked", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SUSPICIOUS_REQUEST @source(name: "suspicious_request", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SYSTEM_EXCEPTION @source(name: "system_exception", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SYSTEM_TASK_EXCEPTION @source(name: "system_task_exception", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SYSTEM_TASK_EXECUTION @source(name: "system_task_execution", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  UPDATE_AVAILABLE @source(name: "update_available", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  USER_WRITE @source(name: "user_write", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

"""
Confidential clients are capable of maintaining the confidentiality of their credentials. Public clients are incapable
"""
enum QueryInputProvidersOauth2ListClientType @source(name: "queryInput_providers_oauth2_list_client_type", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  CONFIDENTIAL @source(name: "confidential", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  PUBLIC @source(name: "public", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

"""Configure how the issuer field of the ID Token should be filled."""
enum QueryInputProvidersOauth2ListIssuerMode @source(name: "queryInput_providers_oauth2_list_issuer_mode", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  GLOBAL @source(name: "global", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  PER_PROVIDER @source(name: "per_provider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

"""
Configure what data should be used as unique User Identifier. For most cases, the default should be fine.
"""
enum QueryInputProvidersOauth2ListSubMode @source(name: "queryInput_providers_oauth2_list_sub_mode", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  HASHED_USER_ID @source(name: "hashed_user_id", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  USER_EMAIL @source(name: "user_email", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  USER_ID @source(name: "user_id", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  USER_UPN @source(name: "user_upn", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  USER_USERNAME @source(name: "user_username", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  USER_UUID @source(name: "user_uuid", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputProvidersSamlListDigestAlgorithm @source(name: "queryInput_providers_saml_list_digest_algorithm", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  HTTP___WWW_W3_ORG_2000_09_XMLDSIG_POUND_SHA1 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2000/09/xmldsig#sha1\"") @source(name: "http___www_w3_org_2000_09_xmldsig_POUND_sha1", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLDSIG_MORE_POUND_SHA384 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmldsig-more#sha384\"") @source(name: "http___www_w3_org_2001_04_xmldsig_more_POUND_sha384", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLENC_POUND_SHA256 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmlenc#sha256\"") @source(name: "http___www_w3_org_2001_04_xmlenc_POUND_sha256", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLENC_POUND_SHA512 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmlenc#sha512\"") @source(name: "http___www_w3_org_2001_04_xmlenc_POUND_sha512", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputProvidersSamlListSignatureAlgorithm @source(name: "queryInput_providers_saml_list_signature_algorithm", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  HTTP___WWW_W3_ORG_2000_09_XMLDSIG_POUND_DSA_SHA1 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2000/09/xmldsig#dsa-sha1\"") @source(name: "http___www_w3_org_2000_09_xmldsig_POUND_dsa_sha1", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2000_09_XMLDSIG_POUND_RSA_SHA1 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2000/09/xmldsig#rsa-sha1\"") @source(name: "http___www_w3_org_2000_09_xmldsig_POUND_rsa_sha1", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLDSIG_MORE_POUND_ECDSA_SHA1 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1\"") @source(name: "http___www_w3_org_2001_04_xmldsig_more_POUND_ecdsa_sha1", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLDSIG_MORE_POUND_ECDSA_SHA256 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256\"") @source(name: "http___www_w3_org_2001_04_xmldsig_more_POUND_ecdsa_sha256", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLDSIG_MORE_POUND_ECDSA_SHA384 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384\"") @source(name: "http___www_w3_org_2001_04_xmldsig_more_POUND_ecdsa_sha384", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLDSIG_MORE_POUND_ECDSA_SHA512 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512\"") @source(name: "http___www_w3_org_2001_04_xmldsig_more_POUND_ecdsa_sha512", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLDSIG_MORE_POUND_RSA_SHA256 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\"") @source(name: "http___www_w3_org_2001_04_xmldsig_more_POUND_rsa_sha256", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLDSIG_MORE_POUND_RSA_SHA384 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha384\"") @source(name: "http___www_w3_org_2001_04_xmldsig_more_POUND_rsa_sha384", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLDSIG_MORE_POUND_RSA_SHA512 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha512\"") @source(name: "http___www_w3_org_2001_04_xmldsig_more_POUND_rsa_sha512", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

"""
This determines how authentik sends the response back to the Service Provider.
"""
enum QueryInputProvidersSamlListSpBinding @source(name: "queryInput_providers_saml_list_sp_binding", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  POST @source(name: "post", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  REDIRECT @source(name: "redirect", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

"""Optionally force the metadata to only include one binding."""
enum QueryInputProvidersSamlMetadataRetrieveForceBinding @source(name: "queryInput_providers_saml_metadata_retrieve_force_binding", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  URN_OASIS_NAMES_TC_SAML_2_0_BINDINGS_HTTP_POST @enum(subgraph: "Authentik", value: "\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"") @source(name: "urn_oasis_names_tc_SAML_2_0_bindings_HTTP_POST", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  URN_OASIS_NAMES_TC_SAML_2_0_BINDINGS_HTTP_REDIRECT @enum(subgraph: "Authentik", value: "\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"") @source(name: "urn_oasis_names_tc_SAML_2_0_bindings_HTTP_Redirect", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputRbacPermissionsAssignedByRolesListModel @source(name: "queryInput_rbac_permissions_assigned_by_roles_list_model", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  AUTHENTIK_BLUEPRINTS_BLUEPRINTINSTANCE @enum(subgraph: "Authentik", value: "\"authentik_blueprints.blueprintinstance\"") @source(name: "authentik_blueprints_blueprintinstance", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_BRANDS_BRAND @enum(subgraph: "Authentik", value: "\"authentik_brands.brand\"") @source(name: "authentik_brands_brand", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_CORE_APPLICATION @enum(subgraph: "Authentik", value: "\"authentik_core.application\"") @source(name: "authentik_core_application", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_CORE_GROUP @enum(subgraph: "Authentik", value: "\"authentik_core.group\"") @source(name: "authentik_core_group", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_CORE_TOKEN @enum(subgraph: "Authentik", value: "\"authentik_core.token\"") @source(name: "authentik_core_token", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_CORE_USER @enum(subgraph: "Authentik", value: "\"authentik_core.user\"") @source(name: "authentik_core_user", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_CRYPTO_CERTIFICATEKEYPAIR @enum(subgraph: "Authentik", value: "\"authentik_crypto.certificatekeypair\"") @source(name: "authentik_crypto_certificatekeypair", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_ENTERPRISE_LICENSE @enum(subgraph: "Authentik", value: "\"authentik_enterprise.license\"") @source(name: "authentik_enterprise_license", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_EVENTS_EVENT @enum(subgraph: "Authentik", value: "\"authentik_events.event\"") @source(name: "authentik_events_event", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_EVENTS_NOTIFICATION @enum(subgraph: "Authentik", value: "\"authentik_events.notification\"") @source(name: "authentik_events_notification", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_EVENTS_NOTIFICATIONRULE @enum(subgraph: "Authentik", value: "\"authentik_events.notificationrule\"") @source(name: "authentik_events_notificationrule", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_EVENTS_NOTIFICATIONTRANSPORT @enum(subgraph: "Authentik", value: "\"authentik_events.notificationtransport\"") @source(name: "authentik_events_notificationtransport", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_EVENTS_NOTIFICATIONWEBHOOKMAPPING @enum(subgraph: "Authentik", value: "\"authentik_events.notificationwebhookmapping\"") @source(name: "authentik_events_notificationwebhookmapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_FLOWS_FLOW @enum(subgraph: "Authentik", value: "\"authentik_flows.flow\"") @source(name: "authentik_flows_flow", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_FLOWS_FLOWSTAGEBINDING @enum(subgraph: "Authentik", value: "\"authentik_flows.flowstagebinding\"") @source(name: "authentik_flows_flowstagebinding", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_OUTPOSTS_DOCKERSERVICECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_outposts.dockerserviceconnection\"") @source(name: "authentik_outposts_dockerserviceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_OUTPOSTS_KUBERNETESSERVICECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_outposts.kubernetesserviceconnection\"") @source(name: "authentik_outposts_kubernetesserviceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_OUTPOSTS_OUTPOST @enum(subgraph: "Authentik", value: "\"authentik_outposts.outpost\"") @source(name: "authentik_outposts_outpost", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_POLICYBINDING @enum(subgraph: "Authentik", value: "\"authentik_policies.policybinding\"") @source(name: "authentik_policies_policybinding", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_DUMMY_DUMMYPOLICY @enum(subgraph: "Authentik", value: "\"authentik_policies_dummy.dummypolicy\"") @source(name: "authentik_policies_dummy_dummypolicy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_EVENT_MATCHER_EVENTMATCHERPOLICY @enum(subgraph: "Authentik", value: "\"authentik_policies_event_matcher.eventmatcherpolicy\"") @source(name: "authentik_policies_event_matcher_eventmatcherpolicy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_EXPIRY_PASSWORDEXPIRYPOLICY @enum(subgraph: "Authentik", value: "\"authentik_policies_expiry.passwordexpirypolicy\"") @source(name: "authentik_policies_expiry_passwordexpirypolicy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_EXPRESSION_EXPRESSIONPOLICY @enum(subgraph: "Authentik", value: "\"authentik_policies_expression.expressionpolicy\"") @source(name: "authentik_policies_expression_expressionpolicy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_GEOIP_GEOIPPOLICY @enum(subgraph: "Authentik", value: "\"authentik_policies_geoip.geoippolicy\"") @source(name: "authentik_policies_geoip_geoippolicy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_PASSWORD_PASSWORDPOLICY @enum(subgraph: "Authentik", value: "\"authentik_policies_password.passwordpolicy\"") @source(name: "authentik_policies_password_passwordpolicy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_REPUTATION_REPUTATIONPOLICY @enum(subgraph: "Authentik", value: "\"authentik_policies_reputation.reputationpolicy\"") @source(name: "authentik_policies_reputation_reputationpolicy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_GOOGLE_WORKSPACE_GOOGLEWORKSPACEPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_google_workspace.googleworkspaceprovider\"") @source(name: "authentik_providers_google_workspace_googleworkspaceprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_GOOGLE_WORKSPACE_GOOGLEWORKSPACEPROVIDERMAPPING @enum(subgraph: "Authentik", value: "\"authentik_providers_google_workspace.googleworkspaceprovidermapping\"") @source(name: "authentik_providers_google_workspace_googleworkspaceprovidermapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_LDAP_LDAPPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_ldap.ldapprovider\"") @source(name: "authentik_providers_ldap_ldapprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_MICROSOFT_ENTRA_MICROSOFTENTRAPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_microsoft_entra.microsoftentraprovider\"") @source(name: "authentik_providers_microsoft_entra_microsoftentraprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_MICROSOFT_ENTRA_MICROSOFTENTRAPROVIDERMAPPING @enum(subgraph: "Authentik", value: "\"authentik_providers_microsoft_entra.microsoftentraprovidermapping\"") @source(name: "authentik_providers_microsoft_entra_microsoftentraprovidermapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_OAUTH2_OAUTH2PROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_oauth2.oauth2provider\"") @source(name: "authentik_providers_oauth2_oauth2provider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_OAUTH2_SCOPEMAPPING @enum(subgraph: "Authentik", value: "\"authentik_providers_oauth2.scopemapping\"") @source(name: "authentik_providers_oauth2_scopemapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_PROXY_PROXYPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_proxy.proxyprovider\"") @source(name: "authentik_providers_proxy_proxyprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_RAC_ENDPOINT @enum(subgraph: "Authentik", value: "\"authentik_providers_rac.endpoint\"") @source(name: "authentik_providers_rac_endpoint", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_RAC_RACPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_providers_rac.racpropertymapping\"") @source(name: "authentik_providers_rac_racpropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_RAC_RACPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_rac.racprovider\"") @source(name: "authentik_providers_rac_racprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_RADIUS_RADIUSPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_radius.radiusprovider\"") @source(name: "authentik_providers_radius_radiusprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_RADIUS_RADIUSPROVIDERPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_providers_radius.radiusproviderpropertymapping\"") @source(name: "authentik_providers_radius_radiusproviderpropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_SAML_SAMLPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_providers_saml.samlpropertymapping\"") @source(name: "authentik_providers_saml_samlpropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_SAML_SAMLPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_saml.samlprovider\"") @source(name: "authentik_providers_saml_samlprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_SCIM_SCIMMAPPING @enum(subgraph: "Authentik", value: "\"authentik_providers_scim.scimmapping\"") @source(name: "authentik_providers_scim_scimmapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_SCIM_SCIMPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_scim.scimprovider\"") @source(name: "authentik_providers_scim_scimprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_RBAC_ROLE @enum(subgraph: "Authentik", value: "\"authentik_rbac.role\"") @source(name: "authentik_rbac_role", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_KERBEROS_GROUPKERBEROSSOURCECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_sources_kerberos.groupkerberossourceconnection\"") @source(name: "authentik_sources_kerberos_groupkerberossourceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_KERBEROS_KERBEROSSOURCE @enum(subgraph: "Authentik", value: "\"authentik_sources_kerberos.kerberossource\"") @source(name: "authentik_sources_kerberos_kerberossource", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_KERBEROS_KERBEROSSOURCEPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_sources_kerberos.kerberossourcepropertymapping\"") @source(name: "authentik_sources_kerberos_kerberossourcepropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_KERBEROS_USERKERBEROSSOURCECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_sources_kerberos.userkerberossourceconnection\"") @source(name: "authentik_sources_kerberos_userkerberossourceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_LDAP_LDAPSOURCE @enum(subgraph: "Authentik", value: "\"authentik_sources_ldap.ldapsource\"") @source(name: "authentik_sources_ldap_ldapsource", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_LDAP_LDAPSOURCEPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_sources_ldap.ldapsourcepropertymapping\"") @source(name: "authentik_sources_ldap_ldapsourcepropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_OAUTH_GROUPOAUTHSOURCECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_sources_oauth.groupoauthsourceconnection\"") @source(name: "authentik_sources_oauth_groupoauthsourceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_OAUTH_OAUTHSOURCE @enum(subgraph: "Authentik", value: "\"authentik_sources_oauth.oauthsource\"") @source(name: "authentik_sources_oauth_oauthsource", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_OAUTH_OAUTHSOURCEPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_sources_oauth.oauthsourcepropertymapping\"") @source(name: "authentik_sources_oauth_oauthsourcepropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_OAUTH_USEROAUTHSOURCECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_sources_oauth.useroauthsourceconnection\"") @source(name: "authentik_sources_oauth_useroauthsourceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_PLEX_GROUPPLEXSOURCECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_sources_plex.groupplexsourceconnection\"") @source(name: "authentik_sources_plex_groupplexsourceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_PLEX_PLEXSOURCE @enum(subgraph: "Authentik", value: "\"authentik_sources_plex.plexsource\"") @source(name: "authentik_sources_plex_plexsource", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_PLEX_PLEXSOURCEPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_sources_plex.plexsourcepropertymapping\"") @source(name: "authentik_sources_plex_plexsourcepropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_PLEX_USERPLEXSOURCECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_sources_plex.userplexsourceconnection\"") @source(name: "authentik_sources_plex_userplexsourceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_SAML_GROUPSAMLSOURCECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_sources_saml.groupsamlsourceconnection\"") @source(name: "authentik_sources_saml_groupsamlsourceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_SAML_SAMLSOURCE @enum(subgraph: "Authentik", value: "\"authentik_sources_saml.samlsource\"") @source(name: "authentik_sources_saml_samlsource", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_SAML_SAMLSOURCEPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_sources_saml.samlsourcepropertymapping\"") @source(name: "authentik_sources_saml_samlsourcepropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_SAML_USERSAMLSOURCECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_sources_saml.usersamlsourceconnection\"") @source(name: "authentik_sources_saml_usersamlsourceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_SCIM_SCIMSOURCE @enum(subgraph: "Authentik", value: "\"authentik_sources_scim.scimsource\"") @source(name: "authentik_sources_scim_scimsource", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_SCIM_SCIMSOURCEPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_sources_scim.scimsourcepropertymapping\"") @source(name: "authentik_sources_scim_scimsourcepropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_DUO_AUTHENTICATORDUOSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_duo.authenticatorduostage\"") @source(name: "authentik_stages_authenticator_duo_authenticatorduostage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_DUO_DUODEVICE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_duo.duodevice\"") @source(name: "authentik_stages_authenticator_duo_duodevice", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_ENDPOINT_GDTC_AUTHENTICATORENDPOINTGDTCSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_endpoint_gdtc.authenticatorendpointgdtcstage\"") @source(name: "authentik_stages_authenticator_endpoint_gdtc_authenticatorendpointgdtcstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_SMS_AUTHENTICATORSMSSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_sms.authenticatorsmsstage\"") @source(name: "authentik_stages_authenticator_sms_authenticatorsmsstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_SMS_SMSDEVICE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_sms.smsdevice\"") @source(name: "authentik_stages_authenticator_sms_smsdevice", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_STATIC_AUTHENTICATORSTATICSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_static.authenticatorstaticstage\"") @source(name: "authentik_stages_authenticator_static_authenticatorstaticstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_STATIC_STATICDEVICE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_static.staticdevice\"") @source(name: "authentik_stages_authenticator_static_staticdevice", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_TOTP_AUTHENTICATORTOTPSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_totp.authenticatortotpstage\"") @source(name: "authentik_stages_authenticator_totp_authenticatortotpstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_TOTP_TOTPDEVICE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_totp.totpdevice\"") @source(name: "authentik_stages_authenticator_totp_totpdevice", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_VALIDATE_AUTHENTICATORVALIDATESTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_validate.authenticatorvalidatestage\"") @source(name: "authentik_stages_authenticator_validate_authenticatorvalidatestage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_WEBAUTHN_AUTHENTICATORWEBAUTHNSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_webauthn.authenticatorwebauthnstage\"") @source(name: "authentik_stages_authenticator_webauthn_authenticatorwebauthnstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_WEBAUTHN_WEBAUTHNDEVICE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_webauthn.webauthndevice\"") @source(name: "authentik_stages_authenticator_webauthn_webauthndevice", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_CAPTCHA_CAPTCHASTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_captcha.captchastage\"") @source(name: "authentik_stages_captcha_captchastage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_CONSENT_CONSENTSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_consent.consentstage\"") @source(name: "authentik_stages_consent_consentstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_CONSENT_USERCONSENT @enum(subgraph: "Authentik", value: "\"authentik_stages_consent.userconsent\"") @source(name: "authentik_stages_consent_userconsent", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_DENY_DENYSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_deny.denystage\"") @source(name: "authentik_stages_deny_denystage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_DUMMY_DUMMYSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_dummy.dummystage\"") @source(name: "authentik_stages_dummy_dummystage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_EMAIL_EMAILSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_email.emailstage\"") @source(name: "authentik_stages_email_emailstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_IDENTIFICATION_IDENTIFICATIONSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_identification.identificationstage\"") @source(name: "authentik_stages_identification_identificationstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_INVITATION_INVITATION @enum(subgraph: "Authentik", value: "\"authentik_stages_invitation.invitation\"") @source(name: "authentik_stages_invitation_invitation", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_INVITATION_INVITATIONSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_invitation.invitationstage\"") @source(name: "authentik_stages_invitation_invitationstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_PASSWORD_PASSWORDSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_password.passwordstage\"") @source(name: "authentik_stages_password_passwordstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_PROMPT_PROMPT @enum(subgraph: "Authentik", value: "\"authentik_stages_prompt.prompt\"") @source(name: "authentik_stages_prompt_prompt", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_PROMPT_PROMPTSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_prompt.promptstage\"") @source(name: "authentik_stages_prompt_promptstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_SOURCE_SOURCESTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_source.sourcestage\"") @source(name: "authentik_stages_source_sourcestage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_USER_DELETE_USERDELETESTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_user_delete.userdeletestage\"") @source(name: "authentik_stages_user_delete_userdeletestage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_USER_LOGIN_USERLOGINSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_user_login.userloginstage\"") @source(name: "authentik_stages_user_login_userloginstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_USER_LOGOUT_USERLOGOUTSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_user_logout.userlogoutstage\"") @source(name: "authentik_stages_user_logout_userlogoutstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_USER_WRITE_USERWRITESTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_user_write.userwritestage\"") @source(name: "authentik_stages_user_write_userwritestage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_TENANTS_DOMAIN @enum(subgraph: "Authentik", value: "\"authentik_tenants.domain\"") @source(name: "authentik_tenants_domain", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputRbacPermissionsAssignedByUsersListModel @source(name: "queryInput_rbac_permissions_assigned_by_users_list_model", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  AUTHENTIK_BLUEPRINTS_BLUEPRINTINSTANCE @enum(subgraph: "Authentik", value: "\"authentik_blueprints.blueprintinstance\"") @source(name: "authentik_blueprints_blueprintinstance", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_BRANDS_BRAND @enum(subgraph: "Authentik", value: "\"authentik_brands.brand\"") @source(name: "authentik_brands_brand", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_CORE_APPLICATION @enum(subgraph: "Authentik", value: "\"authentik_core.application\"") @source(name: "authentik_core_application", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_CORE_GROUP @enum(subgraph: "Authentik", value: "\"authentik_core.group\"") @source(name: "authentik_core_group", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_CORE_TOKEN @enum(subgraph: "Authentik", value: "\"authentik_core.token\"") @source(name: "authentik_core_token", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_CORE_USER @enum(subgraph: "Authentik", value: "\"authentik_core.user\"") @source(name: "authentik_core_user", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_CRYPTO_CERTIFICATEKEYPAIR @enum(subgraph: "Authentik", value: "\"authentik_crypto.certificatekeypair\"") @source(name: "authentik_crypto_certificatekeypair", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_ENTERPRISE_LICENSE @enum(subgraph: "Authentik", value: "\"authentik_enterprise.license\"") @source(name: "authentik_enterprise_license", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_EVENTS_EVENT @enum(subgraph: "Authentik", value: "\"authentik_events.event\"") @source(name: "authentik_events_event", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_EVENTS_NOTIFICATION @enum(subgraph: "Authentik", value: "\"authentik_events.notification\"") @source(name: "authentik_events_notification", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_EVENTS_NOTIFICATIONRULE @enum(subgraph: "Authentik", value: "\"authentik_events.notificationrule\"") @source(name: "authentik_events_notificationrule", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_EVENTS_NOTIFICATIONTRANSPORT @enum(subgraph: "Authentik", value: "\"authentik_events.notificationtransport\"") @source(name: "authentik_events_notificationtransport", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_EVENTS_NOTIFICATIONWEBHOOKMAPPING @enum(subgraph: "Authentik", value: "\"authentik_events.notificationwebhookmapping\"") @source(name: "authentik_events_notificationwebhookmapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_FLOWS_FLOW @enum(subgraph: "Authentik", value: "\"authentik_flows.flow\"") @source(name: "authentik_flows_flow", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_FLOWS_FLOWSTAGEBINDING @enum(subgraph: "Authentik", value: "\"authentik_flows.flowstagebinding\"") @source(name: "authentik_flows_flowstagebinding", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_OUTPOSTS_DOCKERSERVICECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_outposts.dockerserviceconnection\"") @source(name: "authentik_outposts_dockerserviceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_OUTPOSTS_KUBERNETESSERVICECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_outposts.kubernetesserviceconnection\"") @source(name: "authentik_outposts_kubernetesserviceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_OUTPOSTS_OUTPOST @enum(subgraph: "Authentik", value: "\"authentik_outposts.outpost\"") @source(name: "authentik_outposts_outpost", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_POLICYBINDING @enum(subgraph: "Authentik", value: "\"authentik_policies.policybinding\"") @source(name: "authentik_policies_policybinding", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_DUMMY_DUMMYPOLICY @enum(subgraph: "Authentik", value: "\"authentik_policies_dummy.dummypolicy\"") @source(name: "authentik_policies_dummy_dummypolicy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_EVENT_MATCHER_EVENTMATCHERPOLICY @enum(subgraph: "Authentik", value: "\"authentik_policies_event_matcher.eventmatcherpolicy\"") @source(name: "authentik_policies_event_matcher_eventmatcherpolicy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_EXPIRY_PASSWORDEXPIRYPOLICY @enum(subgraph: "Authentik", value: "\"authentik_policies_expiry.passwordexpirypolicy\"") @source(name: "authentik_policies_expiry_passwordexpirypolicy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_EXPRESSION_EXPRESSIONPOLICY @enum(subgraph: "Authentik", value: "\"authentik_policies_expression.expressionpolicy\"") @source(name: "authentik_policies_expression_expressionpolicy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_GEOIP_GEOIPPOLICY @enum(subgraph: "Authentik", value: "\"authentik_policies_geoip.geoippolicy\"") @source(name: "authentik_policies_geoip_geoippolicy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_PASSWORD_PASSWORDPOLICY @enum(subgraph: "Authentik", value: "\"authentik_policies_password.passwordpolicy\"") @source(name: "authentik_policies_password_passwordpolicy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_REPUTATION_REPUTATIONPOLICY @enum(subgraph: "Authentik", value: "\"authentik_policies_reputation.reputationpolicy\"") @source(name: "authentik_policies_reputation_reputationpolicy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_GOOGLE_WORKSPACE_GOOGLEWORKSPACEPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_google_workspace.googleworkspaceprovider\"") @source(name: "authentik_providers_google_workspace_googleworkspaceprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_GOOGLE_WORKSPACE_GOOGLEWORKSPACEPROVIDERMAPPING @enum(subgraph: "Authentik", value: "\"authentik_providers_google_workspace.googleworkspaceprovidermapping\"") @source(name: "authentik_providers_google_workspace_googleworkspaceprovidermapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_LDAP_LDAPPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_ldap.ldapprovider\"") @source(name: "authentik_providers_ldap_ldapprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_MICROSOFT_ENTRA_MICROSOFTENTRAPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_microsoft_entra.microsoftentraprovider\"") @source(name: "authentik_providers_microsoft_entra_microsoftentraprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_MICROSOFT_ENTRA_MICROSOFTENTRAPROVIDERMAPPING @enum(subgraph: "Authentik", value: "\"authentik_providers_microsoft_entra.microsoftentraprovidermapping\"") @source(name: "authentik_providers_microsoft_entra_microsoftentraprovidermapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_OAUTH2_OAUTH2PROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_oauth2.oauth2provider\"") @source(name: "authentik_providers_oauth2_oauth2provider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_OAUTH2_SCOPEMAPPING @enum(subgraph: "Authentik", value: "\"authentik_providers_oauth2.scopemapping\"") @source(name: "authentik_providers_oauth2_scopemapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_PROXY_PROXYPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_proxy.proxyprovider\"") @source(name: "authentik_providers_proxy_proxyprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_RAC_ENDPOINT @enum(subgraph: "Authentik", value: "\"authentik_providers_rac.endpoint\"") @source(name: "authentik_providers_rac_endpoint", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_RAC_RACPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_providers_rac.racpropertymapping\"") @source(name: "authentik_providers_rac_racpropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_RAC_RACPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_rac.racprovider\"") @source(name: "authentik_providers_rac_racprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_RADIUS_RADIUSPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_radius.radiusprovider\"") @source(name: "authentik_providers_radius_radiusprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_RADIUS_RADIUSPROVIDERPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_providers_radius.radiusproviderpropertymapping\"") @source(name: "authentik_providers_radius_radiusproviderpropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_SAML_SAMLPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_providers_saml.samlpropertymapping\"") @source(name: "authentik_providers_saml_samlpropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_SAML_SAMLPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_saml.samlprovider\"") @source(name: "authentik_providers_saml_samlprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_SCIM_SCIMMAPPING @enum(subgraph: "Authentik", value: "\"authentik_providers_scim.scimmapping\"") @source(name: "authentik_providers_scim_scimmapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_SCIM_SCIMPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_scim.scimprovider\"") @source(name: "authentik_providers_scim_scimprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_RBAC_ROLE @enum(subgraph: "Authentik", value: "\"authentik_rbac.role\"") @source(name: "authentik_rbac_role", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_KERBEROS_GROUPKERBEROSSOURCECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_sources_kerberos.groupkerberossourceconnection\"") @source(name: "authentik_sources_kerberos_groupkerberossourceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_KERBEROS_KERBEROSSOURCE @enum(subgraph: "Authentik", value: "\"authentik_sources_kerberos.kerberossource\"") @source(name: "authentik_sources_kerberos_kerberossource", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_KERBEROS_KERBEROSSOURCEPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_sources_kerberos.kerberossourcepropertymapping\"") @source(name: "authentik_sources_kerberos_kerberossourcepropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_KERBEROS_USERKERBEROSSOURCECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_sources_kerberos.userkerberossourceconnection\"") @source(name: "authentik_sources_kerberos_userkerberossourceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_LDAP_LDAPSOURCE @enum(subgraph: "Authentik", value: "\"authentik_sources_ldap.ldapsource\"") @source(name: "authentik_sources_ldap_ldapsource", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_LDAP_LDAPSOURCEPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_sources_ldap.ldapsourcepropertymapping\"") @source(name: "authentik_sources_ldap_ldapsourcepropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_OAUTH_GROUPOAUTHSOURCECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_sources_oauth.groupoauthsourceconnection\"") @source(name: "authentik_sources_oauth_groupoauthsourceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_OAUTH_OAUTHSOURCE @enum(subgraph: "Authentik", value: "\"authentik_sources_oauth.oauthsource\"") @source(name: "authentik_sources_oauth_oauthsource", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_OAUTH_OAUTHSOURCEPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_sources_oauth.oauthsourcepropertymapping\"") @source(name: "authentik_sources_oauth_oauthsourcepropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_OAUTH_USEROAUTHSOURCECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_sources_oauth.useroauthsourceconnection\"") @source(name: "authentik_sources_oauth_useroauthsourceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_PLEX_GROUPPLEXSOURCECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_sources_plex.groupplexsourceconnection\"") @source(name: "authentik_sources_plex_groupplexsourceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_PLEX_PLEXSOURCE @enum(subgraph: "Authentik", value: "\"authentik_sources_plex.plexsource\"") @source(name: "authentik_sources_plex_plexsource", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_PLEX_PLEXSOURCEPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_sources_plex.plexsourcepropertymapping\"") @source(name: "authentik_sources_plex_plexsourcepropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_PLEX_USERPLEXSOURCECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_sources_plex.userplexsourceconnection\"") @source(name: "authentik_sources_plex_userplexsourceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_SAML_GROUPSAMLSOURCECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_sources_saml.groupsamlsourceconnection\"") @source(name: "authentik_sources_saml_groupsamlsourceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_SAML_SAMLSOURCE @enum(subgraph: "Authentik", value: "\"authentik_sources_saml.samlsource\"") @source(name: "authentik_sources_saml_samlsource", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_SAML_SAMLSOURCEPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_sources_saml.samlsourcepropertymapping\"") @source(name: "authentik_sources_saml_samlsourcepropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_SAML_USERSAMLSOURCECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_sources_saml.usersamlsourceconnection\"") @source(name: "authentik_sources_saml_usersamlsourceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_SCIM_SCIMSOURCE @enum(subgraph: "Authentik", value: "\"authentik_sources_scim.scimsource\"") @source(name: "authentik_sources_scim_scimsource", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_SCIM_SCIMSOURCEPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_sources_scim.scimsourcepropertymapping\"") @source(name: "authentik_sources_scim_scimsourcepropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_DUO_AUTHENTICATORDUOSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_duo.authenticatorduostage\"") @source(name: "authentik_stages_authenticator_duo_authenticatorduostage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_DUO_DUODEVICE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_duo.duodevice\"") @source(name: "authentik_stages_authenticator_duo_duodevice", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_ENDPOINT_GDTC_AUTHENTICATORENDPOINTGDTCSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_endpoint_gdtc.authenticatorendpointgdtcstage\"") @source(name: "authentik_stages_authenticator_endpoint_gdtc_authenticatorendpointgdtcstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_SMS_AUTHENTICATORSMSSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_sms.authenticatorsmsstage\"") @source(name: "authentik_stages_authenticator_sms_authenticatorsmsstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_SMS_SMSDEVICE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_sms.smsdevice\"") @source(name: "authentik_stages_authenticator_sms_smsdevice", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_STATIC_AUTHENTICATORSTATICSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_static.authenticatorstaticstage\"") @source(name: "authentik_stages_authenticator_static_authenticatorstaticstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_STATIC_STATICDEVICE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_static.staticdevice\"") @source(name: "authentik_stages_authenticator_static_staticdevice", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_TOTP_AUTHENTICATORTOTPSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_totp.authenticatortotpstage\"") @source(name: "authentik_stages_authenticator_totp_authenticatortotpstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_TOTP_TOTPDEVICE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_totp.totpdevice\"") @source(name: "authentik_stages_authenticator_totp_totpdevice", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_VALIDATE_AUTHENTICATORVALIDATESTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_validate.authenticatorvalidatestage\"") @source(name: "authentik_stages_authenticator_validate_authenticatorvalidatestage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_WEBAUTHN_AUTHENTICATORWEBAUTHNSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_webauthn.authenticatorwebauthnstage\"") @source(name: "authentik_stages_authenticator_webauthn_authenticatorwebauthnstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_WEBAUTHN_WEBAUTHNDEVICE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_webauthn.webauthndevice\"") @source(name: "authentik_stages_authenticator_webauthn_webauthndevice", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_CAPTCHA_CAPTCHASTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_captcha.captchastage\"") @source(name: "authentik_stages_captcha_captchastage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_CONSENT_CONSENTSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_consent.consentstage\"") @source(name: "authentik_stages_consent_consentstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_CONSENT_USERCONSENT @enum(subgraph: "Authentik", value: "\"authentik_stages_consent.userconsent\"") @source(name: "authentik_stages_consent_userconsent", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_DENY_DENYSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_deny.denystage\"") @source(name: "authentik_stages_deny_denystage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_DUMMY_DUMMYSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_dummy.dummystage\"") @source(name: "authentik_stages_dummy_dummystage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_EMAIL_EMAILSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_email.emailstage\"") @source(name: "authentik_stages_email_emailstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_IDENTIFICATION_IDENTIFICATIONSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_identification.identificationstage\"") @source(name: "authentik_stages_identification_identificationstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_INVITATION_INVITATION @enum(subgraph: "Authentik", value: "\"authentik_stages_invitation.invitation\"") @source(name: "authentik_stages_invitation_invitation", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_INVITATION_INVITATIONSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_invitation.invitationstage\"") @source(name: "authentik_stages_invitation_invitationstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_PASSWORD_PASSWORDSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_password.passwordstage\"") @source(name: "authentik_stages_password_passwordstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_PROMPT_PROMPT @enum(subgraph: "Authentik", value: "\"authentik_stages_prompt.prompt\"") @source(name: "authentik_stages_prompt_prompt", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_PROMPT_PROMPTSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_prompt.promptstage\"") @source(name: "authentik_stages_prompt_promptstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_SOURCE_SOURCESTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_source.sourcestage\"") @source(name: "authentik_stages_source_sourcestage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_USER_DELETE_USERDELETESTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_user_delete.userdeletestage\"") @source(name: "authentik_stages_user_delete_userdeletestage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_USER_LOGIN_USERLOGINSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_user_login.userloginstage\"") @source(name: "authentik_stages_user_login_userloginstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_USER_LOGOUT_USERLOGOUTSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_user_logout.userlogoutstage\"") @source(name: "authentik_stages_user_logout_userlogoutstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_USER_WRITE_USERWRITESTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_user_write.userwritestage\"") @source(name: "authentik_stages_user_write_userwritestage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_TENANTS_DOMAIN @enum(subgraph: "Authentik", value: "\"authentik_tenants.domain\"") @source(name: "authentik_tenants_domain", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputSchemaRetrieveFormat @source(name: "queryInput_schema_retrieve_format", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  JSON @source(name: "json", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  YAML @source(name: "yaml", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputSchemaRetrieveLang @source(name: "queryInput_schema_retrieve_lang", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  AF @source(name: "af", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AR @source(name: "ar", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AR_DZ @enum(subgraph: "Authentik", value: "\"ar-dz\"") @source(name: "ar_dz", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AST @source(name: "ast", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AZ @source(name: "az", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  BE @source(name: "be", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  BG @source(name: "bg", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  BN @source(name: "bn", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  BR @source(name: "br", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  BS @source(name: "bs", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  CA @source(name: "ca", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  CKB @source(name: "ckb", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  CS @source(name: "cs", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  CY @source(name: "cy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  DA @source(name: "da", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  DE @source(name: "de", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  DSB @source(name: "dsb", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  EL @source(name: "el", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  EN @source(name: "en", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  EN_AU @enum(subgraph: "Authentik", value: "\"en-au\"") @source(name: "en_au", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  EN_GB @enum(subgraph: "Authentik", value: "\"en-gb\"") @source(name: "en_gb", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  EO @source(name: "eo", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  ES @source(name: "es", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  ES_AR @enum(subgraph: "Authentik", value: "\"es-ar\"") @source(name: "es_ar", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  ES_CO @enum(subgraph: "Authentik", value: "\"es-co\"") @source(name: "es_co", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  ES_MX @enum(subgraph: "Authentik", value: "\"es-mx\"") @source(name: "es_mx", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  ES_NI @enum(subgraph: "Authentik", value: "\"es-ni\"") @source(name: "es_ni", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  ES_VE @enum(subgraph: "Authentik", value: "\"es-ve\"") @source(name: "es_ve", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  ET @source(name: "et", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  EU @source(name: "eu", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  FA @source(name: "fa", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  FI @source(name: "fi", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  FR @source(name: "fr", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  FY @source(name: "fy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  GA @source(name: "ga", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  GD @source(name: "gd", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  GL @source(name: "gl", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HE @source(name: "he", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HI @source(name: "hi", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HR @source(name: "hr", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HSB @source(name: "hsb", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HU @source(name: "hu", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HY @source(name: "hy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  IA @source(name: "ia", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  ID @source(name: "id", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  IG @source(name: "ig", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  IO @source(name: "io", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  IS @source(name: "is", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  IT @source(name: "it", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  JA @source(name: "ja", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  KA @source(name: "ka", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  KAB @source(name: "kab", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  KK @source(name: "kk", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  KM @source(name: "km", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  KN @source(name: "kn", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  KO @source(name: "ko", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  KY @source(name: "ky", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  LB @source(name: "lb", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  LT @source(name: "lt", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  LV @source(name: "lv", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  MK @source(name: "mk", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  ML @source(name: "ml", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  MN @source(name: "mn", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  MR @source(name: "mr", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  MS @source(name: "ms", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  MY @source(name: "my", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  NB @source(name: "nb", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  NE @source(name: "ne", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  NL @source(name: "nl", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  NN @source(name: "nn", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  OS @source(name: "os", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  PA @source(name: "pa", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  PL @source(name: "pl", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  PT @source(name: "pt", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  PT_BR @enum(subgraph: "Authentik", value: "\"pt-br\"") @source(name: "pt_br", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  RO @source(name: "ro", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  RU @source(name: "ru", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SK @source(name: "sk", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SL @source(name: "sl", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SQ @source(name: "sq", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SR @source(name: "sr", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SR_LATN @enum(subgraph: "Authentik", value: "\"sr-latn\"") @source(name: "sr_latn", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SV @source(name: "sv", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SW @source(name: "sw", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  TA @source(name: "ta", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  TE @source(name: "te", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  TG @source(name: "tg", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  TH @source(name: "th", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  TK @source(name: "tk", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  TR @source(name: "tr", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  TT @source(name: "tt", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  UDM @source(name: "udm", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  UG @source(name: "ug", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  UK @source(name: "uk", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  UR @source(name: "ur", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  UZ @source(name: "uz", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  VI @source(name: "vi", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  ZH_HANS @enum(subgraph: "Authentik", value: "\"zh-hans\"") @source(name: "zh_hans", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  ZH_HANT @enum(subgraph: "Authentik", value: "\"zh-hant\"") @source(name: "zh_hant", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

"""
How the source determines if an existing group should be used or a new group created.
"""
enum QueryInputSourcesOauthListGroupMatchingMode @source(name: "queryInput_sources_oauth_list_group_matching_mode", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  IDENTIFIER @source(name: "identifier", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  NAME_DENY @source(name: "name_deny", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  NAME_LINK @source(name: "name_link", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputSourcesOauthListPolicyEngineMode @source(name: "queryInput_sources_oauth_list_policy_engine_mode", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  ALL @source(name: "all", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  ANY @source(name: "any", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

"""
How the source determines if an existing user should be authenticated or a new user enrolled.
"""
enum QueryInputSourcesOauthListUserMatchingMode @source(name: "queryInput_sources_oauth_list_user_matching_mode", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  EMAIL_DENY @source(name: "email_deny", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  EMAIL_LINK @source(name: "email_link", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  IDENTIFIER @source(name: "identifier", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  USERNAME_DENY @source(name: "username_deny", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  USERNAME_LINK @source(name: "username_link", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

"""
How the source determines if an existing group should be used or a new group created.
"""
enum QueryInputSourcesPlexListGroupMatchingMode @source(name: "queryInput_sources_plex_list_group_matching_mode", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  IDENTIFIER @source(name: "identifier", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  NAME_DENY @source(name: "name_deny", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  NAME_LINK @source(name: "name_link", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputSourcesPlexListPolicyEngineMode @source(name: "queryInput_sources_plex_list_policy_engine_mode", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  ALL @source(name: "all", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  ANY @source(name: "any", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

"""
How the source determines if an existing user should be authenticated or a new user enrolled.
"""
enum QueryInputSourcesPlexListUserMatchingMode @source(name: "queryInput_sources_plex_list_user_matching_mode", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  EMAIL_DENY @source(name: "email_deny", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  EMAIL_LINK @source(name: "email_link", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  IDENTIFIER @source(name: "identifier", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  USERNAME_DENY @source(name: "username_deny", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  USERNAME_LINK @source(name: "username_link", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputSourcesSamlListBindingType @source(name: "queryInput_sources_saml_list_binding_type", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  POST @join__enumValue(graph: AUTHENTIK)
  POST_AUTO @join__enumValue(graph: AUTHENTIK)
  REDIRECT @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputSourcesSamlListDigestAlgorithm @source(name: "queryInput_sources_saml_list_digest_algorithm", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  HTTP___WWW_W3_ORG_2000_09_XMLDSIG_POUND_SHA1 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2000/09/xmldsig#sha1\"") @source(name: "http___www_w3_org_2000_09_xmldsig_POUND_sha1", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLDSIG_MORE_POUND_SHA384 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmldsig-more#sha384\"") @source(name: "http___www_w3_org_2001_04_xmldsig_more_POUND_sha384", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLENC_POUND_SHA256 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmlenc#sha256\"") @source(name: "http___www_w3_org_2001_04_xmlenc_POUND_sha256", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLENC_POUND_SHA512 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmlenc#sha512\"") @source(name: "http___www_w3_org_2001_04_xmlenc_POUND_sha512", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

"""
NameID Policy sent to the IdP. Can be unset, in which case no Policy is sent.
"""
enum QueryInputSourcesSamlListNameIdPolicy @source(name: "queryInput_sources_saml_list_name_id_policy", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  URN_OASIS_NAMES_TC_SAML_1_1_NAMEID_FORMAT_X509SUBJECTNAME @enum(subgraph: "Authentik", value: "\"urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName\"") @source(name: "urn_oasis_names_tc_SAML_1_1_nameid_format_X509SubjectName", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  URN_OASIS_NAMES_TC_SAML_1_1_NAMEID_FORMAT_EMAILADDRESS @enum(subgraph: "Authentik", value: "\"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\"") @source(name: "urn_oasis_names_tc_SAML_1_1_nameid_format_emailAddress", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  URN_OASIS_NAMES_TC_SAML_2_0_NAMEID_FORMAT_WINDOWSDOMAINQUALIFIEDNAME @enum(subgraph: "Authentik", value: "\"urn:oasis:names:tc:SAML:2.0:nameid-format:WindowsDomainQualifiedName\"") @source(name: "urn_oasis_names_tc_SAML_2_0_nameid_format_WindowsDomainQualifiedName", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  URN_OASIS_NAMES_TC_SAML_2_0_NAMEID_FORMAT_PERSISTENT @enum(subgraph: "Authentik", value: "\"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent\"") @source(name: "urn_oasis_names_tc_SAML_2_0_nameid_format_persistent", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  URN_OASIS_NAMES_TC_SAML_2_0_NAMEID_FORMAT_TRANSIENT @enum(subgraph: "Authentik", value: "\"urn:oasis:names:tc:SAML:2.0:nameid-format:transient\"") @source(name: "urn_oasis_names_tc_SAML_2_0_nameid_format_transient", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputSourcesSamlListPolicyEngineMode @source(name: "queryInput_sources_saml_list_policy_engine_mode", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  ALL @source(name: "all", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  ANY @source(name: "any", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputSourcesSamlListSignatureAlgorithm @source(name: "queryInput_sources_saml_list_signature_algorithm", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  HTTP___WWW_W3_ORG_2000_09_XMLDSIG_POUND_DSA_SHA1 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2000/09/xmldsig#dsa-sha1\"") @source(name: "http___www_w3_org_2000_09_xmldsig_POUND_dsa_sha1", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2000_09_XMLDSIG_POUND_RSA_SHA1 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2000/09/xmldsig#rsa-sha1\"") @source(name: "http___www_w3_org_2000_09_xmldsig_POUND_rsa_sha1", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLDSIG_MORE_POUND_ECDSA_SHA1 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1\"") @source(name: "http___www_w3_org_2001_04_xmldsig_more_POUND_ecdsa_sha1", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLDSIG_MORE_POUND_ECDSA_SHA256 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256\"") @source(name: "http___www_w3_org_2001_04_xmldsig_more_POUND_ecdsa_sha256", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLDSIG_MORE_POUND_ECDSA_SHA384 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384\"") @source(name: "http___www_w3_org_2001_04_xmldsig_more_POUND_ecdsa_sha384", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLDSIG_MORE_POUND_ECDSA_SHA512 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512\"") @source(name: "http___www_w3_org_2001_04_xmldsig_more_POUND_ecdsa_sha512", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLDSIG_MORE_POUND_RSA_SHA256 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\"") @source(name: "http___www_w3_org_2001_04_xmldsig_more_POUND_rsa_sha256", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLDSIG_MORE_POUND_RSA_SHA384 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha384\"") @source(name: "http___www_w3_org_2001_04_xmldsig_more_POUND_rsa_sha384", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLDSIG_MORE_POUND_RSA_SHA512 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha512\"") @source(name: "http___www_w3_org_2001_04_xmldsig_more_POUND_rsa_sha512", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

"""
How the source determines if an existing user should be authenticated or a new user enrolled.
"""
enum QueryInputSourcesSamlListUserMatchingMode @source(name: "queryInput_sources_saml_list_user_matching_mode", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  EMAIL_DENY @source(name: "email_deny", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  EMAIL_LINK @source(name: "email_link", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  IDENTIFIER @source(name: "identifier", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  USERNAME_DENY @source(name: "username_deny", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  USERNAME_LINK @source(name: "username_link", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputStagesAuthenticatorSmsListAuthType @source(name: "queryInput_stages_authenticator_sms_list_auth_type", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  BASIC @source(name: "basic", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  BEARER @source(name: "bearer", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputStagesAuthenticatorSmsListProvider @source(name: "queryInput_stages_authenticator_sms_list_provider", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  GENERIC @source(name: "generic", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  TWILIO @source(name: "twilio", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputStagesAuthenticatorTotpListDigits @source(name: "queryInput_stages_authenticator_totp_list_digits", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  _6 @enum(subgraph: "Authentik", value: "\"6\"") @join__enumValue(graph: AUTHENTIK)
  _8 @enum(subgraph: "Authentik", value: "\"8\"") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputStagesAuthenticatorValidateListNotConfiguredAction @source(name: "queryInput_stages_authenticator_validate_list_not_configured_action", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  CONFIGURE @source(name: "configure", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  DENY @source(name: "deny", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SKIP @source(name: "skip", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputStagesAuthenticatorWebauthnListAuthenticatorAttachment @source(name: "queryInput_stages_authenticator_webauthn_list_authenticator_attachment", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  CROSS_PLATFORM @enum(subgraph: "Authentik", value: "\"cross-platform\"") @source(name: "cross_platform", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  PLATFORM @source(name: "platform", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputStagesAuthenticatorWebauthnListResidentKeyRequirement @source(name: "queryInput_stages_authenticator_webauthn_list_resident_key_requirement", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  DISCOURAGED @source(name: "discouraged", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  PREFERRED @source(name: "preferred", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  REQUIRED @source(name: "required", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputStagesAuthenticatorWebauthnListUserVerification @source(name: "queryInput_stages_authenticator_webauthn_list_user_verification", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  DISCOURAGED @source(name: "discouraged", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  PREFERRED @source(name: "preferred", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  REQUIRED @source(name: "required", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputStagesConsentListMode @source(name: "queryInput_stages_consent_list_mode", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  ALWAYS_REQUIRE @source(name: "always_require", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  EXPIRING @source(name: "expiring", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  PERMANENT @source(name: "permanent", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputStagesPromptPromptsListType @source(name: "queryInput_stages_prompt_prompts_list_type", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  AK_LOCALE @enum(subgraph: "Authentik", value: "\"ak-locale\"") @source(name: "ak_locale", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  CHECKBOX @source(name: "checkbox", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  DATE @source(name: "date", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  DATE_TIME @enum(subgraph: "Authentik", value: "\"date-time\"") @source(name: "date_time", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  DROPDOWN @source(name: "dropdown", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  EMAIL @source(name: "email", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  FILE @source(name: "file", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HIDDEN @source(name: "hidden", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  NUMBER @source(name: "number", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  PASSWORD @source(name: "password", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  RADIO_BUTTON_GROUP @enum(subgraph: "Authentik", value: "\"radio-button-group\"") @source(name: "radio_button_group", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SEPARATOR @source(name: "separator", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  STATIC @source(name: "static", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  TEXT @source(name: "text", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  TEXT_AREA @source(name: "text_area", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  TEXT_AREA_READ_ONLY @source(name: "text_area_read_only", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  TEXT_READ_ONLY @source(name: "text_read_only", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  USERNAME @source(name: "username", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

"""Bind sessions created by this stage to the configured GeoIP location"""
enum QueryInputStagesUserLoginListGeoipBinding @source(name: "queryInput_stages_user_login_list_geoip_binding", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  BIND_CONTINENT @source(name: "bind_continent", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  BIND_CONTINENT_COUNTRY @source(name: "bind_continent_country", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  BIND_CONTINENT_COUNTRY_CITY @source(name: "bind_continent_country_city", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  NO_BINDING @source(name: "no_binding", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

"""Bind sessions created by this stage to the configured network"""
enum QueryInputStagesUserLoginListNetworkBinding @source(name: "queryInput_stages_user_login_list_network_binding", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  BIND_ASN @source(name: "bind_asn", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  BIND_ASN_NETWORK @source(name: "bind_asn_network", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  BIND_ASN_NETWORK_IP @source(name: "bind_asn_network_ip", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  NO_BINDING @source(name: "no_binding", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputStagesUserWriteListUserCreationMode @source(name: "queryInput_stages_user_write_list_user_creation_mode", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  ALWAYS_CREATE @source(name: "always_create", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  CREATE_WHEN_REQUIRED @source(name: "create_when_required", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  NEVER_CREATE @source(name: "never_create", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum QueryInputStagesUserWriteListUserType @source(name: "queryInput_stages_user_write_list_user_type", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  EXTERNAL @source(name: "external", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  INTERNAL @source(name: "internal", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  INTERNAL_SERVICE_ACCOUNT @source(name: "internal_service_account", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SERVICE_ACCOUNT @source(name: "service_account", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum UsedByActionEnum @join__type(graph: AUTHENTIK) {
  CASCADE @source(name: "cascade", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  CASCADE_MANY @source(name: "cascade_many", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SET_NULL @source(name: "set_null", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SET_DEFAULT @source(name: "set_default", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum PolicyEngineMode @join__type(graph: AUTHENTIK) {
  ALL @source(name: "all", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  ANY @source(name: "any", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum LogLevelEnum @join__type(graph: AUTHENTIK) {
  CRITICAL @source(name: "critical", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  EXCEPTION @source(name: "exception", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  ERROR @source(name: "error", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  WARN @source(name: "warn", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  WARNING @source(name: "warning", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  INFO @source(name: "info", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  DEBUG @source(name: "debug", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  NOTSET @source(name: "notset", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum UiThemeEnum @join__type(graph: AUTHENTIK) {
  AUTOMATIC @source(name: "automatic", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  LIGHT @source(name: "light", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  DARK @source(name: "dark", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum IntentEnum @join__type(graph: AUTHENTIK) {
  VERIFICATION @source(name: "verification", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  API @source(name: "api", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  RECOVERY @source(name: "recovery", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  APP_PASSWORD @source(name: "app_password", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum UserTypeEnum @join__type(graph: AUTHENTIK) {
  INTERNAL @source(name: "internal", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  EXTERNAL @source(name: "external", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SERVICE_ACCOUNT @source(name: "service_account", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  INTERNAL_SERVICE_ACCOUNT @source(name: "internal_service_account", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum LicenseSummaryStatusEnum @join__type(graph: AUTHENTIK) {
  UNLICENSED @source(name: "unlicensed", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  VALID @source(name: "valid", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  EXPIRED @source(name: "expired", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  EXPIRY_SOON @source(name: "expiry_soon", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  LIMIT_EXCEEDED_ADMIN @source(name: "limit_exceeded_admin", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  LIMIT_EXCEEDED_USER @source(name: "limit_exceeded_user", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  READ_ONLY @source(name: "read_only", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum LicenseFlagsEnum @join__type(graph: AUTHENTIK) {
  TRIAL @source(name: "trial", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  NON_PRODUCTION @source(name: "non_production", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum EventActions @join__type(graph: AUTHENTIK) {
  LOGIN @source(name: "login", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  LOGIN_FAILED @source(name: "login_failed", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  LOGOUT @source(name: "logout", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  USER_WRITE @source(name: "user_write", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SUSPICIOUS_REQUEST @source(name: "suspicious_request", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  PASSWORD_SET @source(name: "password_set", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SECRET_VIEW @source(name: "secret_view", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SECRET_ROTATE @source(name: "secret_rotate", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  INVITATION_USED @source(name: "invitation_used", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHORIZE_APPLICATION @source(name: "authorize_application", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SOURCE_LINKED @source(name: "source_linked", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  IMPERSONATION_STARTED @source(name: "impersonation_started", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  IMPERSONATION_ENDED @source(name: "impersonation_ended", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  FLOW_EXECUTION @source(name: "flow_execution", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  POLICY_EXECUTION @source(name: "policy_execution", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  POLICY_EXCEPTION @source(name: "policy_exception", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  PROPERTY_MAPPING_EXCEPTION @source(name: "property_mapping_exception", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SYSTEM_TASK_EXECUTION @source(name: "system_task_execution", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SYSTEM_TASK_EXCEPTION @source(name: "system_task_exception", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SYSTEM_EXCEPTION @source(name: "system_exception", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  CONFIGURATION_ERROR @source(name: "configuration_error", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  MODEL_CREATED @source(name: "model_created", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  MODEL_UPDATED @source(name: "model_updated", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  MODEL_DELETED @source(name: "model_deleted", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  EMAIL_SENT @source(name: "email_sent", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  UPDATE_AVAILABLE @source(name: "update_available", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  CUSTOM_ @source(name: "custom_", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum SeverityEnum @join__type(graph: AUTHENTIK) {
  NOTICE @source(name: "notice", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  WARNING @source(name: "warning", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  ALERT @source(name: "alert", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum SystemTaskStatusEnum @join__type(graph: AUTHENTIK) {
  UNKNOWN @source(name: "unknown", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SUCCESSFUL @source(name: "successful", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  WARNING @source(name: "warning", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  ERROR @source(name: "error", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum NotificationTransportModeEnum @join__type(graph: AUTHENTIK) {
  LOCAL @source(name: "local", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  WEBHOOK @source(name: "webhook", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  WEBHOOK_SLACK @source(name: "webhook_slack", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  EMAIL @source(name: "email", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum InvalidResponseActionEnum @join__type(graph: AUTHENTIK) {
  RETRY @source(name: "retry", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  RESTART @source(name: "restart", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  RESTART_WITH_CONTEXT @source(name: "restart_with_context", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum FlowDesignationEnum @join__type(graph: AUTHENTIK) {
  AUTHENTICATION @source(name: "authentication", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHORIZATION @source(name: "authorization", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  INVALIDATION @source(name: "invalidation", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  ENROLLMENT @source(name: "enrollment", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  UNENROLLMENT @source(name: "unenrollment", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  RECOVERY @source(name: "recovery", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  STAGE_CONFIGURATION @source(name: "stage_configuration", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum FlowLayoutEnum @join__type(graph: AUTHENTIK) {
  STACKED @source(name: "stacked", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  CONTENT_LEFT @source(name: "content_left", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  CONTENT_RIGHT @source(name: "content_right", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SIDEBAR_LEFT @source(name: "sidebar_left", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SIDEBAR_RIGHT @source(name: "sidebar_right", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum DeniedActionEnum @join__type(graph: AUTHENTIK) {
  MESSAGE_CONTINUE @source(name: "message_continue", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  MESSAGE @source(name: "message", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  CONTINUE @source(name: "continue", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum ContextualFlowInfoLayoutEnum @join__type(graph: AUTHENTIK) {
  STACKED @source(name: "stacked", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  CONTENT_LEFT @source(name: "content_left", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  CONTENT_RIGHT @source(name: "content_right", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SIDEBAR_LEFT @source(name: "sidebar_left", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SIDEBAR_RIGHT @source(name: "sidebar_right", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum PromptTypeEnum @join__type(graph: AUTHENTIK) {
  TEXT @source(name: "text", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  TEXT_AREA @source(name: "text_area", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  TEXT_READ_ONLY @source(name: "text_read_only", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  TEXT_AREA_READ_ONLY @source(name: "text_area_read_only", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  USERNAME @source(name: "username", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  EMAIL @source(name: "email", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  PASSWORD @source(name: "password", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  NUMBER @source(name: "number", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  CHECKBOX @source(name: "checkbox", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  RADIO_BUTTON_GROUP @enum(subgraph: "Authentik", value: "\"radio-button-group\"") @source(name: "radio_button_group", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  DROPDOWN @source(name: "dropdown", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  DATE @source(name: "date", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  DATE_TIME @enum(subgraph: "Authentik", value: "\"date-time\"") @source(name: "date_time", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  FILE @source(name: "file", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SEPARATOR @source(name: "separator", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HIDDEN @source(name: "hidden", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  STATIC @source(name: "static", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AK_LOCALE @enum(subgraph: "Authentik", value: "\"ak-locale\"") @source(name: "ak_locale", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum AuthenticationEnum @join__type(graph: AUTHENTIK) {
  NONE @source(name: "none", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  REQUIRE_AUTHENTICATED @source(name: "require_authenticated", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  REQUIRE_UNAUTHENTICATED @source(name: "require_unauthenticated", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  REQUIRE_SUPERUSER @source(name: "require_superuser", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  REQUIRE_OUTPOST @source(name: "require_outpost", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum BlueprintInstanceStatusEnum @join__type(graph: AUTHENTIK) {
  SUCCESSFUL @source(name: "successful", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  WARNING @source(name: "warning", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  ERROR @source(name: "error", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  ORPHANED @source(name: "orphaned", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  UNKNOWN @source(name: "unknown", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum ClientTypeEnum @join__type(graph: AUTHENTIK) {
  CONFIDENTIAL @source(name: "confidential", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  PUBLIC @source(name: "public", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum SubModeEnum @join__type(graph: AUTHENTIK) {
  HASHED_USER_ID @source(name: "hashed_user_id", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  USER_ID @source(name: "user_id", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  USER_UUID @source(name: "user_uuid", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  USER_USERNAME @source(name: "user_username", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  USER_EMAIL @source(name: "user_email", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  USER_UPN @source(name: "user_upn", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum IssuerModeEnum @join__type(graph: AUTHENTIK) {
  GLOBAL @source(name: "global", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  PER_PROVIDER @source(name: "per_provider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum MatchingModeEnum @join__type(graph: AUTHENTIK) {
  STRICT @source(name: "strict", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  REGEX @source(name: "regex", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum OutpostTypeEnum @join__type(graph: AUTHENTIK) {
  PROXY @source(name: "proxy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  LDAP @source(name: "ldap", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  RADIUS @source(name: "radius", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  RAC @source(name: "rac", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum LdapapiAccessMode @source(name: "LDAPAPIAccessMode", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  DIRECT @source(name: "direct", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  CACHED @source(name: "cached", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum ProxyMode @join__type(graph: AUTHENTIK) {
  PROXY @source(name: "proxy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  FORWARD_SINGLE @source(name: "forward_single", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  FORWARD_DOMAIN @source(name: "forward_domain", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum AppEnum @join__type(graph: AUTHENTIK) {
  AUTHENTIK_TENANTS @enum(subgraph: "Authentik", value: "\"authentik.tenants\"") @source(name: "authentik_tenants", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_ADMIN @enum(subgraph: "Authentik", value: "\"authentik.admin\"") @source(name: "authentik_admin", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_API @enum(subgraph: "Authentik", value: "\"authentik.api\"") @source(name: "authentik_api", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_CRYPTO @enum(subgraph: "Authentik", value: "\"authentik.crypto\"") @source(name: "authentik_crypto", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_FLOWS @enum(subgraph: "Authentik", value: "\"authentik.flows\"") @source(name: "authentik_flows", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_OUTPOSTS @enum(subgraph: "Authentik", value: "\"authentik.outposts\"") @source(name: "authentik_outposts", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_DUMMY @enum(subgraph: "Authentik", value: "\"authentik.policies.dummy\"") @source(name: "authentik_policies_dummy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_EVENT_MATCHER @enum(subgraph: "Authentik", value: "\"authentik.policies.event_matcher\"") @source(name: "authentik_policies_event_matcher", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_EXPIRY @enum(subgraph: "Authentik", value: "\"authentik.policies.expiry\"") @source(name: "authentik_policies_expiry", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_EXPRESSION @enum(subgraph: "Authentik", value: "\"authentik.policies.expression\"") @source(name: "authentik_policies_expression", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_GEOIP @enum(subgraph: "Authentik", value: "\"authentik.policies.geoip\"") @source(name: "authentik_policies_geoip", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_PASSWORD @enum(subgraph: "Authentik", value: "\"authentik.policies.password\"") @source(name: "authentik_policies_password", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_REPUTATION @enum(subgraph: "Authentik", value: "\"authentik.policies.reputation\"") @source(name: "authentik_policies_reputation", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES @enum(subgraph: "Authentik", value: "\"authentik.policies\"") @source(name: "authentik_policies", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_LDAP @enum(subgraph: "Authentik", value: "\"authentik.providers.ldap\"") @source(name: "authentik_providers_ldap", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_OAUTH2 @enum(subgraph: "Authentik", value: "\"authentik.providers.oauth2\"") @source(name: "authentik_providers_oauth2", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_PROXY @enum(subgraph: "Authentik", value: "\"authentik.providers.proxy\"") @source(name: "authentik_providers_proxy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_RADIUS @enum(subgraph: "Authentik", value: "\"authentik.providers.radius\"") @source(name: "authentik_providers_radius", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_SAML @enum(subgraph: "Authentik", value: "\"authentik.providers.saml\"") @source(name: "authentik_providers_saml", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_SCIM @enum(subgraph: "Authentik", value: "\"authentik.providers.scim\"") @source(name: "authentik_providers_scim", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_RBAC @enum(subgraph: "Authentik", value: "\"authentik.rbac\"") @source(name: "authentik_rbac", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_RECOVERY @enum(subgraph: "Authentik", value: "\"authentik.recovery\"") @source(name: "authentik_recovery", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_KERBEROS @enum(subgraph: "Authentik", value: "\"authentik.sources.kerberos\"") @source(name: "authentik_sources_kerberos", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_LDAP @enum(subgraph: "Authentik", value: "\"authentik.sources.ldap\"") @source(name: "authentik_sources_ldap", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_OAUTH @enum(subgraph: "Authentik", value: "\"authentik.sources.oauth\"") @source(name: "authentik_sources_oauth", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_PLEX @enum(subgraph: "Authentik", value: "\"authentik.sources.plex\"") @source(name: "authentik_sources_plex", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_SAML @enum(subgraph: "Authentik", value: "\"authentik.sources.saml\"") @source(name: "authentik_sources_saml", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_SCIM @enum(subgraph: "Authentik", value: "\"authentik.sources.scim\"") @source(name: "authentik_sources_scim", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR @enum(subgraph: "Authentik", value: "\"authentik.stages.authenticator\"") @source(name: "authentik_stages_authenticator", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_DUO @enum(subgraph: "Authentik", value: "\"authentik.stages.authenticator_duo\"") @source(name: "authentik_stages_authenticator_duo", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_SMS @enum(subgraph: "Authentik", value: "\"authentik.stages.authenticator_sms\"") @source(name: "authentik_stages_authenticator_sms", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_STATIC @enum(subgraph: "Authentik", value: "\"authentik.stages.authenticator_static\"") @source(name: "authentik_stages_authenticator_static", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_TOTP @enum(subgraph: "Authentik", value: "\"authentik.stages.authenticator_totp\"") @source(name: "authentik_stages_authenticator_totp", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_VALIDATE @enum(subgraph: "Authentik", value: "\"authentik.stages.authenticator_validate\"") @source(name: "authentik_stages_authenticator_validate", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_WEBAUTHN @enum(subgraph: "Authentik", value: "\"authentik.stages.authenticator_webauthn\"") @source(name: "authentik_stages_authenticator_webauthn", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_CAPTCHA @enum(subgraph: "Authentik", value: "\"authentik.stages.captcha\"") @source(name: "authentik_stages_captcha", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_CONSENT @enum(subgraph: "Authentik", value: "\"authentik.stages.consent\"") @source(name: "authentik_stages_consent", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_DENY @enum(subgraph: "Authentik", value: "\"authentik.stages.deny\"") @source(name: "authentik_stages_deny", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_DUMMY @enum(subgraph: "Authentik", value: "\"authentik.stages.dummy\"") @source(name: "authentik_stages_dummy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_EMAIL @enum(subgraph: "Authentik", value: "\"authentik.stages.email\"") @source(name: "authentik_stages_email", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_IDENTIFICATION @enum(subgraph: "Authentik", value: "\"authentik.stages.identification\"") @source(name: "authentik_stages_identification", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_INVITATION @enum(subgraph: "Authentik", value: "\"authentik.stages.invitation\"") @source(name: "authentik_stages_invitation", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_PASSWORD @enum(subgraph: "Authentik", value: "\"authentik.stages.password\"") @source(name: "authentik_stages_password", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_PROMPT @enum(subgraph: "Authentik", value: "\"authentik.stages.prompt\"") @source(name: "authentik_stages_prompt", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_USER_DELETE @enum(subgraph: "Authentik", value: "\"authentik.stages.user_delete\"") @source(name: "authentik_stages_user_delete", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_USER_LOGIN @enum(subgraph: "Authentik", value: "\"authentik.stages.user_login\"") @source(name: "authentik_stages_user_login", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_USER_LOGOUT @enum(subgraph: "Authentik", value: "\"authentik.stages.user_logout\"") @source(name: "authentik_stages_user_logout", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_USER_WRITE @enum(subgraph: "Authentik", value: "\"authentik.stages.user_write\"") @source(name: "authentik_stages_user_write", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_BRANDS @enum(subgraph: "Authentik", value: "\"authentik.brands\"") @source(name: "authentik_brands", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_BLUEPRINTS @enum(subgraph: "Authentik", value: "\"authentik.blueprints\"") @source(name: "authentik_blueprints", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_CORE @enum(subgraph: "Authentik", value: "\"authentik.core\"") @source(name: "authentik_core", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_ENTERPRISE @enum(subgraph: "Authentik", value: "\"authentik.enterprise\"") @source(name: "authentik_enterprise", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_ENTERPRISE_AUDIT @enum(subgraph: "Authentik", value: "\"authentik.enterprise.audit\"") @source(name: "authentik_enterprise_audit", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_ENTERPRISE_PROVIDERS_GOOGLE_WORKSPACE @enum(subgraph: "Authentik", value: "\"authentik.enterprise.providers.google_workspace\"") @source(name: "authentik_enterprise_providers_google_workspace", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_ENTERPRISE_PROVIDERS_MICROSOFT_ENTRA @enum(subgraph: "Authentik", value: "\"authentik.enterprise.providers.microsoft_entra\"") @source(name: "authentik_enterprise_providers_microsoft_entra", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_ENTERPRISE_PROVIDERS_RAC @enum(subgraph: "Authentik", value: "\"authentik.enterprise.providers.rac\"") @source(name: "authentik_enterprise_providers_rac", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_ENTERPRISE_STAGES_AUTHENTICATOR_ENDPOINT_GDTC @enum(subgraph: "Authentik", value: "\"authentik.enterprise.stages.authenticator_endpoint_gdtc\"") @source(name: "authentik_enterprise_stages_authenticator_endpoint_gdtc", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_ENTERPRISE_STAGES_SOURCE @enum(subgraph: "Authentik", value: "\"authentik.enterprise.stages.source\"") @source(name: "authentik_enterprise_stages_source", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_EVENTS @enum(subgraph: "Authentik", value: "\"authentik.events\"") @source(name: "authentik_events", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum ModelEnum @join__type(graph: AUTHENTIK) {
  AUTHENTIK_TENANTS_DOMAIN @enum(subgraph: "Authentik", value: "\"authentik_tenants.domain\"") @source(name: "authentik_tenants_domain", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_CRYPTO_CERTIFICATEKEYPAIR @enum(subgraph: "Authentik", value: "\"authentik_crypto.certificatekeypair\"") @source(name: "authentik_crypto_certificatekeypair", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_FLOWS_FLOW @enum(subgraph: "Authentik", value: "\"authentik_flows.flow\"") @source(name: "authentik_flows_flow", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_FLOWS_FLOWSTAGEBINDING @enum(subgraph: "Authentik", value: "\"authentik_flows.flowstagebinding\"") @source(name: "authentik_flows_flowstagebinding", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_OUTPOSTS_DOCKERSERVICECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_outposts.dockerserviceconnection\"") @source(name: "authentik_outposts_dockerserviceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_OUTPOSTS_KUBERNETESSERVICECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_outposts.kubernetesserviceconnection\"") @source(name: "authentik_outposts_kubernetesserviceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_OUTPOSTS_OUTPOST @enum(subgraph: "Authentik", value: "\"authentik_outposts.outpost\"") @source(name: "authentik_outposts_outpost", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_DUMMY_DUMMYPOLICY @enum(subgraph: "Authentik", value: "\"authentik_policies_dummy.dummypolicy\"") @source(name: "authentik_policies_dummy_dummypolicy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_EVENT_MATCHER_EVENTMATCHERPOLICY @enum(subgraph: "Authentik", value: "\"authentik_policies_event_matcher.eventmatcherpolicy\"") @source(name: "authentik_policies_event_matcher_eventmatcherpolicy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_EXPIRY_PASSWORDEXPIRYPOLICY @enum(subgraph: "Authentik", value: "\"authentik_policies_expiry.passwordexpirypolicy\"") @source(name: "authentik_policies_expiry_passwordexpirypolicy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_EXPRESSION_EXPRESSIONPOLICY @enum(subgraph: "Authentik", value: "\"authentik_policies_expression.expressionpolicy\"") @source(name: "authentik_policies_expression_expressionpolicy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_GEOIP_GEOIPPOLICY @enum(subgraph: "Authentik", value: "\"authentik_policies_geoip.geoippolicy\"") @source(name: "authentik_policies_geoip_geoippolicy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_PASSWORD_PASSWORDPOLICY @enum(subgraph: "Authentik", value: "\"authentik_policies_password.passwordpolicy\"") @source(name: "authentik_policies_password_passwordpolicy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_REPUTATION_REPUTATIONPOLICY @enum(subgraph: "Authentik", value: "\"authentik_policies_reputation.reputationpolicy\"") @source(name: "authentik_policies_reputation_reputationpolicy", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_POLICIES_POLICYBINDING @enum(subgraph: "Authentik", value: "\"authentik_policies.policybinding\"") @source(name: "authentik_policies_policybinding", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_LDAP_LDAPPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_ldap.ldapprovider\"") @source(name: "authentik_providers_ldap_ldapprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_OAUTH2_SCOPEMAPPING @enum(subgraph: "Authentik", value: "\"authentik_providers_oauth2.scopemapping\"") @source(name: "authentik_providers_oauth2_scopemapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_OAUTH2_OAUTH2PROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_oauth2.oauth2provider\"") @source(name: "authentik_providers_oauth2_oauth2provider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_PROXY_PROXYPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_proxy.proxyprovider\"") @source(name: "authentik_providers_proxy_proxyprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_RADIUS_RADIUSPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_radius.radiusprovider\"") @source(name: "authentik_providers_radius_radiusprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_RADIUS_RADIUSPROVIDERPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_providers_radius.radiusproviderpropertymapping\"") @source(name: "authentik_providers_radius_radiusproviderpropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_SAML_SAMLPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_saml.samlprovider\"") @source(name: "authentik_providers_saml_samlprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_SAML_SAMLPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_providers_saml.samlpropertymapping\"") @source(name: "authentik_providers_saml_samlpropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_SCIM_SCIMPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_scim.scimprovider\"") @source(name: "authentik_providers_scim_scimprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_SCIM_SCIMMAPPING @enum(subgraph: "Authentik", value: "\"authentik_providers_scim.scimmapping\"") @source(name: "authentik_providers_scim_scimmapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_RBAC_ROLE @enum(subgraph: "Authentik", value: "\"authentik_rbac.role\"") @source(name: "authentik_rbac_role", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_KERBEROS_KERBEROSSOURCE @enum(subgraph: "Authentik", value: "\"authentik_sources_kerberos.kerberossource\"") @source(name: "authentik_sources_kerberos_kerberossource", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_KERBEROS_KERBEROSSOURCEPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_sources_kerberos.kerberossourcepropertymapping\"") @source(name: "authentik_sources_kerberos_kerberossourcepropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_KERBEROS_USERKERBEROSSOURCECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_sources_kerberos.userkerberossourceconnection\"") @source(name: "authentik_sources_kerberos_userkerberossourceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_KERBEROS_GROUPKERBEROSSOURCECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_sources_kerberos.groupkerberossourceconnection\"") @source(name: "authentik_sources_kerberos_groupkerberossourceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_LDAP_LDAPSOURCE @enum(subgraph: "Authentik", value: "\"authentik_sources_ldap.ldapsource\"") @source(name: "authentik_sources_ldap_ldapsource", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_LDAP_LDAPSOURCEPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_sources_ldap.ldapsourcepropertymapping\"") @source(name: "authentik_sources_ldap_ldapsourcepropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_OAUTH_OAUTHSOURCE @enum(subgraph: "Authentik", value: "\"authentik_sources_oauth.oauthsource\"") @source(name: "authentik_sources_oauth_oauthsource", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_OAUTH_OAUTHSOURCEPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_sources_oauth.oauthsourcepropertymapping\"") @source(name: "authentik_sources_oauth_oauthsourcepropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_OAUTH_USEROAUTHSOURCECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_sources_oauth.useroauthsourceconnection\"") @source(name: "authentik_sources_oauth_useroauthsourceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_OAUTH_GROUPOAUTHSOURCECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_sources_oauth.groupoauthsourceconnection\"") @source(name: "authentik_sources_oauth_groupoauthsourceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_PLEX_PLEXSOURCE @enum(subgraph: "Authentik", value: "\"authentik_sources_plex.plexsource\"") @source(name: "authentik_sources_plex_plexsource", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_PLEX_PLEXSOURCEPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_sources_plex.plexsourcepropertymapping\"") @source(name: "authentik_sources_plex_plexsourcepropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_PLEX_USERPLEXSOURCECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_sources_plex.userplexsourceconnection\"") @source(name: "authentik_sources_plex_userplexsourceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_PLEX_GROUPPLEXSOURCECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_sources_plex.groupplexsourceconnection\"") @source(name: "authentik_sources_plex_groupplexsourceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_SAML_SAMLSOURCE @enum(subgraph: "Authentik", value: "\"authentik_sources_saml.samlsource\"") @source(name: "authentik_sources_saml_samlsource", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_SAML_SAMLSOURCEPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_sources_saml.samlsourcepropertymapping\"") @source(name: "authentik_sources_saml_samlsourcepropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_SAML_USERSAMLSOURCECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_sources_saml.usersamlsourceconnection\"") @source(name: "authentik_sources_saml_usersamlsourceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_SAML_GROUPSAMLSOURCECONNECTION @enum(subgraph: "Authentik", value: "\"authentik_sources_saml.groupsamlsourceconnection\"") @source(name: "authentik_sources_saml_groupsamlsourceconnection", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_SCIM_SCIMSOURCE @enum(subgraph: "Authentik", value: "\"authentik_sources_scim.scimsource\"") @source(name: "authentik_sources_scim_scimsource", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_SCIM_SCIMSOURCEPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_sources_scim.scimsourcepropertymapping\"") @source(name: "authentik_sources_scim_scimsourcepropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_DUO_AUTHENTICATORDUOSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_duo.authenticatorduostage\"") @source(name: "authentik_stages_authenticator_duo_authenticatorduostage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_DUO_DUODEVICE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_duo.duodevice\"") @source(name: "authentik_stages_authenticator_duo_duodevice", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_SMS_AUTHENTICATORSMSSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_sms.authenticatorsmsstage\"") @source(name: "authentik_stages_authenticator_sms_authenticatorsmsstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_SMS_SMSDEVICE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_sms.smsdevice\"") @source(name: "authentik_stages_authenticator_sms_smsdevice", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_STATIC_AUTHENTICATORSTATICSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_static.authenticatorstaticstage\"") @source(name: "authentik_stages_authenticator_static_authenticatorstaticstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_STATIC_STATICDEVICE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_static.staticdevice\"") @source(name: "authentik_stages_authenticator_static_staticdevice", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_TOTP_AUTHENTICATORTOTPSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_totp.authenticatortotpstage\"") @source(name: "authentik_stages_authenticator_totp_authenticatortotpstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_TOTP_TOTPDEVICE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_totp.totpdevice\"") @source(name: "authentik_stages_authenticator_totp_totpdevice", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_VALIDATE_AUTHENTICATORVALIDATESTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_validate.authenticatorvalidatestage\"") @source(name: "authentik_stages_authenticator_validate_authenticatorvalidatestage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_WEBAUTHN_AUTHENTICATORWEBAUTHNSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_webauthn.authenticatorwebauthnstage\"") @source(name: "authentik_stages_authenticator_webauthn_authenticatorwebauthnstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_WEBAUTHN_WEBAUTHNDEVICE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_webauthn.webauthndevice\"") @source(name: "authentik_stages_authenticator_webauthn_webauthndevice", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_CAPTCHA_CAPTCHASTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_captcha.captchastage\"") @source(name: "authentik_stages_captcha_captchastage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_CONSENT_CONSENTSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_consent.consentstage\"") @source(name: "authentik_stages_consent_consentstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_CONSENT_USERCONSENT @enum(subgraph: "Authentik", value: "\"authentik_stages_consent.userconsent\"") @source(name: "authentik_stages_consent_userconsent", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_DENY_DENYSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_deny.denystage\"") @source(name: "authentik_stages_deny_denystage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_DUMMY_DUMMYSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_dummy.dummystage\"") @source(name: "authentik_stages_dummy_dummystage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_EMAIL_EMAILSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_email.emailstage\"") @source(name: "authentik_stages_email_emailstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_IDENTIFICATION_IDENTIFICATIONSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_identification.identificationstage\"") @source(name: "authentik_stages_identification_identificationstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_INVITATION_INVITATIONSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_invitation.invitationstage\"") @source(name: "authentik_stages_invitation_invitationstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_INVITATION_INVITATION @enum(subgraph: "Authentik", value: "\"authentik_stages_invitation.invitation\"") @source(name: "authentik_stages_invitation_invitation", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_PASSWORD_PASSWORDSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_password.passwordstage\"") @source(name: "authentik_stages_password_passwordstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_PROMPT_PROMPT @enum(subgraph: "Authentik", value: "\"authentik_stages_prompt.prompt\"") @source(name: "authentik_stages_prompt_prompt", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_PROMPT_PROMPTSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_prompt.promptstage\"") @source(name: "authentik_stages_prompt_promptstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_USER_DELETE_USERDELETESTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_user_delete.userdeletestage\"") @source(name: "authentik_stages_user_delete_userdeletestage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_USER_LOGIN_USERLOGINSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_user_login.userloginstage\"") @source(name: "authentik_stages_user_login_userloginstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_USER_LOGOUT_USERLOGOUTSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_user_logout.userlogoutstage\"") @source(name: "authentik_stages_user_logout_userlogoutstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_USER_WRITE_USERWRITESTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_user_write.userwritestage\"") @source(name: "authentik_stages_user_write_userwritestage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_BRANDS_BRAND @enum(subgraph: "Authentik", value: "\"authentik_brands.brand\"") @source(name: "authentik_brands_brand", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_BLUEPRINTS_BLUEPRINTINSTANCE @enum(subgraph: "Authentik", value: "\"authentik_blueprints.blueprintinstance\"") @source(name: "authentik_blueprints_blueprintinstance", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_CORE_GROUP @enum(subgraph: "Authentik", value: "\"authentik_core.group\"") @source(name: "authentik_core_group", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_CORE_USER @enum(subgraph: "Authentik", value: "\"authentik_core.user\"") @source(name: "authentik_core_user", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_CORE_APPLICATION @enum(subgraph: "Authentik", value: "\"authentik_core.application\"") @source(name: "authentik_core_application", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_CORE_TOKEN @enum(subgraph: "Authentik", value: "\"authentik_core.token\"") @source(name: "authentik_core_token", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_ENTERPRISE_LICENSE @enum(subgraph: "Authentik", value: "\"authentik_enterprise.license\"") @source(name: "authentik_enterprise_license", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_GOOGLE_WORKSPACE_GOOGLEWORKSPACEPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_google_workspace.googleworkspaceprovider\"") @source(name: "authentik_providers_google_workspace_googleworkspaceprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_GOOGLE_WORKSPACE_GOOGLEWORKSPACEPROVIDERMAPPING @enum(subgraph: "Authentik", value: "\"authentik_providers_google_workspace.googleworkspaceprovidermapping\"") @source(name: "authentik_providers_google_workspace_googleworkspaceprovidermapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_MICROSOFT_ENTRA_MICROSOFTENTRAPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_microsoft_entra.microsoftentraprovider\"") @source(name: "authentik_providers_microsoft_entra_microsoftentraprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_MICROSOFT_ENTRA_MICROSOFTENTRAPROVIDERMAPPING @enum(subgraph: "Authentik", value: "\"authentik_providers_microsoft_entra.microsoftentraprovidermapping\"") @source(name: "authentik_providers_microsoft_entra_microsoftentraprovidermapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_RAC_RACPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_rac.racprovider\"") @source(name: "authentik_providers_rac_racprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_RAC_ENDPOINT @enum(subgraph: "Authentik", value: "\"authentik_providers_rac.endpoint\"") @source(name: "authentik_providers_rac_endpoint", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_RAC_RACPROPERTYMAPPING @enum(subgraph: "Authentik", value: "\"authentik_providers_rac.racpropertymapping\"") @source(name: "authentik_providers_rac_racpropertymapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_AUTHENTICATOR_ENDPOINT_GDTC_AUTHENTICATORENDPOINTGDTCSTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_authenticator_endpoint_gdtc.authenticatorendpointgdtcstage\"") @source(name: "authentik_stages_authenticator_endpoint_gdtc_authenticatorendpointgdtcstage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_STAGES_SOURCE_SOURCESTAGE @enum(subgraph: "Authentik", value: "\"authentik_stages_source.sourcestage\"") @source(name: "authentik_stages_source_sourcestage", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_EVENTS_EVENT @enum(subgraph: "Authentik", value: "\"authentik_events.event\"") @source(name: "authentik_events_event", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_EVENTS_NOTIFICATIONTRANSPORT @enum(subgraph: "Authentik", value: "\"authentik_events.notificationtransport\"") @source(name: "authentik_events_notificationtransport", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_EVENTS_NOTIFICATION @enum(subgraph: "Authentik", value: "\"authentik_events.notification\"") @source(name: "authentik_events_notification", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_EVENTS_NOTIFICATIONRULE @enum(subgraph: "Authentik", value: "\"authentik_events.notificationrule\"") @source(name: "authentik_events_notificationrule", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_EVENTS_NOTIFICATIONWEBHOOKMAPPING @enum(subgraph: "Authentik", value: "\"authentik_events.notificationwebhookmapping\"") @source(name: "authentik_events_notificationwebhookmapping", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum CountryCodeEnum @join__type(graph: AUTHENTIK) {
  AF @join__enumValue(graph: AUTHENTIK)
  AX @join__enumValue(graph: AUTHENTIK)
  AL @join__enumValue(graph: AUTHENTIK)
  DZ @join__enumValue(graph: AUTHENTIK)
  AS @join__enumValue(graph: AUTHENTIK)
  AD @join__enumValue(graph: AUTHENTIK)
  AO @join__enumValue(graph: AUTHENTIK)
  AI @join__enumValue(graph: AUTHENTIK)
  AQ @join__enumValue(graph: AUTHENTIK)
  AG @join__enumValue(graph: AUTHENTIK)
  AR @join__enumValue(graph: AUTHENTIK)
  AM @join__enumValue(graph: AUTHENTIK)
  AW @join__enumValue(graph: AUTHENTIK)
  AU @join__enumValue(graph: AUTHENTIK)
  AT @join__enumValue(graph: AUTHENTIK)
  AZ @join__enumValue(graph: AUTHENTIK)
  BS @join__enumValue(graph: AUTHENTIK)
  BH @join__enumValue(graph: AUTHENTIK)
  BD @join__enumValue(graph: AUTHENTIK)
  BB @join__enumValue(graph: AUTHENTIK)
  BY @join__enumValue(graph: AUTHENTIK)
  BE @join__enumValue(graph: AUTHENTIK)
  BZ @join__enumValue(graph: AUTHENTIK)
  BJ @join__enumValue(graph: AUTHENTIK)
  BM @join__enumValue(graph: AUTHENTIK)
  BT @join__enumValue(graph: AUTHENTIK)
  BO @join__enumValue(graph: AUTHENTIK)
  BQ @join__enumValue(graph: AUTHENTIK)
  BA @join__enumValue(graph: AUTHENTIK)
  BW @join__enumValue(graph: AUTHENTIK)
  BV @join__enumValue(graph: AUTHENTIK)
  BR @join__enumValue(graph: AUTHENTIK)
  IO @join__enumValue(graph: AUTHENTIK)
  BN @join__enumValue(graph: AUTHENTIK)
  BG @join__enumValue(graph: AUTHENTIK)
  BF @join__enumValue(graph: AUTHENTIK)
  BI @join__enumValue(graph: AUTHENTIK)
  CV @join__enumValue(graph: AUTHENTIK)
  KH @join__enumValue(graph: AUTHENTIK)
  CM @join__enumValue(graph: AUTHENTIK)
  CA @join__enumValue(graph: AUTHENTIK)
  KY @join__enumValue(graph: AUTHENTIK)
  CF @join__enumValue(graph: AUTHENTIK)
  TD @join__enumValue(graph: AUTHENTIK)
  CL @join__enumValue(graph: AUTHENTIK)
  CN @join__enumValue(graph: AUTHENTIK)
  CX @join__enumValue(graph: AUTHENTIK)
  CC @join__enumValue(graph: AUTHENTIK)
  CO @join__enumValue(graph: AUTHENTIK)
  KM @join__enumValue(graph: AUTHENTIK)
  CG @join__enumValue(graph: AUTHENTIK)
  CD @join__enumValue(graph: AUTHENTIK)
  CK @join__enumValue(graph: AUTHENTIK)
  CR @join__enumValue(graph: AUTHENTIK)
  CI @join__enumValue(graph: AUTHENTIK)
  HR @join__enumValue(graph: AUTHENTIK)
  CU @join__enumValue(graph: AUTHENTIK)
  CW @join__enumValue(graph: AUTHENTIK)
  CY @join__enumValue(graph: AUTHENTIK)
  CZ @join__enumValue(graph: AUTHENTIK)
  DK @join__enumValue(graph: AUTHENTIK)
  DJ @join__enumValue(graph: AUTHENTIK)
  DM @join__enumValue(graph: AUTHENTIK)
  DO @join__enumValue(graph: AUTHENTIK)
  EC @join__enumValue(graph: AUTHENTIK)
  EG @join__enumValue(graph: AUTHENTIK)
  SV @join__enumValue(graph: AUTHENTIK)
  GQ @join__enumValue(graph: AUTHENTIK)
  ER @join__enumValue(graph: AUTHENTIK)
  EE @join__enumValue(graph: AUTHENTIK)
  SZ @join__enumValue(graph: AUTHENTIK)
  ET @join__enumValue(graph: AUTHENTIK)
  FK @join__enumValue(graph: AUTHENTIK)
  FO @join__enumValue(graph: AUTHENTIK)
  FJ @join__enumValue(graph: AUTHENTIK)
  FI @join__enumValue(graph: AUTHENTIK)
  FR @join__enumValue(graph: AUTHENTIK)
  GF @join__enumValue(graph: AUTHENTIK)
  PF @join__enumValue(graph: AUTHENTIK)
  TF @join__enumValue(graph: AUTHENTIK)
  GA @join__enumValue(graph: AUTHENTIK)
  GM @join__enumValue(graph: AUTHENTIK)
  GE @join__enumValue(graph: AUTHENTIK)
  DE @join__enumValue(graph: AUTHENTIK)
  GH @join__enumValue(graph: AUTHENTIK)
  GI @join__enumValue(graph: AUTHENTIK)
  GR @join__enumValue(graph: AUTHENTIK)
  GL @join__enumValue(graph: AUTHENTIK)
  GD @join__enumValue(graph: AUTHENTIK)
  GP @join__enumValue(graph: AUTHENTIK)
  GU @join__enumValue(graph: AUTHENTIK)
  GT @join__enumValue(graph: AUTHENTIK)
  GG @join__enumValue(graph: AUTHENTIK)
  GN @join__enumValue(graph: AUTHENTIK)
  GW @join__enumValue(graph: AUTHENTIK)
  GY @join__enumValue(graph: AUTHENTIK)
  HT @join__enumValue(graph: AUTHENTIK)
  HM @join__enumValue(graph: AUTHENTIK)
  VA @join__enumValue(graph: AUTHENTIK)
  HN @join__enumValue(graph: AUTHENTIK)
  HK @join__enumValue(graph: AUTHENTIK)
  HU @join__enumValue(graph: AUTHENTIK)
  IS @join__enumValue(graph: AUTHENTIK)
  IN @join__enumValue(graph: AUTHENTIK)
  ID @join__enumValue(graph: AUTHENTIK)
  IR @join__enumValue(graph: AUTHENTIK)
  IQ @join__enumValue(graph: AUTHENTIK)
  IE @join__enumValue(graph: AUTHENTIK)
  IM @join__enumValue(graph: AUTHENTIK)
  IL @join__enumValue(graph: AUTHENTIK)
  IT @join__enumValue(graph: AUTHENTIK)
  JM @join__enumValue(graph: AUTHENTIK)
  JP @join__enumValue(graph: AUTHENTIK)
  JE @join__enumValue(graph: AUTHENTIK)
  JO @join__enumValue(graph: AUTHENTIK)
  KZ @join__enumValue(graph: AUTHENTIK)
  KE @join__enumValue(graph: AUTHENTIK)
  KI @join__enumValue(graph: AUTHENTIK)
  KW @join__enumValue(graph: AUTHENTIK)
  KG @join__enumValue(graph: AUTHENTIK)
  LA @join__enumValue(graph: AUTHENTIK)
  LV @join__enumValue(graph: AUTHENTIK)
  LB @join__enumValue(graph: AUTHENTIK)
  LS @join__enumValue(graph: AUTHENTIK)
  LR @join__enumValue(graph: AUTHENTIK)
  LY @join__enumValue(graph: AUTHENTIK)
  LI @join__enumValue(graph: AUTHENTIK)
  LT @join__enumValue(graph: AUTHENTIK)
  LU @join__enumValue(graph: AUTHENTIK)
  MO @join__enumValue(graph: AUTHENTIK)
  MG @join__enumValue(graph: AUTHENTIK)
  MW @join__enumValue(graph: AUTHENTIK)
  MY @join__enumValue(graph: AUTHENTIK)
  MV @join__enumValue(graph: AUTHENTIK)
  ML @join__enumValue(graph: AUTHENTIK)
  MT @join__enumValue(graph: AUTHENTIK)
  MH @join__enumValue(graph: AUTHENTIK)
  MQ @join__enumValue(graph: AUTHENTIK)
  MR @join__enumValue(graph: AUTHENTIK)
  MU @join__enumValue(graph: AUTHENTIK)
  YT @join__enumValue(graph: AUTHENTIK)
  MX @join__enumValue(graph: AUTHENTIK)
  FM @join__enumValue(graph: AUTHENTIK)
  MD @join__enumValue(graph: AUTHENTIK)
  MC @join__enumValue(graph: AUTHENTIK)
  MN @join__enumValue(graph: AUTHENTIK)
  ME @join__enumValue(graph: AUTHENTIK)
  MS @join__enumValue(graph: AUTHENTIK)
  MA @join__enumValue(graph: AUTHENTIK)
  MZ @join__enumValue(graph: AUTHENTIK)
  MM @join__enumValue(graph: AUTHENTIK)
  NA @join__enumValue(graph: AUTHENTIK)
  NR @join__enumValue(graph: AUTHENTIK)
  NP @join__enumValue(graph: AUTHENTIK)
  NL @join__enumValue(graph: AUTHENTIK)
  NC @join__enumValue(graph: AUTHENTIK)
  NZ @join__enumValue(graph: AUTHENTIK)
  NI @join__enumValue(graph: AUTHENTIK)
  NE @join__enumValue(graph: AUTHENTIK)
  NG @join__enumValue(graph: AUTHENTIK)
  NU @join__enumValue(graph: AUTHENTIK)
  NF @join__enumValue(graph: AUTHENTIK)
  KP @join__enumValue(graph: AUTHENTIK)
  MK @join__enumValue(graph: AUTHENTIK)
  MP @join__enumValue(graph: AUTHENTIK)
  NO @join__enumValue(graph: AUTHENTIK)
  OM @join__enumValue(graph: AUTHENTIK)
  PK @join__enumValue(graph: AUTHENTIK)
  PW @join__enumValue(graph: AUTHENTIK)
  PS @join__enumValue(graph: AUTHENTIK)
  PA @join__enumValue(graph: AUTHENTIK)
  PG @join__enumValue(graph: AUTHENTIK)
  PY @join__enumValue(graph: AUTHENTIK)
  PE @join__enumValue(graph: AUTHENTIK)
  PH @join__enumValue(graph: AUTHENTIK)
  PN @join__enumValue(graph: AUTHENTIK)
  PL @join__enumValue(graph: AUTHENTIK)
  PT @join__enumValue(graph: AUTHENTIK)
  PR @join__enumValue(graph: AUTHENTIK)
  QA @join__enumValue(graph: AUTHENTIK)
  RE @join__enumValue(graph: AUTHENTIK)
  RO @join__enumValue(graph: AUTHENTIK)
  RU @join__enumValue(graph: AUTHENTIK)
  RW @join__enumValue(graph: AUTHENTIK)
  BL @join__enumValue(graph: AUTHENTIK)
  SH @join__enumValue(graph: AUTHENTIK)
  KN @join__enumValue(graph: AUTHENTIK)
  LC @join__enumValue(graph: AUTHENTIK)
  MF @join__enumValue(graph: AUTHENTIK)
  PM @join__enumValue(graph: AUTHENTIK)
  VC @join__enumValue(graph: AUTHENTIK)
  WS @join__enumValue(graph: AUTHENTIK)
  SM @join__enumValue(graph: AUTHENTIK)
  ST @join__enumValue(graph: AUTHENTIK)
  SA @join__enumValue(graph: AUTHENTIK)
  SN @join__enumValue(graph: AUTHENTIK)
  RS @join__enumValue(graph: AUTHENTIK)
  SC @join__enumValue(graph: AUTHENTIK)
  SL @join__enumValue(graph: AUTHENTIK)
  SG @join__enumValue(graph: AUTHENTIK)
  SX @join__enumValue(graph: AUTHENTIK)
  SK @join__enumValue(graph: AUTHENTIK)
  SI @join__enumValue(graph: AUTHENTIK)
  SB @join__enumValue(graph: AUTHENTIK)
  SO @join__enumValue(graph: AUTHENTIK)
  ZA @join__enumValue(graph: AUTHENTIK)
  GS @join__enumValue(graph: AUTHENTIK)
  KR @join__enumValue(graph: AUTHENTIK)
  SS @join__enumValue(graph: AUTHENTIK)
  ES @join__enumValue(graph: AUTHENTIK)
  LK @join__enumValue(graph: AUTHENTIK)
  SD @join__enumValue(graph: AUTHENTIK)
  SR @join__enumValue(graph: AUTHENTIK)
  SJ @join__enumValue(graph: AUTHENTIK)
  SE @join__enumValue(graph: AUTHENTIK)
  CH @join__enumValue(graph: AUTHENTIK)
  SY @join__enumValue(graph: AUTHENTIK)
  TW @join__enumValue(graph: AUTHENTIK)
  TJ @join__enumValue(graph: AUTHENTIK)
  TZ @join__enumValue(graph: AUTHENTIK)
  TH @join__enumValue(graph: AUTHENTIK)
  TL @join__enumValue(graph: AUTHENTIK)
  TG @join__enumValue(graph: AUTHENTIK)
  TK @join__enumValue(graph: AUTHENTIK)
  TO @join__enumValue(graph: AUTHENTIK)
  TT @join__enumValue(graph: AUTHENTIK)
  TN @join__enumValue(graph: AUTHENTIK)
  TR @join__enumValue(graph: AUTHENTIK)
  TM @join__enumValue(graph: AUTHENTIK)
  TC @join__enumValue(graph: AUTHENTIK)
  TV @join__enumValue(graph: AUTHENTIK)
  UG @join__enumValue(graph: AUTHENTIK)
  UA @join__enumValue(graph: AUTHENTIK)
  AE @join__enumValue(graph: AUTHENTIK)
  GB @join__enumValue(graph: AUTHENTIK)
  UM @join__enumValue(graph: AUTHENTIK)
  US @join__enumValue(graph: AUTHENTIK)
  UY @join__enumValue(graph: AUTHENTIK)
  UZ @join__enumValue(graph: AUTHENTIK)
  VU @join__enumValue(graph: AUTHENTIK)
  VE @join__enumValue(graph: AUTHENTIK)
  VN @join__enumValue(graph: AUTHENTIK)
  VG @join__enumValue(graph: AUTHENTIK)
  VI @join__enumValue(graph: AUTHENTIK)
  WF @join__enumValue(graph: AUTHENTIK)
  EH @join__enumValue(graph: AUTHENTIK)
  YE @join__enumValue(graph: AUTHENTIK)
  ZM @join__enumValue(graph: AUTHENTIK)
  ZW @join__enumValue(graph: AUTHENTIK)
}

enum OutgoingSyncDeleteAction @join__type(graph: AUTHENTIK) {
  DO_NOTHING @source(name: "do_nothing", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  DELETE @source(name: "delete", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SUSPEND @source(name: "suspend", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum DigestAlgorithmEnum @join__type(graph: AUTHENTIK) {
  HTTP___WWW_W3_ORG_2000_09_XMLDSIG_POUND_SHA1 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2000/09/xmldsig#sha1\"") @source(name: "http___www_w3_org_2000_09_xmldsig_POUND_sha1", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLENC_POUND_SHA256 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmlenc#sha256\"") @source(name: "http___www_w3_org_2001_04_xmlenc_POUND_sha256", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLDSIG_MORE_POUND_SHA384 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmldsig-more#sha384\"") @source(name: "http___www_w3_org_2001_04_xmldsig_more_POUND_sha384", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLENC_POUND_SHA512 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmlenc#sha512\"") @source(name: "http___www_w3_org_2001_04_xmlenc_POUND_sha512", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum SignatureAlgorithmEnum @join__type(graph: AUTHENTIK) {
  HTTP___WWW_W3_ORG_2000_09_XMLDSIG_POUND_RSA_SHA1 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2000/09/xmldsig#rsa-sha1\"") @source(name: "http___www_w3_org_2000_09_xmldsig_POUND_rsa_sha1", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLDSIG_MORE_POUND_RSA_SHA256 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\"") @source(name: "http___www_w3_org_2001_04_xmldsig_more_POUND_rsa_sha256", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLDSIG_MORE_POUND_RSA_SHA384 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha384\"") @source(name: "http___www_w3_org_2001_04_xmldsig_more_POUND_rsa_sha384", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLDSIG_MORE_POUND_RSA_SHA512 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha512\"") @source(name: "http___www_w3_org_2001_04_xmldsig_more_POUND_rsa_sha512", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLDSIG_MORE_POUND_ECDSA_SHA1 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1\"") @source(name: "http___www_w3_org_2001_04_xmldsig_more_POUND_ecdsa_sha1", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLDSIG_MORE_POUND_ECDSA_SHA256 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256\"") @source(name: "http___www_w3_org_2001_04_xmldsig_more_POUND_ecdsa_sha256", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLDSIG_MORE_POUND_ECDSA_SHA384 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384\"") @source(name: "http___www_w3_org_2001_04_xmldsig_more_POUND_ecdsa_sha384", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2001_04_XMLDSIG_MORE_POUND_ECDSA_SHA512 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512\"") @source(name: "http___www_w3_org_2001_04_xmldsig_more_POUND_ecdsa_sha512", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  HTTP___WWW_W3_ORG_2000_09_XMLDSIG_POUND_DSA_SHA1 @enum(subgraph: "Authentik", value: "\"http://www.w3.org/2000/09/xmldsig#dsa-sha1\"") @source(name: "http___www_w3_org_2000_09_xmldsig_POUND_dsa_sha1", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum SpBindingEnum @join__type(graph: AUTHENTIK) {
  REDIRECT @source(name: "redirect", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  POST @source(name: "post", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum ProtocolEnum @join__type(graph: AUTHENTIK) {
  RDP @source(name: "rdp", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  VNC @source(name: "vnc", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SSH @source(name: "ssh", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum AuthModeEnum @join__type(graph: AUTHENTIK) {
  STATIC @source(name: "static", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  PROMPT @source(name: "prompt", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum CapabilitiesEnum @join__type(graph: AUTHENTIK) {
  CAN_SAVE_MEDIA @source(name: "can_save_media", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  CAN_GEO_IP @source(name: "can_geo_ip", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  CAN_ASN @source(name: "can_asn", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  CAN_IMPERSONATE @source(name: "can_impersonate", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  CAN_DEBUG @source(name: "can_debug", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  IS_ENTERPRISE @source(name: "is_enterprise", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum UserMatchingModeEnum @join__type(graph: AUTHENTIK) {
  IDENTIFIER @source(name: "identifier", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  EMAIL_LINK @source(name: "email_link", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  EMAIL_DENY @source(name: "email_deny", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  USERNAME_LINK @source(name: "username_link", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  USERNAME_DENY @source(name: "username_deny", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum GroupMatchingModeEnum @join__type(graph: AUTHENTIK) {
  IDENTIFIER @source(name: "identifier", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  NAME_LINK @source(name: "name_link", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  NAME_DENY @source(name: "name_deny", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum ProviderTypeEnum @join__type(graph: AUTHENTIK) {
  APPLE @source(name: "apple", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  OPENIDCONNECT @source(name: "openidconnect", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AZUREAD @source(name: "azuread", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  DISCORD @source(name: "discord", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  FACEBOOK @source(name: "facebook", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  GITHUB @source(name: "github", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  GITLAB @source(name: "gitlab", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  GOOGLE @source(name: "google", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  MAILCOW @source(name: "mailcow", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  OKTA @source(name: "okta", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  PATREON @source(name: "patreon", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  REDDIT @source(name: "reddit", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  TWITCH @source(name: "twitch", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  TWITTER @source(name: "twitter", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum NameIdPolicyEnum @join__type(graph: AUTHENTIK) {
  URN_OASIS_NAMES_TC_SAML_1_1_NAMEID_FORMAT_EMAILADDRESS @enum(subgraph: "Authentik", value: "\"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\"") @source(name: "urn_oasis_names_tc_SAML_1_1_nameid_format_emailAddress", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  URN_OASIS_NAMES_TC_SAML_2_0_NAMEID_FORMAT_PERSISTENT @enum(subgraph: "Authentik", value: "\"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent\"") @source(name: "urn_oasis_names_tc_SAML_2_0_nameid_format_persistent", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  URN_OASIS_NAMES_TC_SAML_1_1_NAMEID_FORMAT_X509SUBJECTNAME @enum(subgraph: "Authentik", value: "\"urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName\"") @source(name: "urn_oasis_names_tc_SAML_1_1_nameid_format_X509SubjectName", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  URN_OASIS_NAMES_TC_SAML_2_0_NAMEID_FORMAT_WINDOWSDOMAINQUALIFIEDNAME @enum(subgraph: "Authentik", value: "\"urn:oasis:names:tc:SAML:2.0:nameid-format:WindowsDomainQualifiedName\"") @source(name: "urn_oasis_names_tc_SAML_2_0_nameid_format_WindowsDomainQualifiedName", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  URN_OASIS_NAMES_TC_SAML_2_0_NAMEID_FORMAT_TRANSIENT @enum(subgraph: "Authentik", value: "\"urn:oasis:names:tc:SAML:2.0:nameid-format:transient\"") @source(name: "urn_oasis_names_tc_SAML_2_0_nameid_format_transient", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum BindingTypeEnum @join__type(graph: AUTHENTIK) {
  REDIRECT @join__enumValue(graph: AUTHENTIK)
  POST @join__enumValue(graph: AUTHENTIK)
  POST_AUTO @join__enumValue(graph: AUTHENTIK)
}

enum ProviderEnum @join__type(graph: AUTHENTIK) {
  TWILIO @source(name: "twilio", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  GENERIC @source(name: "generic", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum AuthTypeEnum @join__type(graph: AUTHENTIK) {
  BASIC @source(name: "basic", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  BEARER @source(name: "bearer", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum DigitsEnum @join__type(graph: AUTHENTIK) {
  _6 @enum(subgraph: "Authentik", value: "\"6\"") @join__enumValue(graph: AUTHENTIK)
  _8 @enum(subgraph: "Authentik", value: "\"8\"") @join__enumValue(graph: AUTHENTIK)
}

enum NotConfiguredActionEnum @join__type(graph: AUTHENTIK) {
  SKIP @source(name: "skip", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  DENY @source(name: "deny", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  CONFIGURE @source(name: "configure", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum DeviceClassesEnum @join__type(graph: AUTHENTIK) {
  STATIC @source(name: "static", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  TOTP @source(name: "totp", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  WEBAUTHN @source(name: "webauthn", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  DUO @source(name: "duo", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  SMS @source(name: "sms", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum UserVerificationEnum @join__type(graph: AUTHENTIK) {
  REQUIRED @source(name: "required", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  PREFERRED @source(name: "preferred", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  DISCOURAGED @source(name: "discouraged", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum AuthenticatorAttachmentEnum @join__type(graph: AUTHENTIK) {
  PLATFORM @source(name: "platform", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  CROSS_PLATFORM @enum(subgraph: "Authentik", value: "\"cross-platform\"") @source(name: "cross_platform", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum ResidentKeyRequirementEnum @join__type(graph: AUTHENTIK) {
  DISCOURAGED @source(name: "discouraged", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  PREFERRED @source(name: "preferred", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  REQUIRED @source(name: "required", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum ConsentStageModeEnum @join__type(graph: AUTHENTIK) {
  ALWAYS_REQUIRE @source(name: "always_require", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  PERMANENT @source(name: "permanent", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  EXPIRING @source(name: "expiring", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum UserFieldsEnum @join__type(graph: AUTHENTIK) {
  EMAIL @source(name: "email", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  USERNAME @source(name: "username", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  UPN @source(name: "upn", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum BackendsEnum @join__type(graph: AUTHENTIK) {
  AUTHENTIK_CORE_AUTH_INBUILTBACKEND @enum(subgraph: "Authentik", value: "\"authentik.core.auth.InbuiltBackend\"") @source(name: "authentik_core_auth_InbuiltBackend", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_CORE_AUTH_TOKENBACKEND @enum(subgraph: "Authentik", value: "\"authentik.core.auth.TokenBackend\"") @source(name: "authentik_core_auth_TokenBackend", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_LDAP_AUTH_LDAPBACKEND @enum(subgraph: "Authentik", value: "\"authentik.sources.ldap.auth.LDAPBackend\"") @source(name: "authentik_sources_ldap_auth_LDAPBackend", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_SOURCES_KERBEROS_AUTH_KERBEROSBACKEND @enum(subgraph: "Authentik", value: "\"authentik.sources.kerberos.auth.KerberosBackend\"") @source(name: "authentik_sources_kerberos_auth_KerberosBackend", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum NetworkBindingEnum @join__type(graph: AUTHENTIK) {
  NO_BINDING @source(name: "no_binding", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  BIND_ASN @source(name: "bind_asn", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  BIND_ASN_NETWORK @source(name: "bind_asn_network", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  BIND_ASN_NETWORK_IP @source(name: "bind_asn_network_ip", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum GeoipBindingEnum @join__type(graph: AUTHENTIK) {
  NO_BINDING @source(name: "no_binding", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  BIND_CONTINENT @source(name: "bind_continent", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  BIND_CONTINENT_COUNTRY @source(name: "bind_continent_country", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  BIND_CONTINENT_COUNTRY_CITY @source(name: "bind_continent_country_city", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum UserCreationModeEnum @join__type(graph: AUTHENTIK) {
  NEVER_CREATE @source(name: "never_create", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  CREATE_WHEN_REQUIRED @source(name: "create_when_required", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  ALWAYS_CREATE @source(name: "always_create", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum ProviderModelEnum @join__type(graph: AUTHENTIK) {
  AUTHENTIK_PROVIDERS_GOOGLE_WORKSPACE_GOOGLEWORKSPACEPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_google_workspace.googleworkspaceprovider\"") @source(name: "authentik_providers_google_workspace_googleworkspaceprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_LDAP_LDAPPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_ldap.ldapprovider\"") @source(name: "authentik_providers_ldap_ldapprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_MICROSOFT_ENTRA_MICROSOFTENTRAPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_microsoft_entra.microsoftentraprovider\"") @source(name: "authentik_providers_microsoft_entra_microsoftentraprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_OAUTH2_OAUTH2PROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_oauth2.oauth2provider\"") @source(name: "authentik_providers_oauth2_oauth2provider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_PROXY_PROXYPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_proxy.proxyprovider\"") @source(name: "authentik_providers_proxy_proxyprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_RAC_RACPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_rac.racprovider\"") @source(name: "authentik_providers_rac_racprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_RADIUS_RADIUSPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_radius.radiusprovider\"") @source(name: "authentik_providers_radius_radiusprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_SAML_SAMLPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_saml.samlprovider\"") @source(name: "authentik_providers_saml_samlprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_PROVIDERS_SCIM_SCIMPROVIDER @enum(subgraph: "Authentik", value: "\"authentik_providers_scim.scimprovider\"") @source(name: "authentik_providers_scim_scimprovider", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum AlgEnum @join__type(graph: AUTHENTIK) {
  RSA @source(name: "rsa", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  ECDSA @source(name: "ecdsa", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum SyncObjectModelEnum @join__type(graph: AUTHENTIK) {
  AUTHENTIK_CORE_MODELS_USER @enum(subgraph: "Authentik", value: "\"authentik.core.models.User\"") @source(name: "authentik_core_models_User", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  AUTHENTIK_CORE_MODELS_GROUP @enum(subgraph: "Authentik", value: "\"authentik.core.models.Group\"") @source(name: "authentik_core_models_Group", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum DuoResponseEnum @join__type(graph: AUTHENTIK) {
  SUCCESS @source(name: "success", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  WAITING @source(name: "waiting", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
  INVALID @source(name: "invalid", subgraph: "Authentik") @join__enumValue(graph: AUTHENTIK)
}

enum HttpMethod @source(name: "HTTPMethod", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  GET @join__enumValue(graph: AUTHENTIK)
  HEAD @join__enumValue(graph: AUTHENTIK)
  POST @join__enumValue(graph: AUTHENTIK)
  PUT @join__enumValue(graph: AUTHENTIK)
  DELETE @join__enumValue(graph: AUTHENTIK)
  CONNECT @join__enumValue(graph: AUTHENTIK)
  OPTIONS @join__enumValue(graph: AUTHENTIK)
  TRACE @join__enumValue(graph: AUTHENTIK)
  PATCH @join__enumValue(graph: AUTHENTIK)
}

"""Formats d'export des réponses"""
enum ChurrosAnswersExportFormats @source(name: "AnswersExportFormats", subgraph: "Churros") @join__type(graph: CHURROS) {
  """
  Format CSV (séparateur de colonnes: virgule, séparateur de lignes: saut de ligne)
  """
  CSV @join__enumValue(graph: CHURROS)
  """
  Format TSV (séparateur de colonnes: tabulation, séparateur de lignes: saut de ligne)
  """
  TSV @join__enumValue(graph: CHURROS)
}

enum ChurrosVisibility @source(name: "Visibility", subgraph: "Churros") @join__type(graph: CHURROS) {
  GroupRestricted @join__enumValue(graph: CHURROS)
  Private @join__enumValue(graph: CHURROS)
  Public @join__enumValue(graph: CHURROS)
  SchoolRestricted @join__enumValue(graph: CHURROS)
  Unlisted @join__enumValue(graph: CHURROS)
}

enum ChurrosBookingState @source(name: "BookingState", subgraph: "Churros") @join__type(graph: CHURROS) {
  """Payée"""
  Paid @join__enumValue(graph: CHURROS)
  """Non payée et non scannée"""
  Unpaid @join__enumValue(graph: CHURROS)
  """Scannée"""
  Verified @join__enumValue(graph: CHURROS)
}

"""Contrainte booléenne, à trois états"""
enum ChurrosBooleanConstraint @source(name: "BooleanConstraint", subgraph: "Churros") @join__type(graph: CHURROS) {
  """Ne pas prendre en compte la contrainte"""
  DontCare @join__enumValue(graph: CHURROS)
  """Obliger la contrainte à ne pas être remplie"""
  Not @join__enumValue(graph: CHURROS)
  """Obliger la contrainte à être remplie"""
  Only @join__enumValue(graph: CHURROS)
}

enum ChurrosCredentialType @source(name: "CredentialType", subgraph: "Churros") @join__type(graph: CHURROS) {
  Google @join__enumValue(graph: CHURROS)
  GroupAccessToken @join__enumValue(graph: CHURROS)
  Password @join__enumValue(graph: CHURROS)
  Token @join__enumValue(graph: CHURROS)
}

"""Le dialecte CSV à utiliser"""
enum ChurrosCsvDialect @source(name: "CsvDialect", subgraph: "Churros") @join__type(graph: CHURROS) {
  """
  Dialecte CSV pour Excel: séparé par des point-virgules, et toujours guillemeté.
  """
  Excel @join__enumValue(graph: CHURROS)
  """
  Dialecte CSV standard: séparé par des virgules, avec des guillemets quand nécéssaire seulement. S'ouvre sans soucis dans la plupart des logiciels de tableur, excepté Excel.
  """
  Standard @join__enumValue(graph: CHURROS)
}

enum ChurrosDocumentType @source(name: "DocumentType", subgraph: "Churros") @join__type(graph: CHURROS) {
  CourseNotes @join__enumValue(graph: CHURROS)
  CourseSlides @join__enumValue(graph: CHURROS)
  Exam @join__enumValue(graph: CHURROS)
  Exercises @join__enumValue(graph: CHURROS)
  GradedExercises @join__enumValue(graph: CHURROS)
  Miscellaneous @join__enumValue(graph: CHURROS)
  Practical @join__enumValue(graph: CHURROS)
  PracticalExam @join__enumValue(graph: CHURROS)
  Summary @join__enumValue(graph: CHURROS)
}

enum ChurrosDuplicateLinksAction @source(name: "DuplicateLinksAction", subgraph: "Churros") @join__type(graph: CHURROS) {
  """Provoquer une erreur"""
  Error @join__enumValue(graph: CHURROS)
  """Remplacer l'ancien lien"""
  Replace @join__enumValue(graph: CHURROS)
  """Ne pas ajouter"""
  Skip @join__enumValue(graph: CHURROS)
}

enum ChurrosPromotionType @source(name: "PromotionType", subgraph: "Churros") @join__type(graph: CHURROS) {
  SIMPPS @join__enumValue(graph: CHURROS)
}

enum ChurrosEventFrequency @source(name: "EventFrequency", subgraph: "Churros") @join__type(graph: CHURROS) {
  Biweekly @join__enumValue(graph: CHURROS)
  Monthly @join__enumValue(graph: CHURROS)
  Once @join__enumValue(graph: CHURROS)
  Weekly @join__enumValue(graph: CHURROS)
}

enum ChurrosEventManagerPowerLevel @source(name: "EventManagerPowerLevel", subgraph: "Churros") @join__type(graph: CHURROS) {
  Edit @join__enumValue(graph: CHURROS)
  EditPermissions @join__enumValue(graph: CHURROS)
  ReadOnly @join__enumValue(graph: CHURROS)
  ScanTickets @join__enumValue(graph: CHURROS)
}

enum ChurrosGroupType @source(name: "GroupType", subgraph: "Churros") @join__type(graph: CHURROS) {
  Association @join__enumValue(graph: CHURROS)
  Club @join__enumValue(graph: CHURROS)
  Group @join__enumValue(graph: CHURROS)
  Integration @join__enumValue(graph: CHURROS)
  List @join__enumValue(graph: CHURROS)
  StudentAssociationSection @join__enumValue(graph: CHURROS)
}

enum ChurrosGroupJoinPolicy @source(name: "GroupJoinPolicy", subgraph: "Churros") @join__type(graph: CHURROS) {
  """
  Seul le bureau (et autres ayant les permissions) peut ajouter des membres
  """
  Closed @join__enumValue(graph: CHURROS)
  """Tout le monde peut rejoindre le groupe"""
  Open @join__enumValue(graph: CHURROS)
}

enum ChurrosIssueState @source(name: "IssueState", subgraph: "Churros") @join__type(graph: CHURROS) {
  Closed @join__enumValue(graph: CHURROS)
  Deployed @join__enumValue(graph: CHURROS)
  Open @join__enumValue(graph: CHURROS)
}

enum ChurrosLogoSourceType @source(name: "LogoSourceType", subgraph: "Churros") @join__type(graph: CHURROS) {
  ExternalLink @join__enumValue(graph: CHURROS)
  GroupLogo @join__enumValue(graph: CHURROS)
  Icon @join__enumValue(graph: CHURROS)
  InternalLink @join__enumValue(graph: CHURROS)
}

enum ChurrosPaymentMethod @source(name: "PaymentMethod", subgraph: "Churros") @join__type(graph: CHURROS) {
  """Carte bancaire"""
  Card @join__enumValue(graph: CHURROS)
  """Espèces"""
  Cash @join__enumValue(graph: CHURROS)
  """Chèque"""
  Check @join__enumValue(graph: CHURROS)
  """Paiement externe à Churros"""
  External @join__enumValue(graph: CHURROS)
  """Lydia"""
  Lydia @join__enumValue(graph: CHURROS)
  """Autre"""
  Other @join__enumValue(graph: CHURROS)
  """PayPal"""
  PayPal @join__enumValue(graph: CHURROS) @deprecated(reason: "Non implémenté")
  """Virement"""
  Transfer @join__enumValue(graph: CHURROS)
}

"""Différentes variantes pour un même thème"""
enum ChurrosThemeVariant @source(name: "ThemeVariant", subgraph: "Churros") @join__type(graph: CHURROS) {
  """Variante sombre"""
  Dark @join__enumValue(graph: CHURROS)
  """Variante claire"""
  Light @join__enumValue(graph: CHURROS)
}

"""Les différentes variables qu'un thème peut définir"""
enum ChurrosThemeVariable @source(name: "ThemeVariable", subgraph: "Churros") @join__type(graph: CHURROS) {
  """Couleur de fond"""
  ColorBackground @join__enumValue(graph: CHURROS)
  """Couleur de fond moins intense"""
  ColorBackground2 @join__enumValue(graph: CHURROS)
  """Couleur de fond moins intense que ColorBackground2"""
  ColorBackground3 @join__enumValue(graph: CHURROS)
  """Couleur de fond moins intense que ColorBackground3"""
  ColorBackground4 @join__enumValue(graph: CHURROS)
  """Couleur des erreurs ou choses dangereuses (souvent rouge)"""
  ColorDanger @join__enumValue(graph: CHURROS)
  """Couleur de fond pour ColorDanger"""
  ColorDangerBackground @join__enumValue(graph: CHURROS)
  """Couleur d'avant plan"""
  ColorForeground @join__enumValue(graph: CHURROS)
  """Couleur d'avant plan moins intense"""
  ColorMuted @join__enumValue(graph: CHURROS)
  """Couleur principale"""
  ColorPrimary @join__enumValue(graph: CHURROS)
  """Couleur de fond pour ColorPrimary"""
  ColorPrimaryBackground @join__enumValue(graph: CHURROS)
  """Couleur d'avant plan moins intense que ColorMuted"""
  ColorShy @join__enumValue(graph: CHURROS)
  """Couleur des éléments de succès (souvent vert)"""
  ColorSuccess @join__enumValue(graph: CHURROS)
  """Couleur de fond pour ColorSuccess"""
  ColorSuccessBackground @join__enumValue(graph: CHURROS)
  """Couleurs des avertissements"""
  ColorWarning @join__enumValue(graph: CHURROS)
  """Couleur de fond pour ColorWarning"""
  ColorWarningBackground @join__enumValue(graph: CHURROS)
  """Image à utiliser en fond de la barre de navigation en bas (sur mobile)"""
  ImageBackgroundNavbarBottom @join__enumValue(graph: CHURROS)
  """
  Image à utiliser en fond de la barre de navigation en haut (s'affiche seulement sur mobile)
  """
  ImageBackgroundNavbarTop @join__enumValue(graph: CHURROS)
  """
  Image à utiliser à la place du logo dans la barre de navigation sur le côté (sur ordinateur)
  """
  ImageLogoNavbarSide @join__enumValue(graph: CHURROS)
  """
  Image à utiliser à la place du logo dans la barre de navigation en haut
  """
  ImageLogoNavbarTop @join__enumValue(graph: CHURROS)
  """Motif à répéter en fond de l'application"""
  PatternBackground @join__enumValue(graph: CHURROS)
}

enum ChurrosNotificationChannel @source(name: "NotificationChannel", subgraph: "Churros") @join__type(graph: CHURROS) {
  Articles @join__enumValue(graph: CHURROS)
  Comments @join__enumValue(graph: CHURROS)
  GodparentRequests @join__enumValue(graph: CHURROS)
  GroupBoard @join__enumValue(graph: CHURROS)
  Mandatory @join__enumValue(graph: CHURROS)
  Other @join__enumValue(graph: CHURROS)
  Permissions @join__enumValue(graph: CHURROS)
  Shotguns @join__enumValue(graph: CHURROS)
}

"""
Politique de comptage des places pour un billet. Permet de décider quand est-ce que l'on compte un billet dans le calcul des places restantes
"""
enum ChurrosTicketCountingPolicy @source(name: "TicketCountingPolicy", subgraph: "Churros") @join__type(graph: CHURROS) {
  """On compte le billet dès qu'il est réservé"""
  OnBooked @join__enumValue(graph: CHURROS)
  """On compte le billet seulement une fois payé"""
  OnPaid @join__enumValue(graph: CHURROS)
}

"""Le type de question"""
enum ChurrosQuestionKind @source(name: "QuestionKind", subgraph: "Churros") @join__type(graph: CHURROS) {
  """La réponse est une date, sans heure associée."""
  Date @join__enumValue(graph: CHURROS)
  """La réponse est un fichier mis en ligne par l'utilisateur·ice."""
  FileUpload @join__enumValue(graph: CHURROS)
  """La réponse est un texte long."""
  LongText @join__enumValue(graph: CHURROS)
  """La réponse est un nombre, potentiellement à virgule."""
  Number @join__enumValue(graph: CHURROS)
  """La réponse est un nombre entier entre deux bornes"""
  Scale @join__enumValue(graph: CHURROS)
  """La réponse est une ou plusieurs options parmi une liste."""
  SelectMultiple @join__enumValue(graph: CHURROS)
  """La réponse est une des options parmi une liste."""
  SelectOne @join__enumValue(graph: CHURROS)
  """La réponse est un texte court."""
  Text @join__enumValue(graph: CHURROS)
  """
  La réponse est un temps  (heures, minute et seconde), sans date associée.
  """
  Time @join__enumValue(graph: CHURROS)
}

enum ChurrosSortDirection @source(name: "SortDirection", subgraph: "Churros") @join__type(graph: CHURROS) {
  Ascending @join__enumValue(graph: CHURROS)
  Descending @join__enumValue(graph: CHURROS)
}

enum ChurrosSearchableResources @source(name: "SearchableResources", subgraph: "Churros") @join__type(graph: CHURROS) {
  """Posts"""
  Articles @join__enumValue(graph: CHURROS)
  """Documents"""
  Documents @join__enumValue(graph: CHURROS)
  """Événements"""
  Events @join__enumValue(graph: CHURROS)
  """Groupes"""
  Groups @join__enumValue(graph: CHURROS)
  """Utilisateur·ices"""
  Users @join__enumValue(graph: CHURROS)
}

enum ChurrosRegistrationVerificationState @source(name: "RegistrationVerificationState", subgraph: "Churros") @join__type(graph: CHURROS) {
  AlreadyVerified @join__enumValue(graph: CHURROS)
  NotFound @join__enumValue(graph: CHURROS)
  NotPaid @join__enumValue(graph: CHURROS)
  Ok @join__enumValue(graph: CHURROS)
  Opposed @join__enumValue(graph: CHURROS)
  OtherEvent @join__enumValue(graph: CHURROS)
}

"""Settings Serializer"""
input SettingsRequestInput @source(name: "SettingsRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """Configure how authentik should show avatars for users."""
  avatars: NonEmptyString
  """Enable the ability for users to change their name."""
  defaultUserChangeName: Boolean @source(name: "default_user_change_name", type: "Boolean", subgraph: "Authentik")
  """Enable the ability for users to change their email address."""
  defaultUserChangeEmail: Boolean @source(name: "default_user_change_email", type: "Boolean", subgraph: "Authentik")
  """Enable the ability for users to change their username."""
  defaultUserChangeUsername: Boolean @source(name: "default_user_change_username", type: "Boolean", subgraph: "Authentik")
  """
  Events will be deleted after this duration.(Format: weeks=3;days=2;hours=3,seconds=2).
  """
  eventRetention: NonEmptyString @source(name: "event_retention", type: "NonEmptyString", subgraph: "Authentik")
  """The option configures the footer links on the flow executor pages."""
  footerLinks: JSON @source(name: "footer_links", type: "JSON", subgraph: "Authentik")
  """
  When enabled, all the events caused by a user will be deleted upon the user's deletion.
  """
  gdprCompliance: Boolean @source(name: "gdpr_compliance", type: "Boolean", subgraph: "Authentik")
  """Globally enable/disable impersonation."""
  impersonation: Boolean
  """Default token duration"""
  defaultTokenDuration: NonEmptyString @source(name: "default_token_duration", type: "NonEmptyString", subgraph: "Authentik")
  """Default token length"""
  defaultTokenLength: PositiveInt @source(name: "default_token_length", type: "PositiveInt", subgraph: "Authentik")
}

"""Settings Serializer"""
input PatchedSettingsRequestInput @source(name: "PatchedSettingsRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """Configure how authentik should show avatars for users."""
  avatars: NonEmptyString
  """Enable the ability for users to change their name."""
  defaultUserChangeName: Boolean @source(name: "default_user_change_name", type: "Boolean", subgraph: "Authentik")
  """Enable the ability for users to change their email address."""
  defaultUserChangeEmail: Boolean @source(name: "default_user_change_email", type: "Boolean", subgraph: "Authentik")
  """Enable the ability for users to change their username."""
  defaultUserChangeUsername: Boolean @source(name: "default_user_change_username", type: "Boolean", subgraph: "Authentik")
  """
  Events will be deleted after this duration.(Format: weeks=3;days=2;hours=3,seconds=2).
  """
  eventRetention: NonEmptyString @source(name: "event_retention", type: "NonEmptyString", subgraph: "Authentik")
  """The option configures the footer links on the flow executor pages."""
  footerLinks: JSON @source(name: "footer_links", type: "JSON", subgraph: "Authentik")
  """
  When enabled, all the events caused by a user will be deleted upon the user's deletion.
  """
  gdprCompliance: Boolean @source(name: "gdpr_compliance", type: "Boolean", subgraph: "Authentik")
  """Globally enable/disable impersonation."""
  impersonation: Boolean
  """Default token duration"""
  defaultTokenDuration: NonEmptyString @source(name: "default_token_duration", type: "NonEmptyString", subgraph: "Authentik")
  """Default token length"""
  defaultTokenLength: PositiveInt @source(name: "default_token_length", type: "PositiveInt", subgraph: "Authentik")
}

"""Serializer for Duo authenticator devices"""
input DuoDeviceRequestInput @source(name: "DuoDeviceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """The human-readable name of this device."""
  name: MutationInputAuthenticatorsAdminDuoCreateInputName! @source(name: "name", type: "mutationInput_authenticators_admin_duo_create_input_name!", subgraph: "Authentik")
}

"""Serializer for Duo authenticator devices"""
input PatchedDuoDeviceRequestInput @source(name: "PatchedDuoDeviceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """The human-readable name of this device."""
  name: MutationInputAuthenticatorsAdminDuoPartialUpdateInputName @source(name: "name", type: "mutationInput_authenticators_admin_duo_partial_update_input_name", subgraph: "Authentik")
}

"""Serializer for Endpoint authenticator devices"""
input EndpointDeviceRequestInput @source(name: "EndpointDeviceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pk: UUID
  """The human-readable name of this device."""
  name: MutationInputAuthenticatorsAdminEndpointCreateInputName! @source(name: "name", type: "mutationInput_authenticators_admin_endpoint_create_input_name!", subgraph: "Authentik")
}

"""Serializer for Endpoint authenticator devices"""
input PatchedEndpointDeviceRequestInput @source(name: "PatchedEndpointDeviceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pk: UUID
  """The human-readable name of this device."""
  name: MutationInputAuthenticatorsAdminEndpointPartialUpdateInputName @source(name: "name", type: "mutationInput_authenticators_admin_endpoint_partial_update_input_name", subgraph: "Authentik")
}

"""Serializer for sms authenticator devices"""
input SmsDeviceRequestInput @source(name: "SMSDeviceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """The human-readable name of this device."""
  name: MutationInputAuthenticatorsAdminSmsCreateInputName! @source(name: "name", type: "mutationInput_authenticators_admin_sms_create_input_name!", subgraph: "Authentik")
}

"""Serializer for sms authenticator devices"""
input PatchedSmsDeviceRequestInput @source(name: "PatchedSMSDeviceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """The human-readable name of this device."""
  name: MutationInputAuthenticatorsAdminSmsPartialUpdateInputName @source(name: "name", type: "mutationInput_authenticators_admin_sms_partial_update_input_name", subgraph: "Authentik")
}

"""Serializer for static authenticator devices"""
input StaticDeviceRequestInput @source(name: "StaticDeviceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """The human-readable name of this device."""
  name: MutationInputAuthenticatorsAdminStaticCreateInputName! @source(name: "name", type: "mutationInput_authenticators_admin_static_create_input_name!", subgraph: "Authentik")
}

"""Serializer for static authenticator devices"""
input PatchedStaticDeviceRequestInput @source(name: "PatchedStaticDeviceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """The human-readable name of this device."""
  name: MutationInputAuthenticatorsAdminStaticPartialUpdateInputName @source(name: "name", type: "mutationInput_authenticators_admin_static_partial_update_input_name", subgraph: "Authentik")
}

"""Serializer for totp authenticator devices"""
input TotpDeviceRequestInput @source(name: "TOTPDeviceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """The human-readable name of this device."""
  name: MutationInputAuthenticatorsAdminTotpCreateInputName! @source(name: "name", type: "mutationInput_authenticators_admin_totp_create_input_name!", subgraph: "Authentik")
}

"""Serializer for totp authenticator devices"""
input PatchedTotpDeviceRequestInput @source(name: "PatchedTOTPDeviceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """The human-readable name of this device."""
  name: MutationInputAuthenticatorsAdminTotpPartialUpdateInputName @source(name: "name", type: "mutationInput_authenticators_admin_totp_partial_update_input_name", subgraph: "Authentik")
}

"""Serializer for WebAuthn authenticator devices"""
input WebAuthnDeviceRequestInput @source(name: "WebAuthnDeviceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: MutationInputAuthenticatorsAdminWebauthnCreateInputName! @source(name: "name", type: "mutationInput_authenticators_admin_webauthn_create_input_name!", subgraph: "Authentik")
}

"""Serializer for WebAuthn authenticator devices"""
input PatchedWebAuthnDeviceRequestInput @source(name: "PatchedWebAuthnDeviceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: MutationInputAuthenticatorsAdminWebauthnPartialUpdateInputName @source(name: "name", type: "mutationInput_authenticators_admin_webauthn_partial_update_input_name", subgraph: "Authentik")
}

"""Application Serializer"""
input ApplicationRequestInput @source(name: "ApplicationRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """Application's display Name."""
  name: NonEmptyString!
  slug: MutationInputCoreApplicationsCreateInputSlug! @source(name: "slug", type: "mutationInput_core_applications_create_input_slug!", subgraph: "Authentik")
  provider: Int
  backchannelProviders: [Int] @source(name: "backchannel_providers", type: "[Int]", subgraph: "Authentik")
  """Open launch URL in a new browser tab or window."""
  openInNewTab: Boolean @source(name: "open_in_new_tab", type: "Boolean", subgraph: "Authentik")
  metaLaunchUrl: URL @source(name: "meta_launch_url", type: "URL", subgraph: "Authentik")
  metaDescription: String @source(name: "meta_description", type: "String", subgraph: "Authentik")
  metaPublisher: String @source(name: "meta_publisher", type: "String", subgraph: "Authentik")
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  group: String
}

"""Application Serializer"""
input PatchedApplicationRequestInput @source(name: "PatchedApplicationRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """Application's display Name."""
  name: NonEmptyString
  slug: MutationInputCoreApplicationsPartialUpdateInputSlug @source(name: "slug", type: "mutationInput_core_applications_partial_update_input_slug", subgraph: "Authentik")
  provider: Int
  backchannelProviders: [Int] @source(name: "backchannel_providers", type: "[Int]", subgraph: "Authentik")
  """Open launch URL in a new browser tab or window."""
  openInNewTab: Boolean @source(name: "open_in_new_tab", type: "Boolean", subgraph: "Authentik")
  metaLaunchUrl: URL @source(name: "meta_launch_url", type: "URL", subgraph: "Authentik")
  metaDescription: String @source(name: "meta_description", type: "String", subgraph: "Authentik")
  metaPublisher: String @source(name: "meta_publisher", type: "String", subgraph: "Authentik")
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  group: String
}

"""Serializer to upload file"""
input FileUploadRequestInput @source(name: "FileUploadRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  file: File
  clear: Boolean
}

"""Serializer to upload file"""
input FilePathRequestInput @source(name: "FilePathRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  url: NonEmptyString!
}

"""Brand Serializer"""
input BrandRequestInput @source(name: "BrandRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Domain that activates this brand. Can be a superset, i.e. `a.b` for `aa.b` and `ba.b`
  """
  domain: NonEmptyString!
  default: Boolean
  brandingTitle: NonEmptyString @source(name: "branding_title", type: "NonEmptyString", subgraph: "Authentik")
  brandingLogo: NonEmptyString @source(name: "branding_logo", type: "NonEmptyString", subgraph: "Authentik")
  brandingFavicon: NonEmptyString @source(name: "branding_favicon", type: "NonEmptyString", subgraph: "Authentik")
  flowAuthentication: UUID @source(name: "flow_authentication", type: "UUID", subgraph: "Authentik")
  flowInvalidation: UUID @source(name: "flow_invalidation", type: "UUID", subgraph: "Authentik")
  flowRecovery: UUID @source(name: "flow_recovery", type: "UUID", subgraph: "Authentik")
  flowUnenrollment: UUID @source(name: "flow_unenrollment", type: "UUID", subgraph: "Authentik")
  flowUserSettings: UUID @source(name: "flow_user_settings", type: "UUID", subgraph: "Authentik")
  flowDeviceCode: UUID @source(name: "flow_device_code", type: "UUID", subgraph: "Authentik")
  """
  When set, external users will be redirected to this application after authenticating.
  """
  defaultApplication: UUID @source(name: "default_application", type: "UUID", subgraph: "Authentik")
  """Web Certificate used by the authentik Core webserver."""
  webCertificate: UUID @source(name: "web_certificate", type: "UUID", subgraph: "Authentik")
  attributes: JSON
}

"""Brand Serializer"""
input PatchedBrandRequestInput @source(name: "PatchedBrandRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Domain that activates this brand. Can be a superset, i.e. `a.b` for `aa.b` and `ba.b`
  """
  domain: NonEmptyString
  default: Boolean
  brandingTitle: NonEmptyString @source(name: "branding_title", type: "NonEmptyString", subgraph: "Authentik")
  brandingLogo: NonEmptyString @source(name: "branding_logo", type: "NonEmptyString", subgraph: "Authentik")
  brandingFavicon: NonEmptyString @source(name: "branding_favicon", type: "NonEmptyString", subgraph: "Authentik")
  flowAuthentication: UUID @source(name: "flow_authentication", type: "UUID", subgraph: "Authentik")
  flowInvalidation: UUID @source(name: "flow_invalidation", type: "UUID", subgraph: "Authentik")
  flowRecovery: UUID @source(name: "flow_recovery", type: "UUID", subgraph: "Authentik")
  flowUnenrollment: UUID @source(name: "flow_unenrollment", type: "UUID", subgraph: "Authentik")
  flowUserSettings: UUID @source(name: "flow_user_settings", type: "UUID", subgraph: "Authentik")
  flowDeviceCode: UUID @source(name: "flow_device_code", type: "UUID", subgraph: "Authentik")
  """
  When set, external users will be redirected to this application after authenticating.
  """
  defaultApplication: UUID @source(name: "default_application", type: "UUID", subgraph: "Authentik")
  """Web Certificate used by the authentik Core webserver."""
  webCertificate: UUID @source(name: "web_certificate", type: "UUID", subgraph: "Authentik")
  attributes: JSON
}

"""Group Serializer"""
input GroupRequestInput @source(name: "GroupRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  """Users added to this group will be superusers."""
  isSuperuser: Boolean @source(name: "is_superuser", type: "Boolean", subgraph: "Authentik")
  parent: UUID
  users: [Int]
  attributes: JSON
  roles: [UUID]
}

"""Group Serializer"""
input PatchedGroupRequestInput @source(name: "PatchedGroupRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  """Users added to this group will be superusers."""
  isSuperuser: Boolean @source(name: "is_superuser", type: "Boolean", subgraph: "Authentik")
  parent: UUID
  users: [Int]
  attributes: JSON
  roles: [UUID]
}

"""Account adding/removing operations"""
input UserAccountRequestInput @source(name: "UserAccountRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pk: Int!
}

"""Token Serializer"""
input TokenRequestInput @source(name: "TokenRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  identifier: MutationInputCoreTokensCreateInputIdentifier! @source(name: "identifier", type: "mutationInput_core_tokens_create_input_identifier!", subgraph: "Authentik")
  intent: IntentEnum
  user: Int
  description: String
  expires: DateTime
  expiring: Boolean
}

"""Token Serializer"""
input PatchedTokenRequestInput @source(name: "PatchedTokenRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  identifier: MutationInputCoreTokensPartialUpdateInputIdentifier @source(name: "identifier", type: "mutationInput_core_tokens_partial_update_input_identifier", subgraph: "Authentik")
  intent: IntentEnum
  user: Int
  description: String
  expires: DateTime
  expiring: Boolean
}

input TokenSetKeyRequestInput @source(name: "TokenSetKeyRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  key: NonEmptyString!
}

"""
Serializer for creating a provider and an application in one transaction
"""
input TransactionApplicationRequestInput @source(name: "TransactionApplicationRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  app: ApplicationRequestInput! @source(name: "app", type: "ApplicationRequest_Input!", subgraph: "Authentik")
  providerModel: ProviderModelEnum! @source(name: "provider_model", type: "ProviderModelEnum!", subgraph: "Authentik")
  provider: ModelRequestInput! @source(name: "provider", type: "modelRequest_Input!", subgraph: "Authentik")
}

input ModelRequestInput @source(name: "modelRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  googleWorkspaceProviderRequestInput: GoogleWorkspaceProviderRequestInput @source(name: "GoogleWorkspaceProviderRequest_Input", type: "GoogleWorkspaceProviderRequest_Input", subgraph: "Authentik")
  ldapProviderRequestInput: LdapProviderRequestInput @source(name: "LDAPProviderRequest_Input", type: "LDAPProviderRequest_Input", subgraph: "Authentik")
  microsoftEntraProviderRequestInput: MicrosoftEntraProviderRequestInput @source(name: "MicrosoftEntraProviderRequest_Input", type: "MicrosoftEntraProviderRequest_Input", subgraph: "Authentik")
  oAuth2ProviderRequestInput: OAuth2ProviderRequestInput @source(name: "OAuth2ProviderRequest_Input", type: "OAuth2ProviderRequest_Input", subgraph: "Authentik")
  proxyProviderRequestInput: ProxyProviderRequestInput @source(name: "ProxyProviderRequest_Input", type: "ProxyProviderRequest_Input", subgraph: "Authentik")
  racProviderRequestInput: RacProviderRequestInput @source(name: "RACProviderRequest_Input", type: "RACProviderRequest_Input", subgraph: "Authentik")
  radiusProviderRequestInput: RadiusProviderRequestInput @source(name: "RadiusProviderRequest_Input", type: "RadiusProviderRequest_Input", subgraph: "Authentik")
  samlProviderRequestInput: SamlProviderRequestInput @source(name: "SAMLProviderRequest_Input", type: "SAMLProviderRequest_Input", subgraph: "Authentik")
  scimProviderRequestInput: ScimProviderRequestInput @source(name: "SCIMProviderRequest_Input", type: "SCIMProviderRequest_Input", subgraph: "Authentik")
}

"""GoogleWorkspaceProvider Serializer"""
input GoogleWorkspaceProviderRequestInput @source(name: "GoogleWorkspaceProviderRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  """Property mappings used for group creation/updating."""
  propertyMappingsGroup: [UUID] @source(name: "property_mappings_group", type: "[UUID]", subgraph: "Authentik")
  delegatedSubject: EmailAddress! @source(name: "delegated_subject", type: "EmailAddress!", subgraph: "Authentik")
  credentials: JSON!
  scopes: NonEmptyString
  excludeUsersServiceAccount: Boolean @source(name: "exclude_users_service_account", type: "Boolean", subgraph: "Authentik")
  filterGroup: UUID @source(name: "filter_group", type: "UUID", subgraph: "Authentik")
  userDeleteAction: OutgoingSyncDeleteAction @source(name: "user_delete_action", type: "OutgoingSyncDeleteAction", subgraph: "Authentik")
  groupDeleteAction: OutgoingSyncDeleteAction @source(name: "group_delete_action", type: "OutgoingSyncDeleteAction", subgraph: "Authentik")
  defaultGroupEmailDomain: NonEmptyString! @source(name: "default_group_email_domain", type: "NonEmptyString!", subgraph: "Authentik")
}

"""LDAPProvider Serializer"""
input LdapProviderRequestInput @source(name: "LDAPProviderRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  """
  Flow used for authentication when the associated application is accessed by an un-authenticated user.
  """
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow used when authorizing this provider."""
  authorizationFlow: UUID! @source(name: "authorization_flow", type: "UUID!", subgraph: "Authentik")
  """Flow used ending the session from a provider."""
  invalidationFlow: UUID! @source(name: "invalidation_flow", type: "UUID!", subgraph: "Authentik")
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  """DN under which objects are accessible."""
  baseDn: NonEmptyString @source(name: "base_dn", type: "NonEmptyString", subgraph: "Authentik")
  certificate: UUID
  tlsServerName: String @source(name: "tls_server_name", type: "String", subgraph: "Authentik")
  """
  The start for uidNumbers, this number is added to the user.pk to make sure that the numbers aren't too low for POSIX users. Default is 2000 to ensure that we don't collide with local users uidNumber
  """
  uidStartNumber: Int @source(name: "uid_start_number", type: "Int", subgraph: "Authentik")
  """
  The start for gidNumbers, this number is added to a number generated from the group.pk to make sure that the numbers aren't too low for POSIX groups. Default is 4000 to ensure that we don't collide with local groups or users primary groups gidNumber
  """
  gidStartNumber: Int @source(name: "gid_start_number", type: "Int", subgraph: "Authentik")
  searchMode: LdapapiAccessMode @source(name: "search_mode", type: "LDAPAPIAccessMode", subgraph: "Authentik")
  bindMode: LdapapiAccessMode @source(name: "bind_mode", type: "LDAPAPIAccessMode", subgraph: "Authentik")
  """
  When enabled, code-based multi-factor authentication can be used by appending a semicolon and the TOTP code to the password. This should only be enabled if all users that will bind to this provider have a TOTP device configured, as otherwise a password may incorrectly be rejected if it contains a semicolon.
  """
  mfaSupport: Boolean @source(name: "mfa_support", type: "Boolean", subgraph: "Authentik")
}

"""MicrosoftEntraProvider Serializer"""
input MicrosoftEntraProviderRequestInput @source(name: "MicrosoftEntraProviderRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  """Property mappings used for group creation/updating."""
  propertyMappingsGroup: [UUID] @source(name: "property_mappings_group", type: "[UUID]", subgraph: "Authentik")
  clientId: NonEmptyString! @source(name: "client_id", type: "NonEmptyString!", subgraph: "Authentik")
  clientSecret: NonEmptyString! @source(name: "client_secret", type: "NonEmptyString!", subgraph: "Authentik")
  tenantId: NonEmptyString! @source(name: "tenant_id", type: "NonEmptyString!", subgraph: "Authentik")
  excludeUsersServiceAccount: Boolean @source(name: "exclude_users_service_account", type: "Boolean", subgraph: "Authentik")
  filterGroup: UUID @source(name: "filter_group", type: "UUID", subgraph: "Authentik")
  userDeleteAction: OutgoingSyncDeleteAction @source(name: "user_delete_action", type: "OutgoingSyncDeleteAction", subgraph: "Authentik")
  groupDeleteAction: OutgoingSyncDeleteAction @source(name: "group_delete_action", type: "OutgoingSyncDeleteAction", subgraph: "Authentik")
}

"""OAuth2Provider Serializer"""
input OAuth2ProviderRequestInput @source(name: "OAuth2ProviderRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  """
  Flow used for authentication when the associated application is accessed by an un-authenticated user.
  """
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow used when authorizing this provider."""
  authorizationFlow: UUID! @source(name: "authorization_flow", type: "UUID!", subgraph: "Authentik")
  """Flow used ending the session from a provider."""
  invalidationFlow: UUID! @source(name: "invalidation_flow", type: "UUID!", subgraph: "Authentik")
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  clientType: ClientTypeEnum @source(name: "client_type", type: "ClientTypeEnum", subgraph: "Authentik")
  clientId: MutationInputCoreTransactionalApplicationsUpdateInputProviderOneOf_3ClientId @source(name: "client_id", type: "mutationInput_core_transactional_applications_update_input_provider_oneOf_3_client_id", subgraph: "Authentik")
  clientSecret: MutationInputCoreTransactionalApplicationsUpdateInputProviderOneOf_3ClientSecret @source(name: "client_secret", type: "mutationInput_core_transactional_applications_update_input_provider_oneOf_3_client_secret", subgraph: "Authentik")
  """
  Access codes not valid on or after current time + this value (Format: hours=1;minutes=2;seconds=3).
  """
  accessCodeValidity: NonEmptyString @source(name: "access_code_validity", type: "NonEmptyString", subgraph: "Authentik")
  """
  Tokens not valid on or after current time + this value (Format: hours=1;minutes=2;seconds=3).
  """
  accessTokenValidity: NonEmptyString @source(name: "access_token_validity", type: "NonEmptyString", subgraph: "Authentik")
  """
  Tokens not valid on or after current time + this value (Format: hours=1;minutes=2;seconds=3).
  """
  refreshTokenValidity: NonEmptyString @source(name: "refresh_token_validity", type: "NonEmptyString", subgraph: "Authentik")
  """
  Include User claims from scopes in the id_token, for applications that don't access the userinfo endpoint.
  """
  includeClaimsInIdToken: Boolean @source(name: "include_claims_in_id_token", type: "Boolean", subgraph: "Authentik")
  """Key used to sign the tokens."""
  signingKey: UUID @source(name: "signing_key", type: "UUID", subgraph: "Authentik")
  """
  Key used to encrypt the tokens. When set, tokens will be encrypted and returned as JWEs.
  """
  encryptionKey: UUID @source(name: "encryption_key", type: "UUID", subgraph: "Authentik")
  redirectUris: [RedirectUriRequestInput]! @source(name: "redirect_uris", type: "[RedirectURIRequest_Input]!", subgraph: "Authentik")
  subMode: SubModeEnum @source(name: "sub_mode", type: "SubModeEnum", subgraph: "Authentik")
  issuerMode: IssuerModeEnum @source(name: "issuer_mode", type: "IssuerModeEnum", subgraph: "Authentik")
  jwksSources: [UUID] @source(name: "jwks_sources", type: "[UUID]", subgraph: "Authentik")
}

"""A single allowed redirect URI entry"""
input RedirectUriRequestInput @source(name: "RedirectURIRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  matchingMode: MatchingModeEnum! @source(name: "matching_mode", type: "MatchingModeEnum!", subgraph: "Authentik")
  url: NonEmptyString!
}

"""ProxyProvider Serializer"""
input ProxyProviderRequestInput @source(name: "ProxyProviderRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  """
  Flow used for authentication when the associated application is accessed by an un-authenticated user.
  """
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow used when authorizing this provider."""
  authorizationFlow: UUID! @source(name: "authorization_flow", type: "UUID!", subgraph: "Authentik")
  """Flow used ending the session from a provider."""
  invalidationFlow: UUID! @source(name: "invalidation_flow", type: "UUID!", subgraph: "Authentik")
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  internalHost: URL @source(name: "internal_host", type: "URL", subgraph: "Authentik")
  externalHost: URL! @source(name: "external_host", type: "URL!", subgraph: "Authentik")
  """Validate SSL Certificates of upstream servers"""
  internalHostSslValidation: Boolean @source(name: "internal_host_ssl_validation", type: "Boolean", subgraph: "Authentik")
  certificate: UUID
  """
  Regular expressions for which authentication is not required. Each new line is interpreted as a new Regular Expression.
  """
  skipPathRegex: String @source(name: "skip_path_regex", type: "String", subgraph: "Authentik")
  """
  Set a custom HTTP-Basic Authentication header based on values from authentik.
  """
  basicAuthEnabled: Boolean @source(name: "basic_auth_enabled", type: "Boolean", subgraph: "Authentik")
  """
  User/Group Attribute used for the password part of the HTTP-Basic Header.
  """
  basicAuthPasswordAttribute: String @source(name: "basic_auth_password_attribute", type: "String", subgraph: "Authentik")
  """
  User/Group Attribute used for the user part of the HTTP-Basic Header. If not set, the user's Email address is used.
  """
  basicAuthUserAttribute: String @source(name: "basic_auth_user_attribute", type: "String", subgraph: "Authentik")
  mode: ProxyMode
  """
  When enabled, this provider will intercept the authorization header and authenticate requests based on its value.
  """
  interceptHeaderAuth: Boolean @source(name: "intercept_header_auth", type: "Boolean", subgraph: "Authentik")
  cookieDomain: String @source(name: "cookie_domain", type: "String", subgraph: "Authentik")
  jwksSources: [UUID] @source(name: "jwks_sources", type: "[UUID]", subgraph: "Authentik")
  """
  Tokens not valid on or after current time + this value (Format: hours=1;minutes=2;seconds=3).
  """
  accessTokenValidity: NonEmptyString @source(name: "access_token_validity", type: "NonEmptyString", subgraph: "Authentik")
  """
  Tokens not valid on or after current time + this value (Format: hours=1;minutes=2;seconds=3).
  """
  refreshTokenValidity: NonEmptyString @source(name: "refresh_token_validity", type: "NonEmptyString", subgraph: "Authentik")
}

"""RACProvider Serializer"""
input RacProviderRequestInput @source(name: "RACProviderRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  """
  Flow used for authentication when the associated application is accessed by an un-authenticated user.
  """
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow used when authorizing this provider."""
  authorizationFlow: UUID! @source(name: "authorization_flow", type: "UUID!", subgraph: "Authentik")
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  settings: JSON
  """
  Determines how long a session lasts. Default of 0 means that the sessions lasts until the browser is closed. (Format: hours=-1;minutes=-2;seconds=-3)
  """
  connectionExpiry: NonEmptyString @source(name: "connection_expiry", type: "NonEmptyString", subgraph: "Authentik")
  """When set to true, connection tokens will be deleted upon disconnect."""
  deleteTokenOnDisconnect: Boolean @source(name: "delete_token_on_disconnect", type: "Boolean", subgraph: "Authentik")
}

"""RadiusProvider Serializer"""
input RadiusProviderRequestInput @source(name: "RadiusProviderRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  """
  Flow used for authentication when the associated application is accessed by an un-authenticated user.
  """
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow used when authorizing this provider."""
  authorizationFlow: UUID! @source(name: "authorization_flow", type: "UUID!", subgraph: "Authentik")
  """Flow used ending the session from a provider."""
  invalidationFlow: UUID! @source(name: "invalidation_flow", type: "UUID!", subgraph: "Authentik")
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  """
  List of CIDRs (comma-separated) that clients can connect from. A more specific CIDR will match before a looser one. Clients connecting from a non-specified CIDR will be dropped.
  """
  clientNetworks: NonEmptyString @source(name: "client_networks", type: "NonEmptyString", subgraph: "Authentik")
  """Shared secret between clients and server to hash packets."""
  sharedSecret: NonEmptyString @source(name: "shared_secret", type: "NonEmptyString", subgraph: "Authentik")
  """
  When enabled, code-based multi-factor authentication can be used by appending a semicolon and the TOTP code to the password. This should only be enabled if all users that will bind to this provider have a TOTP device configured, as otherwise a password may incorrectly be rejected if it contains a semicolon.
  """
  mfaSupport: Boolean @source(name: "mfa_support", type: "Boolean", subgraph: "Authentik")
}

"""SAMLProvider Serializer"""
input SamlProviderRequestInput @source(name: "SAMLProviderRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  """
  Flow used for authentication when the associated application is accessed by an un-authenticated user.
  """
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow used when authorizing this provider."""
  authorizationFlow: UUID! @source(name: "authorization_flow", type: "UUID!", subgraph: "Authentik")
  """Flow used ending the session from a provider."""
  invalidationFlow: UUID! @source(name: "invalidation_flow", type: "UUID!", subgraph: "Authentik")
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  acsUrl: URL! @source(name: "acs_url", type: "URL!", subgraph: "Authentik")
  """
  Value of the audience restriction field of the assertion. When left empty, no audience restriction will be added.
  """
  audience: String
  """Also known as EntityID"""
  issuer: NonEmptyString
  """
  Assertion valid not before current time + this value (Format: hours=-1;minutes=-2;seconds=-3).
  """
  assertionValidNotBefore: NonEmptyString @source(name: "assertion_valid_not_before", type: "NonEmptyString", subgraph: "Authentik")
  """
  Assertion not valid on or after current time + this value (Format: hours=1;minutes=2;seconds=3).
  """
  assertionValidNotOnOrAfter: NonEmptyString @source(name: "assertion_valid_not_on_or_after", type: "NonEmptyString", subgraph: "Authentik")
  """
  Session not valid on or after current time + this value (Format: hours=1;minutes=2;seconds=3).
  """
  sessionValidNotOnOrAfter: NonEmptyString @source(name: "session_valid_not_on_or_after", type: "NonEmptyString", subgraph: "Authentik")
  """
  Configure how the NameID value will be created. When left empty, the NameIDPolicy of the incoming request will be considered
  """
  nameIdMapping: UUID @source(name: "name_id_mapping", type: "UUID", subgraph: "Authentik")
  digestAlgorithm: DigestAlgorithmEnum @source(name: "digest_algorithm", type: "DigestAlgorithmEnum", subgraph: "Authentik")
  signatureAlgorithm: SignatureAlgorithmEnum @source(name: "signature_algorithm", type: "SignatureAlgorithmEnum", subgraph: "Authentik")
  """Keypair used to sign outgoing Responses going to the Service Provider."""
  signingKp: UUID @source(name: "signing_kp", type: "UUID", subgraph: "Authentik")
  """
  When selected, incoming assertion's Signatures will be validated against this certificate. To allow unsigned Requests, leave on default.
  """
  verificationKp: UUID @source(name: "verification_kp", type: "UUID", subgraph: "Authentik")
  """
  When selected, incoming assertions are encrypted by the IdP using the public key of the encryption keypair. The assertion is decrypted by the SP using the the private key.
  """
  encryptionKp: UUID @source(name: "encryption_kp", type: "UUID", subgraph: "Authentik")
  signAssertion: Boolean @source(name: "sign_assertion", type: "Boolean", subgraph: "Authentik")
  signResponse: Boolean @source(name: "sign_response", type: "Boolean", subgraph: "Authentik")
  """
  This determines how authentik sends the response back to the Service Provider.
  """
  spBinding: JSON @source(name: "sp_binding", type: "JSON", subgraph: "Authentik")
  """Default relay_state value for IDP-initiated logins"""
  defaultRelayState: String @source(name: "default_relay_state", type: "String", subgraph: "Authentik")
}

"""SCIMProvider Serializer"""
input ScimProviderRequestInput @source(name: "SCIMProviderRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  """Property mappings used for group creation/updating."""
  propertyMappingsGroup: [UUID] @source(name: "property_mappings_group", type: "[UUID]", subgraph: "Authentik")
  """Base URL to SCIM requests, usually ends in /v2"""
  url: NonEmptyString!
  verifyCertificates: Boolean @source(name: "verify_certificates", type: "Boolean", subgraph: "Authentik")
  """Authentication token"""
  token: NonEmptyString!
  excludeUsersServiceAccount: Boolean @source(name: "exclude_users_service_account", type: "Boolean", subgraph: "Authentik")
  filterGroup: UUID @source(name: "filter_group", type: "UUID", subgraph: "Authentik")
}

"""User Serializer"""
input UserRequestInput @source(name: "UserRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  username: MutationInputCoreUsersCreateInputUsername! @source(name: "username", type: "mutationInput_core_users_create_input_username!", subgraph: "Authentik")
  """User's display name."""
  name: String!
  """
  Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
  """
  isActive: Boolean @source(name: "is_active", type: "Boolean", subgraph: "Authentik")
  lastLogin: DateTime @source(name: "last_login", type: "DateTime", subgraph: "Authentik")
  groups: [UUID]
  email: EmailAddress
  attributes: JSON
  path: NonEmptyString
  type: UserTypeEnum
}

"""User Serializer"""
input PatchedUserRequestInput @source(name: "PatchedUserRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  username: MutationInputCoreUsersPartialUpdateInputUsername @source(name: "username", type: "mutationInput_core_users_partial_update_input_username", subgraph: "Authentik")
  """User's display name."""
  name: String
  """
  Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
  """
  isActive: Boolean @source(name: "is_active", type: "Boolean", subgraph: "Authentik")
  lastLogin: DateTime @source(name: "last_login", type: "DateTime", subgraph: "Authentik")
  groups: [UUID]
  email: EmailAddress
  attributes: JSON
  path: NonEmptyString
  type: UserTypeEnum
}

input UserPasswordSetRequestInput @source(name: "UserPasswordSetRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  password: NonEmptyString!
}

input UserServiceAccountRequestInput @source(name: "UserServiceAccountRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  createGroup: Boolean @source(name: "create_group", type: "Boolean", subgraph: "Authentik")
  expiring: Boolean = true
  """If not provided, valid for 360 days"""
  expires: DateTime
}

"""CertificateKeyPair Serializer"""
input CertificateKeyPairRequestInput @source(name: "CertificateKeyPairRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  """PEM-encoded Certificate data"""
  certificateData: NonEmptyString! @source(name: "certificate_data", type: "NonEmptyString!", subgraph: "Authentik")
  """
  Optional Private Key. If this is set, you can use this keypair for encryption.
  """
  keyData: String @source(name: "key_data", type: "String", subgraph: "Authentik")
}

"""CertificateKeyPair Serializer"""
input PatchedCertificateKeyPairRequestInput @source(name: "PatchedCertificateKeyPairRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  """PEM-encoded Certificate data"""
  certificateData: NonEmptyString @source(name: "certificate_data", type: "NonEmptyString", subgraph: "Authentik")
  """
  Optional Private Key. If this is set, you can use this keypair for encryption.
  """
  keyData: String @source(name: "key_data", type: "String", subgraph: "Authentik")
}

"""Certificate generation parameters"""
input CertificateGenerationRequestInput @source(name: "CertificateGenerationRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  commonName: NonEmptyString! @source(name: "common_name", type: "NonEmptyString!", subgraph: "Authentik")
  subjectAltName: String @source(name: "subject_alt_name", type: "String", subgraph: "Authentik")
  validityDays: Int! @source(name: "validity_days", type: "Int!", subgraph: "Authentik")
  alg: AlgEnum
}

"""License Serializer"""
input LicenseRequestInput @source(name: "LicenseRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  key: NonEmptyString!
}

"""License Serializer"""
input PatchedLicenseRequestInput @source(name: "PatchedLicenseRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  key: NonEmptyString
}

"""Event Serializer"""
input EventRequestInput @source(name: "EventRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  user: JSON
  action: EventActions!
  app: NonEmptyString!
  context: JSON
  clientIp: NonEmptyString @source(name: "client_ip", type: "NonEmptyString", subgraph: "Authentik")
  expires: DateTime
  brand: JSON
}

"""Event Serializer"""
input PatchedEventRequestInput @source(name: "PatchedEventRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  user: JSON
  action: EventActions
  app: NonEmptyString
  context: JSON
  clientIp: NonEmptyString @source(name: "client_ip", type: "NonEmptyString", subgraph: "Authentik")
  expires: DateTime
  brand: JSON
}

"""Notification Serializer"""
input NotificationRequestInput @source(name: "NotificationRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  event: EventRequestInput @source(name: "event", type: "EventRequest_Input", subgraph: "Authentik")
  seen: Boolean
}

"""Notification Serializer"""
input PatchedNotificationRequestInput @source(name: "PatchedNotificationRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  event: EventRequestInput @source(name: "event", type: "EventRequest_Input", subgraph: "Authentik")
  seen: Boolean
}

"""NotificationRule Serializer"""
input NotificationRuleRequestInput @source(name: "NotificationRuleRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  """
  Select which transports should be used to notify the user. If none are selected, the notification will only be shown in the authentik UI.
  """
  transports: [UUID]
  severity: SeverityEnum
  """
  Define which group of users this notification should be sent and shown to. If left empty, Notification won't ben sent.
  """
  group: UUID
}

"""NotificationRule Serializer"""
input PatchedNotificationRuleRequestInput @source(name: "PatchedNotificationRuleRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  """
  Select which transports should be used to notify the user. If none are selected, the notification will only be shown in the authentik UI.
  """
  transports: [UUID]
  severity: SeverityEnum
  """
  Define which group of users this notification should be sent and shown to. If left empty, Notification won't ben sent.
  """
  group: UUID
}

"""NotificationTransport Serializer"""
input NotificationTransportRequestInput @source(name: "NotificationTransportRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  mode: NotificationTransportModeEnum
  webhookUrl: URL @source(name: "webhook_url", type: "URL", subgraph: "Authentik")
  webhookMapping: UUID @source(name: "webhook_mapping", type: "UUID", subgraph: "Authentik")
  """
  Only send notification once, for example when sending a webhook into a chat channel.
  """
  sendOnce: Boolean @source(name: "send_once", type: "Boolean", subgraph: "Authentik")
}

"""NotificationTransport Serializer"""
input PatchedNotificationTransportRequestInput @source(name: "PatchedNotificationTransportRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  mode: NotificationTransportModeEnum
  webhookUrl: URL @source(name: "webhook_url", type: "URL", subgraph: "Authentik")
  webhookMapping: UUID @source(name: "webhook_mapping", type: "UUID", subgraph: "Authentik")
  """
  Only send notification once, for example when sending a webhook into a chat channel.
  """
  sendOnce: Boolean @source(name: "send_once", type: "Boolean", subgraph: "Authentik")
}

"""FlowStageBinding Serializer"""
input FlowStageBindingRequestInput @source(name: "FlowStageBindingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  target: UUID!
  stage: UUID!
  """Evaluate policies during the Flow planning process."""
  evaluateOnPlan: Boolean @source(name: "evaluate_on_plan", type: "Boolean", subgraph: "Authentik")
  """Evaluate policies when the Stage is present to the user."""
  reEvaluatePolicies: Boolean @source(name: "re_evaluate_policies", type: "Boolean", subgraph: "Authentik")
  order: Int!
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  invalidResponseAction: InvalidResponseActionEnum @source(name: "invalid_response_action", type: "InvalidResponseActionEnum", subgraph: "Authentik")
}

"""FlowStageBinding Serializer"""
input PatchedFlowStageBindingRequestInput @source(name: "PatchedFlowStageBindingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  target: UUID
  stage: UUID
  """Evaluate policies during the Flow planning process."""
  evaluateOnPlan: Boolean @source(name: "evaluate_on_plan", type: "Boolean", subgraph: "Authentik")
  """Evaluate policies when the Stage is present to the user."""
  reEvaluatePolicies: Boolean @source(name: "re_evaluate_policies", type: "Boolean", subgraph: "Authentik")
  order: Int
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  invalidResponseAction: InvalidResponseActionEnum @source(name: "invalid_response_action", type: "InvalidResponseActionEnum", subgraph: "Authentik")
}

input FlowChallengeResponseRequestInput @source(name: "FlowChallengeResponseRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  appleChallengeResponseRequestInput: AppleChallengeResponseRequestInput @source(name: "AppleChallengeResponseRequest_Input", type: "AppleChallengeResponseRequest_Input", subgraph: "Authentik")
  authenticatorDuoChallengeResponseRequestInput: AuthenticatorDuoChallengeResponseRequestInput @source(name: "AuthenticatorDuoChallengeResponseRequest_Input", type: "AuthenticatorDuoChallengeResponseRequest_Input", subgraph: "Authentik")
  authenticatorSmsChallengeResponseRequestInput: AuthenticatorSmsChallengeResponseRequestInput @source(name: "AuthenticatorSMSChallengeResponseRequest_Input", type: "AuthenticatorSMSChallengeResponseRequest_Input", subgraph: "Authentik")
  authenticatorStaticChallengeResponseRequestInput: AuthenticatorStaticChallengeResponseRequestInput @source(name: "AuthenticatorStaticChallengeResponseRequest_Input", type: "AuthenticatorStaticChallengeResponseRequest_Input", subgraph: "Authentik")
  authenticatorTotpChallengeResponseRequestInput: AuthenticatorTotpChallengeResponseRequestInput @source(name: "AuthenticatorTOTPChallengeResponseRequest_Input", type: "AuthenticatorTOTPChallengeResponseRequest_Input", subgraph: "Authentik")
  authenticatorValidationChallengeResponseRequestInput: AuthenticatorValidationChallengeResponseRequestInput @source(name: "AuthenticatorValidationChallengeResponseRequest_Input", type: "AuthenticatorValidationChallengeResponseRequest_Input", subgraph: "Authentik")
  authenticatorWebAuthnChallengeResponseRequestInput: AuthenticatorWebAuthnChallengeResponseRequestInput @source(name: "AuthenticatorWebAuthnChallengeResponseRequest_Input", type: "AuthenticatorWebAuthnChallengeResponseRequest_Input", subgraph: "Authentik")
  autoSubmitChallengeResponseRequestInput: AutoSubmitChallengeResponseRequestInput @source(name: "AutoSubmitChallengeResponseRequest_Input", type: "AutoSubmitChallengeResponseRequest_Input", subgraph: "Authentik")
  captchaChallengeResponseRequestInput: CaptchaChallengeResponseRequestInput @source(name: "CaptchaChallengeResponseRequest_Input", type: "CaptchaChallengeResponseRequest_Input", subgraph: "Authentik")
  consentChallengeResponseRequestInput: ConsentChallengeResponseRequestInput @source(name: "ConsentChallengeResponseRequest_Input", type: "ConsentChallengeResponseRequest_Input", subgraph: "Authentik")
  emailChallengeResponseRequestInput: EmailChallengeResponseRequestInput @source(name: "EmailChallengeResponseRequest_Input", type: "EmailChallengeResponseRequest_Input", subgraph: "Authentik")
  frameChallengeResponseRequestInput: FrameChallengeResponseRequestInput @source(name: "FrameChallengeResponseRequest_Input", type: "FrameChallengeResponseRequest_Input", subgraph: "Authentik")
  identificationChallengeResponseRequestInput: IdentificationChallengeResponseRequestInput @source(name: "IdentificationChallengeResponseRequest_Input", type: "IdentificationChallengeResponseRequest_Input", subgraph: "Authentik")
  oAuthDeviceCodeChallengeResponseRequestInput: OAuthDeviceCodeChallengeResponseRequestInput @source(name: "OAuthDeviceCodeChallengeResponseRequest_Input", type: "OAuthDeviceCodeChallengeResponseRequest_Input", subgraph: "Authentik")
  oAuthDeviceCodeFinishChallengeResponseRequestInput: OAuthDeviceCodeFinishChallengeResponseRequestInput @source(name: "OAuthDeviceCodeFinishChallengeResponseRequest_Input", type: "OAuthDeviceCodeFinishChallengeResponseRequest_Input", subgraph: "Authentik")
  passwordChallengeResponseRequestInput: PasswordChallengeResponseRequestInput @source(name: "PasswordChallengeResponseRequest_Input", type: "PasswordChallengeResponseRequest_Input", subgraph: "Authentik")
  plexAuthenticationChallengeResponseRequestInput: PlexAuthenticationChallengeResponseRequestInput @source(name: "PlexAuthenticationChallengeResponseRequest_Input", type: "PlexAuthenticationChallengeResponseRequest_Input", subgraph: "Authentik")
  promptChallengeResponseRequestInput: PromptChallengeResponseRequestInput @source(name: "PromptChallengeResponseRequest_Input", type: "PromptChallengeResponseRequest_Input", subgraph: "Authentik")
  userLoginChallengeResponseRequestInput: UserLoginChallengeResponseRequestInput @source(name: "UserLoginChallengeResponseRequest_Input", type: "UserLoginChallengeResponseRequest_Input", subgraph: "Authentik")
}

"""Pseudo class for apple response"""
input AppleChallengeResponseRequestInput @source(name: "AppleChallengeResponseRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  component: NonEmptyString = "ak-source-oauth-apple"
}

"""Pseudo class for duo response"""
input AuthenticatorDuoChallengeResponseRequestInput @source(name: "AuthenticatorDuoChallengeResponseRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  component: NonEmptyString = "ak-stage-authenticator-duo"
}

"""SMS Challenge response, device is set by get_response_instance"""
input AuthenticatorSmsChallengeResponseRequestInput @source(name: "AuthenticatorSMSChallengeResponseRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  component: NonEmptyString = "ak-stage-authenticator-sms"
  code: Int
  phoneNumber: NonEmptyString @source(name: "phone_number", type: "NonEmptyString", subgraph: "Authentik")
}

"""Pseudo class for static response"""
input AuthenticatorStaticChallengeResponseRequestInput @source(name: "AuthenticatorStaticChallengeResponseRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  component: NonEmptyString = "ak-stage-authenticator-static"
}

"""TOTP Challenge response, device is set by get_response_instance"""
input AuthenticatorTotpChallengeResponseRequestInput @source(name: "AuthenticatorTOTPChallengeResponseRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  component: NonEmptyString = "ak-stage-authenticator-totp"
  code: Int!
}

"""Challenge used for Code-based and WebAuthn authenticators"""
input AuthenticatorValidationChallengeResponseRequestInput @source(name: "AuthenticatorValidationChallengeResponseRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  component: NonEmptyString = "ak-stage-authenticator-validate"
  selectedChallenge: DeviceChallengeRequestInput @source(name: "selected_challenge", type: "DeviceChallengeRequest_Input", subgraph: "Authentik")
  selectedStage: NonEmptyString @source(name: "selected_stage", type: "NonEmptyString", subgraph: "Authentik")
  code: NonEmptyString
  webauthn: JSON
  duo: Int
}

"""Single device challenge"""
input DeviceChallengeRequestInput @source(name: "DeviceChallengeRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  deviceClass: NonEmptyString! @source(name: "device_class", type: "NonEmptyString!", subgraph: "Authentik")
  deviceUid: NonEmptyString! @source(name: "device_uid", type: "NonEmptyString!", subgraph: "Authentik")
  challenge: JSON!
  lastUsed: DateTime @source(name: "last_used", type: "DateTime", subgraph: "Authentik")
}

"""WebAuthn Challenge response"""
input AuthenticatorWebAuthnChallengeResponseRequestInput @source(name: "AuthenticatorWebAuthnChallengeResponseRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  component: NonEmptyString = "ak-stage-authenticator-webauthn"
  response: JSON!
}

"""Pseudo class for autosubmit response"""
input AutoSubmitChallengeResponseRequestInput @source(name: "AutoSubmitChallengeResponseRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  component: NonEmptyString = "ak-stage-autosubmit"
}

"""Validate captcha token"""
input CaptchaChallengeResponseRequestInput @source(name: "CaptchaChallengeResponseRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  component: NonEmptyString = "ak-stage-captcha"
  token: NonEmptyString!
}

"""Consent challenge response, any valid response request is valid"""
input ConsentChallengeResponseRequestInput @source(name: "ConsentChallengeResponseRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  component: NonEmptyString = "ak-stage-consent"
  token: NonEmptyString!
}

"""
Email challenge resposen. No fields. This challenge is
always declared invalid to give the user a chance to retry
"""
input EmailChallengeResponseRequestInput @source(name: "EmailChallengeResponseRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  component: NonEmptyString = "ak-stage-email"
}

"""Base class for all challenge responses"""
input FrameChallengeResponseRequestInput @source(name: "FrameChallengeResponseRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  component: NonEmptyString = "xak-flow-frame"
}

"""Identification challenge"""
input IdentificationChallengeResponseRequestInput @source(name: "IdentificationChallengeResponseRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  component: NonEmptyString = "ak-stage-identification"
  uidField: NonEmptyString! @source(name: "uid_field", type: "NonEmptyString!", subgraph: "Authentik")
  password: String
  captchaToken: String @source(name: "captcha_token", type: "String", subgraph: "Authentik")
}

"""Response that includes the user-entered device code"""
input OAuthDeviceCodeChallengeResponseRequestInput @source(name: "OAuthDeviceCodeChallengeResponseRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  component: NonEmptyString = "ak-provider-oauth2-device-code"
  code: NonEmptyString!
}

"""Response that device has been authenticated and tab can be closed"""
input OAuthDeviceCodeFinishChallengeResponseRequestInput @source(name: "OAuthDeviceCodeFinishChallengeResponseRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  component: NonEmptyString = "ak-provider-oauth2-device-code-finish"
}

"""Password challenge response"""
input PasswordChallengeResponseRequestInput @source(name: "PasswordChallengeResponseRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  component: NonEmptyString = "ak-stage-password"
  password: NonEmptyString!
}

"""Pseudo class for plex response"""
input PlexAuthenticationChallengeResponseRequestInput @source(name: "PlexAuthenticationChallengeResponseRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  component: NonEmptyString = "ak-source-plex"
}

"""
Validate response, fields are dynamically created based
on the stage
"""
input PromptChallengeResponseRequestInput @source(name: "PromptChallengeResponseRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  component: NonEmptyString = "ak-stage-prompt"
}

"""User login challenge"""
input UserLoginChallengeResponseRequestInput @source(name: "UserLoginChallengeResponseRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  component: NonEmptyString = "ak-stage-user-login"
  rememberMe: Boolean! @source(name: "remember_me", type: "Boolean!", subgraph: "Authentik")
}

"""Flow Serializer"""
input FlowRequestInput @source(name: "FlowRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  slug: MutationInputFlowsInstancesCreateInputSlug! @source(name: "slug", type: "mutationInput_flows_instances_create_input_slug!", subgraph: "Authentik")
  """Shown as the Title in Flow pages."""
  title: NonEmptyString!
  designation: FlowDesignationEnum!
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  """
  Enable compatibility mode, increases compatibility with password managers on mobile devices.
  """
  compatibilityMode: Boolean @source(name: "compatibility_mode", type: "Boolean", subgraph: "Authentik")
  layout: FlowLayoutEnum
  deniedAction: DeniedActionEnum @source(name: "denied_action", type: "DeniedActionEnum", subgraph: "Authentik")
  authentication: AuthenticationEnum
}

"""Flow Serializer"""
input PatchedFlowRequestInput @source(name: "PatchedFlowRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  slug: MutationInputFlowsInstancesPartialUpdateInputSlug @source(name: "slug", type: "mutationInput_flows_instances_partial_update_input_slug", subgraph: "Authentik")
  """Shown as the Title in Flow pages."""
  title: NonEmptyString
  designation: FlowDesignationEnum
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  """
  Enable compatibility mode, increases compatibility with password managers on mobile devices.
  """
  compatibilityMode: Boolean @source(name: "compatibility_mode", type: "Boolean", subgraph: "Authentik")
  layout: FlowLayoutEnum
  deniedAction: DeniedActionEnum @source(name: "denied_action", type: "DeniedActionEnum", subgraph: "Authentik")
  authentication: AuthenticationEnum
}

"""Info about a single blueprint instance file"""
input BlueprintInstanceRequestInput @source(name: "BlueprintInstanceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  path: String
  context: JSON
  enabled: Boolean
  content: String
}

"""Info about a single blueprint instance file"""
input PatchedBlueprintInstanceRequestInput @source(name: "PatchedBlueprintInstanceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  path: String
  context: JSON
  enabled: Boolean
  content: String
}

"""Outpost Serializer"""
input OutpostRequestInput @source(name: "OutpostRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  type: OutpostTypeEnum!
  providers: [Int]!
  """
  Select Service-Connection authentik should use to manage this outpost. Leave empty if authentik should not handle the deployment.
  """
  serviceConnection: UUID @source(name: "service_connection", type: "UUID", subgraph: "Authentik")
  config: JSON!
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
}

"""Outpost Serializer"""
input PatchedOutpostRequestInput @source(name: "PatchedOutpostRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  type: OutpostTypeEnum
  providers: [Int]
  """
  Select Service-Connection authentik should use to manage this outpost. Leave empty if authentik should not handle the deployment.
  """
  serviceConnection: UUID @source(name: "service_connection", type: "UUID", subgraph: "Authentik")
  config: JSON
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
}

"""DockerServiceConnection Serializer"""
input DockerServiceConnectionRequestInput @source(name: "DockerServiceConnectionRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  """
  If enabled, use the local connection. Required Docker socket/Kubernetes Integration
  """
  local: Boolean
  """
  Can be in the format of 'unix://<path>' when connecting to a local docker daemon, or 'https://<hostname>:2376' when connecting to a remote system.
  """
  url: NonEmptyString!
  """
  CA which the endpoint's Certificate is verified against. Can be left empty for no validation.
  """
  tlsVerification: UUID @source(name: "tls_verification", type: "UUID", subgraph: "Authentik")
  """
  Certificate/Key used for authentication. Can be left empty for no authentication.
  """
  tlsAuthentication: UUID @source(name: "tls_authentication", type: "UUID", subgraph: "Authentik")
}

"""DockerServiceConnection Serializer"""
input PatchedDockerServiceConnectionRequestInput @source(name: "PatchedDockerServiceConnectionRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  """
  If enabled, use the local connection. Required Docker socket/Kubernetes Integration
  """
  local: Boolean
  """
  Can be in the format of 'unix://<path>' when connecting to a local docker daemon, or 'https://<hostname>:2376' when connecting to a remote system.
  """
  url: NonEmptyString
  """
  CA which the endpoint's Certificate is verified against. Can be left empty for no validation.
  """
  tlsVerification: UUID @source(name: "tls_verification", type: "UUID", subgraph: "Authentik")
  """
  Certificate/Key used for authentication. Can be left empty for no authentication.
  """
  tlsAuthentication: UUID @source(name: "tls_authentication", type: "UUID", subgraph: "Authentik")
}

"""KubernetesServiceConnection Serializer"""
input KubernetesServiceConnectionRequestInput @source(name: "KubernetesServiceConnectionRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  """
  If enabled, use the local connection. Required Docker socket/Kubernetes Integration
  """
  local: Boolean
  """
  Paste your kubeconfig here. authentik will automatically use the currently selected context.
  """
  kubeconfig: JSON
  """Verify SSL Certificates of the Kubernetes API endpoint"""
  verifySsl: Boolean @source(name: "verify_ssl", type: "Boolean", subgraph: "Authentik")
}

"""KubernetesServiceConnection Serializer"""
input PatchedKubernetesServiceConnectionRequestInput @source(name: "PatchedKubernetesServiceConnectionRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  """
  If enabled, use the local connection. Required Docker socket/Kubernetes Integration
  """
  local: Boolean
  """
  Paste your kubeconfig here. authentik will automatically use the currently selected context.
  """
  kubeconfig: JSON
  """Verify SSL Certificates of the Kubernetes API endpoint"""
  verifySsl: Boolean @source(name: "verify_ssl", type: "Boolean", subgraph: "Authentik")
}

"""Test policy execution for a user with context"""
input PolicyTestRequestInput @source(name: "PolicyTestRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  user: Int!
  context: JSON
}

"""PolicyBinding Serializer"""
input PolicyBindingRequestInput @source(name: "PolicyBindingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  policy: UUID
  group: UUID
  user: Int
  target: UUID!
  """Negates the outcome of the policy. Messages are unaffected."""
  negate: Boolean
  enabled: Boolean
  order: Int!
  """Timeout after which Policy execution is terminated."""
  timeout: NonNegativeInt
  """Result if the Policy execution fails."""
  failureResult: Boolean @source(name: "failure_result", type: "Boolean", subgraph: "Authentik")
}

"""PolicyBinding Serializer"""
input PatchedPolicyBindingRequestInput @source(name: "PatchedPolicyBindingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  policy: UUID
  group: UUID
  user: Int
  target: UUID
  """Negates the outcome of the policy. Messages are unaffected."""
  negate: Boolean
  enabled: Boolean
  order: Int
  """Timeout after which Policy execution is terminated."""
  timeout: NonNegativeInt
  """Result if the Policy execution fails."""
  failureResult: Boolean @source(name: "failure_result", type: "Boolean", subgraph: "Authentik")
}

"""Dummy Policy Serializer"""
input DummyPolicyRequestInput @source(name: "DummyPolicyRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  """
  When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged.
  """
  executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
  result: Boolean
  waitMin: Int @source(name: "wait_min", type: "Int", subgraph: "Authentik")
  waitMax: Int @source(name: "wait_max", type: "Int", subgraph: "Authentik")
}

"""Dummy Policy Serializer"""
input PatchedDummyPolicyRequestInput @source(name: "PatchedDummyPolicyRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  """
  When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged.
  """
  executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
  result: Boolean
  waitMin: Int @source(name: "wait_min", type: "Int", subgraph: "Authentik")
  waitMax: Int @source(name: "wait_max", type: "Int", subgraph: "Authentik")
}

"""Event Matcher Policy Serializer"""
input EventMatcherPolicyRequestInput @source(name: "EventMatcherPolicyRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  """
  When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged.
  """
  executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
  action: EventActions
  """
  Matches Event's Client IP (strict matching, for network matching use an Expression Policy)
  """
  clientIp: NonEmptyString @source(name: "client_ip", type: "NonEmptyString", subgraph: "Authentik")
  app: AppEnum
  model: ModelEnum
}

"""Event Matcher Policy Serializer"""
input PatchedEventMatcherPolicyRequestInput @source(name: "PatchedEventMatcherPolicyRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  """
  When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged.
  """
  executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
  action: EventActions
  """
  Matches Event's Client IP (strict matching, for network matching use an Expression Policy)
  """
  clientIp: NonEmptyString @source(name: "client_ip", type: "NonEmptyString", subgraph: "Authentik")
  app: AppEnum
  model: ModelEnum
}

"""Group Membership Policy Serializer"""
input ExpressionPolicyRequestInput @source(name: "ExpressionPolicyRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  """
  When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged.
  """
  executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
  expression: NonEmptyString!
}

"""Group Membership Policy Serializer"""
input PatchedExpressionPolicyRequestInput @source(name: "PatchedExpressionPolicyRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  """
  When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged.
  """
  executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
  expression: NonEmptyString
}

"""GeoIP Policy Serializer"""
input GeoIpPolicyRequestInput @source(name: "GeoIPPolicyRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  """
  When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged.
  """
  executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
  asns: [Int]
  countries: [CountryCodeEnum]!
}

"""GeoIP Policy Serializer"""
input PatchedGeoIpPolicyRequestInput @source(name: "PatchedGeoIPPolicyRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  """
  When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged.
  """
  executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
  asns: [Int]
  countries: [CountryCodeEnum]
}

"""Password Policy Serializer"""
input PasswordPolicyRequestInput @source(name: "PasswordPolicyRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  """
  When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged.
  """
  executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
  """Field key to check, field keys defined in Prompt stages are available."""
  passwordField: NonEmptyString @source(name: "password_field", type: "NonEmptyString", subgraph: "Authentik")
  amountDigits: NonNegativeInt @source(name: "amount_digits", type: "NonNegativeInt", subgraph: "Authentik")
  amountUppercase: NonNegativeInt @source(name: "amount_uppercase", type: "NonNegativeInt", subgraph: "Authentik")
  amountLowercase: NonNegativeInt @source(name: "amount_lowercase", type: "NonNegativeInt", subgraph: "Authentik")
  amountSymbols: NonNegativeInt @source(name: "amount_symbols", type: "NonNegativeInt", subgraph: "Authentik")
  lengthMin: NonNegativeInt @source(name: "length_min", type: "NonNegativeInt", subgraph: "Authentik")
  symbolCharset: NonEmptyString @source(name: "symbol_charset", type: "NonEmptyString", subgraph: "Authentik")
  errorMessage: String @source(name: "error_message", type: "String", subgraph: "Authentik")
  checkStaticRules: Boolean @source(name: "check_static_rules", type: "Boolean", subgraph: "Authentik")
  checkHaveIBeenPwned: Boolean @source(name: "check_have_i_been_pwned", type: "Boolean", subgraph: "Authentik")
  checkZxcvbn: Boolean @source(name: "check_zxcvbn", type: "Boolean", subgraph: "Authentik")
  """How many times the password hash is allowed to be on haveibeenpwned"""
  hibpAllowedCount: NonNegativeInt @source(name: "hibp_allowed_count", type: "NonNegativeInt", subgraph: "Authentik")
  """
  If the zxcvbn score is equal or less than this value, the policy will fail.
  """
  zxcvbnScoreThreshold: NonNegativeInt @source(name: "zxcvbn_score_threshold", type: "NonNegativeInt", subgraph: "Authentik")
}

"""Password Policy Serializer"""
input PatchedPasswordPolicyRequestInput @source(name: "PatchedPasswordPolicyRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  """
  When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged.
  """
  executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
  """Field key to check, field keys defined in Prompt stages are available."""
  passwordField: NonEmptyString @source(name: "password_field", type: "NonEmptyString", subgraph: "Authentik")
  amountDigits: NonNegativeInt @source(name: "amount_digits", type: "NonNegativeInt", subgraph: "Authentik")
  amountUppercase: NonNegativeInt @source(name: "amount_uppercase", type: "NonNegativeInt", subgraph: "Authentik")
  amountLowercase: NonNegativeInt @source(name: "amount_lowercase", type: "NonNegativeInt", subgraph: "Authentik")
  amountSymbols: NonNegativeInt @source(name: "amount_symbols", type: "NonNegativeInt", subgraph: "Authentik")
  lengthMin: NonNegativeInt @source(name: "length_min", type: "NonNegativeInt", subgraph: "Authentik")
  symbolCharset: NonEmptyString @source(name: "symbol_charset", type: "NonEmptyString", subgraph: "Authentik")
  errorMessage: String @source(name: "error_message", type: "String", subgraph: "Authentik")
  checkStaticRules: Boolean @source(name: "check_static_rules", type: "Boolean", subgraph: "Authentik")
  checkHaveIBeenPwned: Boolean @source(name: "check_have_i_been_pwned", type: "Boolean", subgraph: "Authentik")
  checkZxcvbn: Boolean @source(name: "check_zxcvbn", type: "Boolean", subgraph: "Authentik")
  """How many times the password hash is allowed to be on haveibeenpwned"""
  hibpAllowedCount: NonNegativeInt @source(name: "hibp_allowed_count", type: "NonNegativeInt", subgraph: "Authentik")
  """
  If the zxcvbn score is equal or less than this value, the policy will fail.
  """
  zxcvbnScoreThreshold: NonNegativeInt @source(name: "zxcvbn_score_threshold", type: "NonNegativeInt", subgraph: "Authentik")
}

"""Password Expiry Policy Serializer"""
input PasswordExpiryPolicyRequestInput @source(name: "PasswordExpiryPolicyRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  """
  When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged.
  """
  executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
  days: Int!
  denyOnly: Boolean @source(name: "deny_only", type: "Boolean", subgraph: "Authentik")
}

"""Password Expiry Policy Serializer"""
input PatchedPasswordExpiryPolicyRequestInput @source(name: "PatchedPasswordExpiryPolicyRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  """
  When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged.
  """
  executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
  days: Int
  denyOnly: Boolean @source(name: "deny_only", type: "Boolean", subgraph: "Authentik")
}

"""Reputation Policy Serializer"""
input ReputationPolicyRequestInput @source(name: "ReputationPolicyRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  """
  When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged.
  """
  executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
  checkIp: Boolean @source(name: "check_ip", type: "Boolean", subgraph: "Authentik")
  checkUsername: Boolean @source(name: "check_username", type: "Boolean", subgraph: "Authentik")
  threshold: Int
}

"""Reputation Policy Serializer"""
input PatchedReputationPolicyRequestInput @source(name: "PatchedReputationPolicyRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  """
  When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged.
  """
  executionLogging: Boolean @source(name: "execution_logging", type: "Boolean", subgraph: "Authentik")
  checkIp: Boolean @source(name: "check_ip", type: "Boolean", subgraph: "Authentik")
  checkUsername: Boolean @source(name: "check_username", type: "Boolean", subgraph: "Authentik")
  threshold: Int
}

"""Test property mapping execution for a user/group with context"""
input PropertyMappingTestRequestInput @source(name: "PropertyMappingTestRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  user: Int
  context: JSON
  group: UUID
}

"""NotificationWebhookMapping Serializer"""
input NotificationWebhookMappingRequestInput @source(name: "NotificationWebhookMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  expression: NonEmptyString!
}

"""NotificationWebhookMapping Serializer"""
input PatchedNotificationWebhookMappingRequestInput @source(name: "PatchedNotificationWebhookMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  expression: NonEmptyString
}

"""GoogleWorkspaceProviderMapping Serializer"""
input GoogleWorkspaceProviderMappingRequestInput @source(name: "GoogleWorkspaceProviderMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString!
  expression: NonEmptyString!
}

"""GoogleWorkspaceProviderMapping Serializer"""
input PatchedGoogleWorkspaceProviderMappingRequestInput @source(name: "PatchedGoogleWorkspaceProviderMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString
  expression: NonEmptyString
}

"""MicrosoftEntraProviderMapping Serializer"""
input MicrosoftEntraProviderMappingRequestInput @source(name: "MicrosoftEntraProviderMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString!
  expression: NonEmptyString!
}

"""MicrosoftEntraProviderMapping Serializer"""
input PatchedMicrosoftEntraProviderMappingRequestInput @source(name: "PatchedMicrosoftEntraProviderMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString
  expression: NonEmptyString
}

"""RACPropertyMapping Serializer"""
input RacPropertyMappingRequestInput @source(name: "RACPropertyMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString!
  expression: String
  staticSettings: JSON! @source(name: "static_settings", type: "JSON!", subgraph: "Authentik")
}

"""RACPropertyMapping Serializer"""
input PatchedRacPropertyMappingRequestInput @source(name: "PatchedRACPropertyMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString
  expression: String
  staticSettings: JSON @source(name: "static_settings", type: "JSON", subgraph: "Authentik")
}

"""RadiusProviderPropertyMapping Serializer"""
input RadiusProviderPropertyMappingRequestInput @source(name: "RadiusProviderPropertyMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString!
  expression: NonEmptyString!
}

"""RadiusProviderPropertyMapping Serializer"""
input PatchedRadiusProviderPropertyMappingRequestInput @source(name: "PatchedRadiusProviderPropertyMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString
  expression: NonEmptyString
}

"""SAMLPropertyMapping Serializer"""
input SamlPropertyMappingRequestInput @source(name: "SAMLPropertyMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString!
  expression: NonEmptyString!
  samlName: NonEmptyString! @source(name: "saml_name", type: "NonEmptyString!", subgraph: "Authentik")
  friendlyName: String @source(name: "friendly_name", type: "String", subgraph: "Authentik")
}

"""SAMLPropertyMapping Serializer"""
input PatchedSamlPropertyMappingRequestInput @source(name: "PatchedSAMLPropertyMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString
  expression: NonEmptyString
  samlName: NonEmptyString @source(name: "saml_name", type: "NonEmptyString", subgraph: "Authentik")
  friendlyName: String @source(name: "friendly_name", type: "String", subgraph: "Authentik")
}

"""SCIMMapping Serializer"""
input ScimMappingRequestInput @source(name: "SCIMMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString!
  expression: NonEmptyString!
}

"""SCIMMapping Serializer"""
input PatchedScimMappingRequestInput @source(name: "PatchedSCIMMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString
  expression: NonEmptyString
}

"""ScopeMapping Serializer"""
input ScopeMappingRequestInput @source(name: "ScopeMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString!
  expression: NonEmptyString!
  """Scope name requested by the client"""
  scopeName: NonEmptyString! @source(name: "scope_name", type: "NonEmptyString!", subgraph: "Authentik")
  """
  Description shown to the user when consenting. If left empty, the user won't be informed.
  """
  description: String
}

"""ScopeMapping Serializer"""
input PatchedScopeMappingRequestInput @source(name: "PatchedScopeMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString
  expression: NonEmptyString
  """Scope name requested by the client"""
  scopeName: NonEmptyString @source(name: "scope_name", type: "NonEmptyString", subgraph: "Authentik")
  """
  Description shown to the user when consenting. If left empty, the user won't be informed.
  """
  description: String
}

"""Kerberos PropertyMapping Serializer"""
input KerberosSourcePropertyMappingRequestInput @source(name: "KerberosSourcePropertyMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString!
  expression: NonEmptyString!
}

"""Kerberos PropertyMapping Serializer"""
input PatchedKerberosSourcePropertyMappingRequestInput @source(name: "PatchedKerberosSourcePropertyMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString
  expression: NonEmptyString
}

"""LDAP PropertyMapping Serializer"""
input LdapSourcePropertyMappingRequestInput @source(name: "LDAPSourcePropertyMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString!
  expression: NonEmptyString!
}

"""LDAP PropertyMapping Serializer"""
input PatchedLdapSourcePropertyMappingRequestInput @source(name: "PatchedLDAPSourcePropertyMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString
  expression: NonEmptyString
}

"""OAuthSourcePropertyMapping Serializer"""
input OAuthSourcePropertyMappingRequestInput @source(name: "OAuthSourcePropertyMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString!
  expression: NonEmptyString!
}

"""OAuthSourcePropertyMapping Serializer"""
input PatchedOAuthSourcePropertyMappingRequestInput @source(name: "PatchedOAuthSourcePropertyMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString
  expression: NonEmptyString
}

"""PlexSourcePropertyMapping Serializer"""
input PlexSourcePropertyMappingRequestInput @source(name: "PlexSourcePropertyMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString!
  expression: NonEmptyString!
}

"""PlexSourcePropertyMapping Serializer"""
input PatchedPlexSourcePropertyMappingRequestInput @source(name: "PatchedPlexSourcePropertyMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString
  expression: NonEmptyString
}

"""SAMLSourcePropertyMapping Serializer"""
input SamlSourcePropertyMappingRequestInput @source(name: "SAMLSourcePropertyMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString!
  expression: NonEmptyString!
}

"""SAMLSourcePropertyMapping Serializer"""
input PatchedSamlSourcePropertyMappingRequestInput @source(name: "PatchedSAMLSourcePropertyMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString
  expression: NonEmptyString
}

"""SCIMSourcePropertyMapping Serializer"""
input ScimSourcePropertyMappingRequestInput @source(name: "SCIMSourcePropertyMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString!
  expression: NonEmptyString!
}

"""SCIMSourcePropertyMapping Serializer"""
input PatchedScimSourcePropertyMappingRequestInput @source(name: "PatchedSCIMSourcePropertyMappingRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """
  Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
  """
  managed: NonEmptyString
  name: NonEmptyString
  expression: NonEmptyString
}

"""GoogleWorkspaceProvider Serializer"""
input PatchedGoogleWorkspaceProviderRequestInput @source(name: "PatchedGoogleWorkspaceProviderRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  """Property mappings used for group creation/updating."""
  propertyMappingsGroup: [UUID] @source(name: "property_mappings_group", type: "[UUID]", subgraph: "Authentik")
  delegatedSubject: EmailAddress @source(name: "delegated_subject", type: "EmailAddress", subgraph: "Authentik")
  credentials: JSON
  scopes: NonEmptyString
  excludeUsersServiceAccount: Boolean @source(name: "exclude_users_service_account", type: "Boolean", subgraph: "Authentik")
  filterGroup: UUID @source(name: "filter_group", type: "UUID", subgraph: "Authentik")
  userDeleteAction: OutgoingSyncDeleteAction @source(name: "user_delete_action", type: "OutgoingSyncDeleteAction", subgraph: "Authentik")
  groupDeleteAction: OutgoingSyncDeleteAction @source(name: "group_delete_action", type: "OutgoingSyncDeleteAction", subgraph: "Authentik")
  defaultGroupEmailDomain: NonEmptyString @source(name: "default_group_email_domain", type: "NonEmptyString", subgraph: "Authentik")
}

"""Sync object serializer"""
input SyncObjectRequestInput @source(name: "SyncObjectRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  syncObjectModel: SyncObjectModelEnum! @source(name: "sync_object_model", type: "SyncObjectModelEnum!", subgraph: "Authentik")
  syncObjectId: NonEmptyString! @source(name: "sync_object_id", type: "NonEmptyString!", subgraph: "Authentik")
}

"""GoogleWorkspaceProviderGroup Serializer"""
input GoogleWorkspaceProviderGroupRequestInput @source(name: "GoogleWorkspaceProviderGroupRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  googleId: NonEmptyString! @source(name: "google_id", type: "NonEmptyString!", subgraph: "Authentik")
  group: UUID!
  provider: Int!
}

"""GoogleWorkspaceProviderUser Serializer"""
input GoogleWorkspaceProviderUserRequestInput @source(name: "GoogleWorkspaceProviderUserRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  googleId: NonEmptyString! @source(name: "google_id", type: "NonEmptyString!", subgraph: "Authentik")
  user: Int!
  provider: Int!
}

"""LDAPProvider Serializer"""
input PatchedLdapProviderRequestInput @source(name: "PatchedLDAPProviderRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  """
  Flow used for authentication when the associated application is accessed by an un-authenticated user.
  """
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow used when authorizing this provider."""
  authorizationFlow: UUID @source(name: "authorization_flow", type: "UUID", subgraph: "Authentik")
  """Flow used ending the session from a provider."""
  invalidationFlow: UUID @source(name: "invalidation_flow", type: "UUID", subgraph: "Authentik")
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  """DN under which objects are accessible."""
  baseDn: NonEmptyString @source(name: "base_dn", type: "NonEmptyString", subgraph: "Authentik")
  certificate: UUID
  tlsServerName: String @source(name: "tls_server_name", type: "String", subgraph: "Authentik")
  """
  The start for uidNumbers, this number is added to the user.pk to make sure that the numbers aren't too low for POSIX users. Default is 2000 to ensure that we don't collide with local users uidNumber
  """
  uidStartNumber: Int @source(name: "uid_start_number", type: "Int", subgraph: "Authentik")
  """
  The start for gidNumbers, this number is added to a number generated from the group.pk to make sure that the numbers aren't too low for POSIX groups. Default is 4000 to ensure that we don't collide with local groups or users primary groups gidNumber
  """
  gidStartNumber: Int @source(name: "gid_start_number", type: "Int", subgraph: "Authentik")
  searchMode: LdapapiAccessMode @source(name: "search_mode", type: "LDAPAPIAccessMode", subgraph: "Authentik")
  bindMode: LdapapiAccessMode @source(name: "bind_mode", type: "LDAPAPIAccessMode", subgraph: "Authentik")
  """
  When enabled, code-based multi-factor authentication can be used by appending a semicolon and the TOTP code to the password. This should only be enabled if all users that will bind to this provider have a TOTP device configured, as otherwise a password may incorrectly be rejected if it contains a semicolon.
  """
  mfaSupport: Boolean @source(name: "mfa_support", type: "Boolean", subgraph: "Authentik")
}

"""MicrosoftEntraProvider Serializer"""
input PatchedMicrosoftEntraProviderRequestInput @source(name: "PatchedMicrosoftEntraProviderRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  """Property mappings used for group creation/updating."""
  propertyMappingsGroup: [UUID] @source(name: "property_mappings_group", type: "[UUID]", subgraph: "Authentik")
  clientId: NonEmptyString @source(name: "client_id", type: "NonEmptyString", subgraph: "Authentik")
  clientSecret: NonEmptyString @source(name: "client_secret", type: "NonEmptyString", subgraph: "Authentik")
  tenantId: NonEmptyString @source(name: "tenant_id", type: "NonEmptyString", subgraph: "Authentik")
  excludeUsersServiceAccount: Boolean @source(name: "exclude_users_service_account", type: "Boolean", subgraph: "Authentik")
  filterGroup: UUID @source(name: "filter_group", type: "UUID", subgraph: "Authentik")
  userDeleteAction: OutgoingSyncDeleteAction @source(name: "user_delete_action", type: "OutgoingSyncDeleteAction", subgraph: "Authentik")
  groupDeleteAction: OutgoingSyncDeleteAction @source(name: "group_delete_action", type: "OutgoingSyncDeleteAction", subgraph: "Authentik")
}

"""MicrosoftEntraProviderGroup Serializer"""
input MicrosoftEntraProviderGroupRequestInput @source(name: "MicrosoftEntraProviderGroupRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  microsoftId: NonEmptyString! @source(name: "microsoft_id", type: "NonEmptyString!", subgraph: "Authentik")
  group: UUID!
  provider: Int!
}

"""MicrosoftEntraProviderUser Serializer"""
input MicrosoftEntraProviderUserRequestInput @source(name: "MicrosoftEntraProviderUserRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  microsoftId: NonEmptyString! @source(name: "microsoft_id", type: "NonEmptyString!", subgraph: "Authentik")
  user: Int!
  provider: Int!
}

"""OAuth2Provider Serializer"""
input PatchedOAuth2ProviderRequestInput @source(name: "PatchedOAuth2ProviderRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  """
  Flow used for authentication when the associated application is accessed by an un-authenticated user.
  """
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow used when authorizing this provider."""
  authorizationFlow: UUID @source(name: "authorization_flow", type: "UUID", subgraph: "Authentik")
  """Flow used ending the session from a provider."""
  invalidationFlow: UUID @source(name: "invalidation_flow", type: "UUID", subgraph: "Authentik")
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  clientType: ClientTypeEnum @source(name: "client_type", type: "ClientTypeEnum", subgraph: "Authentik")
  clientId: MutationInputProvidersOauth2PartialUpdateInputClientId @source(name: "client_id", type: "mutationInput_providers_oauth2_partial_update_input_client_id", subgraph: "Authentik")
  clientSecret: MutationInputProvidersOauth2PartialUpdateInputClientSecret @source(name: "client_secret", type: "mutationInput_providers_oauth2_partial_update_input_client_secret", subgraph: "Authentik")
  """
  Access codes not valid on or after current time + this value (Format: hours=1;minutes=2;seconds=3).
  """
  accessCodeValidity: NonEmptyString @source(name: "access_code_validity", type: "NonEmptyString", subgraph: "Authentik")
  """
  Tokens not valid on or after current time + this value (Format: hours=1;minutes=2;seconds=3).
  """
  accessTokenValidity: NonEmptyString @source(name: "access_token_validity", type: "NonEmptyString", subgraph: "Authentik")
  """
  Tokens not valid on or after current time + this value (Format: hours=1;minutes=2;seconds=3).
  """
  refreshTokenValidity: NonEmptyString @source(name: "refresh_token_validity", type: "NonEmptyString", subgraph: "Authentik")
  """
  Include User claims from scopes in the id_token, for applications that don't access the userinfo endpoint.
  """
  includeClaimsInIdToken: Boolean @source(name: "include_claims_in_id_token", type: "Boolean", subgraph: "Authentik")
  """Key used to sign the tokens."""
  signingKey: UUID @source(name: "signing_key", type: "UUID", subgraph: "Authentik")
  """
  Key used to encrypt the tokens. When set, tokens will be encrypted and returned as JWEs.
  """
  encryptionKey: UUID @source(name: "encryption_key", type: "UUID", subgraph: "Authentik")
  redirectUris: [RedirectUriRequestInput] @source(name: "redirect_uris", type: "[RedirectURIRequest_Input]", subgraph: "Authentik")
  subMode: SubModeEnum @source(name: "sub_mode", type: "SubModeEnum", subgraph: "Authentik")
  issuerMode: IssuerModeEnum @source(name: "issuer_mode", type: "IssuerModeEnum", subgraph: "Authentik")
  jwksSources: [UUID] @source(name: "jwks_sources", type: "[UUID]", subgraph: "Authentik")
}

"""ProxyProvider Serializer"""
input PatchedProxyProviderRequestInput @source(name: "PatchedProxyProviderRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  """
  Flow used for authentication when the associated application is accessed by an un-authenticated user.
  """
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow used when authorizing this provider."""
  authorizationFlow: UUID @source(name: "authorization_flow", type: "UUID", subgraph: "Authentik")
  """Flow used ending the session from a provider."""
  invalidationFlow: UUID @source(name: "invalidation_flow", type: "UUID", subgraph: "Authentik")
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  internalHost: URL @source(name: "internal_host", type: "URL", subgraph: "Authentik")
  externalHost: URL @source(name: "external_host", type: "URL", subgraph: "Authentik")
  """Validate SSL Certificates of upstream servers"""
  internalHostSslValidation: Boolean @source(name: "internal_host_ssl_validation", type: "Boolean", subgraph: "Authentik")
  certificate: UUID
  """
  Regular expressions for which authentication is not required. Each new line is interpreted as a new Regular Expression.
  """
  skipPathRegex: String @source(name: "skip_path_regex", type: "String", subgraph: "Authentik")
  """
  Set a custom HTTP-Basic Authentication header based on values from authentik.
  """
  basicAuthEnabled: Boolean @source(name: "basic_auth_enabled", type: "Boolean", subgraph: "Authentik")
  """
  User/Group Attribute used for the password part of the HTTP-Basic Header.
  """
  basicAuthPasswordAttribute: String @source(name: "basic_auth_password_attribute", type: "String", subgraph: "Authentik")
  """
  User/Group Attribute used for the user part of the HTTP-Basic Header. If not set, the user's Email address is used.
  """
  basicAuthUserAttribute: String @source(name: "basic_auth_user_attribute", type: "String", subgraph: "Authentik")
  mode: ProxyMode
  """
  When enabled, this provider will intercept the authorization header and authenticate requests based on its value.
  """
  interceptHeaderAuth: Boolean @source(name: "intercept_header_auth", type: "Boolean", subgraph: "Authentik")
  cookieDomain: String @source(name: "cookie_domain", type: "String", subgraph: "Authentik")
  jwksSources: [UUID] @source(name: "jwks_sources", type: "[UUID]", subgraph: "Authentik")
  """
  Tokens not valid on or after current time + this value (Format: hours=1;minutes=2;seconds=3).
  """
  accessTokenValidity: NonEmptyString @source(name: "access_token_validity", type: "NonEmptyString", subgraph: "Authentik")
  """
  Tokens not valid on or after current time + this value (Format: hours=1;minutes=2;seconds=3).
  """
  refreshTokenValidity: NonEmptyString @source(name: "refresh_token_validity", type: "NonEmptyString", subgraph: "Authentik")
}

"""RACProvider Serializer"""
input PatchedRacProviderRequestInput @source(name: "PatchedRACProviderRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  """
  Flow used for authentication when the associated application is accessed by an un-authenticated user.
  """
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow used when authorizing this provider."""
  authorizationFlow: UUID @source(name: "authorization_flow", type: "UUID", subgraph: "Authentik")
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  settings: JSON
  """
  Determines how long a session lasts. Default of 0 means that the sessions lasts until the browser is closed. (Format: hours=-1;minutes=-2;seconds=-3)
  """
  connectionExpiry: NonEmptyString @source(name: "connection_expiry", type: "NonEmptyString", subgraph: "Authentik")
  """When set to true, connection tokens will be deleted upon disconnect."""
  deleteTokenOnDisconnect: Boolean @source(name: "delete_token_on_disconnect", type: "Boolean", subgraph: "Authentik")
}

"""RadiusProvider Serializer"""
input PatchedRadiusProviderRequestInput @source(name: "PatchedRadiusProviderRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  """
  Flow used for authentication when the associated application is accessed by an un-authenticated user.
  """
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow used when authorizing this provider."""
  authorizationFlow: UUID @source(name: "authorization_flow", type: "UUID", subgraph: "Authentik")
  """Flow used ending the session from a provider."""
  invalidationFlow: UUID @source(name: "invalidation_flow", type: "UUID", subgraph: "Authentik")
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  """
  List of CIDRs (comma-separated) that clients can connect from. A more specific CIDR will match before a looser one. Clients connecting from a non-specified CIDR will be dropped.
  """
  clientNetworks: NonEmptyString @source(name: "client_networks", type: "NonEmptyString", subgraph: "Authentik")
  """Shared secret between clients and server to hash packets."""
  sharedSecret: NonEmptyString @source(name: "shared_secret", type: "NonEmptyString", subgraph: "Authentik")
  """
  When enabled, code-based multi-factor authentication can be used by appending a semicolon and the TOTP code to the password. This should only be enabled if all users that will bind to this provider have a TOTP device configured, as otherwise a password may incorrectly be rejected if it contains a semicolon.
  """
  mfaSupport: Boolean @source(name: "mfa_support", type: "Boolean", subgraph: "Authentik")
}

"""SAMLProvider Serializer"""
input PatchedSamlProviderRequestInput @source(name: "PatchedSAMLProviderRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  """
  Flow used for authentication when the associated application is accessed by an un-authenticated user.
  """
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow used when authorizing this provider."""
  authorizationFlow: UUID @source(name: "authorization_flow", type: "UUID", subgraph: "Authentik")
  """Flow used ending the session from a provider."""
  invalidationFlow: UUID @source(name: "invalidation_flow", type: "UUID", subgraph: "Authentik")
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  acsUrl: URL @source(name: "acs_url", type: "URL", subgraph: "Authentik")
  """
  Value of the audience restriction field of the assertion. When left empty, no audience restriction will be added.
  """
  audience: String
  """Also known as EntityID"""
  issuer: NonEmptyString
  """
  Assertion valid not before current time + this value (Format: hours=-1;minutes=-2;seconds=-3).
  """
  assertionValidNotBefore: NonEmptyString @source(name: "assertion_valid_not_before", type: "NonEmptyString", subgraph: "Authentik")
  """
  Assertion not valid on or after current time + this value (Format: hours=1;minutes=2;seconds=3).
  """
  assertionValidNotOnOrAfter: NonEmptyString @source(name: "assertion_valid_not_on_or_after", type: "NonEmptyString", subgraph: "Authentik")
  """
  Session not valid on or after current time + this value (Format: hours=1;minutes=2;seconds=3).
  """
  sessionValidNotOnOrAfter: NonEmptyString @source(name: "session_valid_not_on_or_after", type: "NonEmptyString", subgraph: "Authentik")
  """
  Configure how the NameID value will be created. When left empty, the NameIDPolicy of the incoming request will be considered
  """
  nameIdMapping: UUID @source(name: "name_id_mapping", type: "UUID", subgraph: "Authentik")
  digestAlgorithm: DigestAlgorithmEnum @source(name: "digest_algorithm", type: "DigestAlgorithmEnum", subgraph: "Authentik")
  signatureAlgorithm: SignatureAlgorithmEnum @source(name: "signature_algorithm", type: "SignatureAlgorithmEnum", subgraph: "Authentik")
  """Keypair used to sign outgoing Responses going to the Service Provider."""
  signingKp: UUID @source(name: "signing_kp", type: "UUID", subgraph: "Authentik")
  """
  When selected, incoming assertion's Signatures will be validated against this certificate. To allow unsigned Requests, leave on default.
  """
  verificationKp: UUID @source(name: "verification_kp", type: "UUID", subgraph: "Authentik")
  """
  When selected, incoming assertions are encrypted by the IdP using the public key of the encryption keypair. The assertion is decrypted by the SP using the the private key.
  """
  encryptionKp: UUID @source(name: "encryption_kp", type: "UUID", subgraph: "Authentik")
  signAssertion: Boolean @source(name: "sign_assertion", type: "Boolean", subgraph: "Authentik")
  signResponse: Boolean @source(name: "sign_response", type: "Boolean", subgraph: "Authentik")
  """
  This determines how authentik sends the response back to the Service Provider.
  """
  spBinding: JSON @source(name: "sp_binding", type: "JSON", subgraph: "Authentik")
  """Default relay_state value for IDP-initiated logins"""
  defaultRelayState: String @source(name: "default_relay_state", type: "String", subgraph: "Authentik")
}

"""Import saml provider from XML Metadata"""
input SamlProviderImportRequestInput @source(name: "SAMLProviderImportRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  authorizationFlow: UUID! @source(name: "authorization_flow", type: "UUID!", subgraph: "Authentik")
  invalidationFlow: UUID! @source(name: "invalidation_flow", type: "UUID!", subgraph: "Authentik")
  file: File!
}

"""SCIMProvider Serializer"""
input PatchedScimProviderRequestInput @source(name: "PatchedSCIMProviderRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  """Property mappings used for group creation/updating."""
  propertyMappingsGroup: [UUID] @source(name: "property_mappings_group", type: "[UUID]", subgraph: "Authentik")
  """Base URL to SCIM requests, usually ends in /v2"""
  url: NonEmptyString
  verifyCertificates: Boolean @source(name: "verify_certificates", type: "Boolean", subgraph: "Authentik")
  """Authentication token"""
  token: NonEmptyString
  excludeUsersServiceAccount: Boolean @source(name: "exclude_users_service_account", type: "Boolean", subgraph: "Authentik")
  filterGroup: UUID @source(name: "filter_group", type: "UUID", subgraph: "Authentik")
}

"""SCIMProviderGroup Serializer"""
input ScimProviderGroupRequestInput @source(name: "SCIMProviderGroupRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  scimId: NonEmptyString! @source(name: "scim_id", type: "NonEmptyString!", subgraph: "Authentik")
  group: UUID!
  provider: Int!
}

"""SCIMProviderUser Serializer"""
input ScimProviderUserRequestInput @source(name: "SCIMProviderUserRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  scimId: NonEmptyString! @source(name: "scim_id", type: "NonEmptyString!", subgraph: "Authentik")
  user: Int!
  provider: Int!
}

"""ConnectionToken Serializer"""
input ConnectionTokenRequestInput @source(name: "ConnectionTokenRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pk: UUID
  provider: Int!
  endpoint: UUID!
}

"""ConnectionToken Serializer"""
input PatchedConnectionTokenRequestInput @source(name: "PatchedConnectionTokenRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  pk: UUID
  provider: Int
  endpoint: UUID
}

"""Endpoint Serializer"""
input EndpointRequestInput @source(name: "EndpointRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  provider: Int!
  protocol: ProtocolEnum!
  host: NonEmptyString!
  settings: JSON
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  authMode: AuthModeEnum! @source(name: "auth_mode", type: "AuthModeEnum!", subgraph: "Authentik")
  maximumConnections: Int @source(name: "maximum_connections", type: "Int", subgraph: "Authentik")
}

"""Endpoint Serializer"""
input PatchedEndpointRequestInput @source(name: "PatchedEndpointRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  provider: Int
  protocol: ProtocolEnum
  host: NonEmptyString
  settings: JSON
  propertyMappings: [UUID] @source(name: "property_mappings", type: "[UUID]", subgraph: "Authentik")
  authMode: AuthModeEnum @source(name: "auth_mode", type: "AuthModeEnum", subgraph: "Authentik")
  maximumConnections: Int @source(name: "maximum_connections", type: "Int", subgraph: "Authentik")
}

"""Request to assign a new permission"""
input PermissionAssignRequestInput @source(name: "PermissionAssignRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  permissions: [NonEmptyString]!
  model: ModelEnum
  objectPk: NonEmptyString @source(name: "object_pk", type: "NonEmptyString", subgraph: "Authentik")
}

"""Request to assign a new permission"""
input PatchedPermissionAssignRequestInput @source(name: "PatchedPermissionAssignRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  permissions: [NonEmptyString]
  model: ModelEnum
  objectPk: NonEmptyString @source(name: "object_pk", type: "NonEmptyString", subgraph: "Authentik")
}

"""User permission with additional object-related data"""
input ExtraRoleObjectPermissionRequestInput @source(name: "ExtraRoleObjectPermissionRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  objectPk: NonEmptyString! @source(name: "object_pk", type: "NonEmptyString!", subgraph: "Authentik")
}

"""User permission with additional object-related data"""
input PatchedExtraRoleObjectPermissionRequestInput @source(name: "PatchedExtraRoleObjectPermissionRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  objectPk: NonEmptyString @source(name: "object_pk", type: "NonEmptyString", subgraph: "Authentik")
}

"""User permission with additional object-related data"""
input ExtraUserObjectPermissionRequestInput @source(name: "ExtraUserObjectPermissionRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  objectPk: NonEmptyString! @source(name: "object_pk", type: "NonEmptyString!", subgraph: "Authentik")
}

"""User permission with additional object-related data"""
input PatchedExtraUserObjectPermissionRequestInput @source(name: "PatchedExtraUserObjectPermissionRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  objectPk: NonEmptyString @source(name: "object_pk", type: "NonEmptyString", subgraph: "Authentik")
}

"""Role serializer"""
input RoleRequestInput @source(name: "RoleRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: MutationInputRbacRolesCreateInputName! @source(name: "name", type: "mutationInput_rbac_roles_create_input_name!", subgraph: "Authentik")
}

"""Role serializer"""
input PatchedRoleRequestInput @source(name: "PatchedRoleRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: MutationInputRbacRolesPartialUpdateInputName @source(name: "name", type: "mutationInput_rbac_roles_partial_update_input_name", subgraph: "Authentik")
}

"""Kerberos Source Serializer"""
input KerberosSourceRequestInput @source(name: "KerberosSourceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """Source's display Name."""
  name: NonEmptyString!
  slug: MutationInputSourcesKerberosCreateInputSlug! @source(name: "slug", type: "mutationInput_sources_kerberos_create_input_slug!", subgraph: "Authentik")
  enabled: Boolean
  """Flow to use when authenticating existing users."""
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow to use when enrolling new users."""
  enrollmentFlow: UUID @source(name: "enrollment_flow", type: "UUID", subgraph: "Authentik")
  userPropertyMappings: [UUID] @source(name: "user_property_mappings", type: "[UUID]", subgraph: "Authentik")
  groupPropertyMappings: [UUID] @source(name: "group_property_mappings", type: "[UUID]", subgraph: "Authentik")
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  userMatchingMode: UserMatchingModeEnum @source(name: "user_matching_mode", type: "UserMatchingModeEnum", subgraph: "Authentik")
  userPathTemplate: NonEmptyString @source(name: "user_path_template", type: "NonEmptyString", subgraph: "Authentik")
  groupMatchingMode: GroupMatchingModeEnum @source(name: "group_matching_mode", type: "GroupMatchingModeEnum", subgraph: "Authentik")
  """Kerberos realm"""
  realm: NonEmptyString!
  """Custom krb5.conf to use. Uses the system one by default"""
  krb5Conf: String @source(name: "krb5_conf", type: "String", subgraph: "Authentik")
  """Sync users from Kerberos into authentik"""
  syncUsers: Boolean @source(name: "sync_users", type: "Boolean", subgraph: "Authentik")
  """When a user changes their password, sync it back to Kerberos"""
  syncUsersPassword: Boolean @source(name: "sync_users_password", type: "Boolean", subgraph: "Authentik")
  """Principal to authenticate to kadmin for sync."""
  syncPrincipal: String @source(name: "sync_principal", type: "String", subgraph: "Authentik")
  """Password to authenticate to kadmin for sync"""
  syncPassword: String @source(name: "sync_password", type: "String", subgraph: "Authentik")
  """
  Keytab to authenticate to kadmin for sync. Must be base64-encoded or in the form TYPE:residual
  """
  syncKeytab: String @source(name: "sync_keytab", type: "String", subgraph: "Authentik")
  """
  Credentials cache to authenticate to kadmin for sync. Must be in the form TYPE:residual
  """
  syncCcache: String @source(name: "sync_ccache", type: "String", subgraph: "Authentik")
  """
  Force the use of a specific server name for SPNEGO. Must be in the form HTTP@hostname
  """
  spnegoServerName: String @source(name: "spnego_server_name", type: "String", subgraph: "Authentik")
  """SPNEGO keytab base64-encoded or path to keytab in the form FILE:path"""
  spnegoKeytab: String @source(name: "spnego_keytab", type: "String", subgraph: "Authentik")
  """Credential cache to use for SPNEGO in form type:residual"""
  spnegoCcache: String @source(name: "spnego_ccache", type: "String", subgraph: "Authentik")
  """
  If enabled, the authentik-stored password will be updated upon login with the Kerberos password backend
  """
  passwordLoginUpdateInternalPassword: Boolean @source(name: "password_login_update_internal_password", type: "Boolean", subgraph: "Authentik")
}

"""Kerberos Source Serializer"""
input PatchedKerberosSourceRequestInput @source(name: "PatchedKerberosSourceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """Source's display Name."""
  name: NonEmptyString
  slug: MutationInputSourcesKerberosPartialUpdateInputSlug @source(name: "slug", type: "mutationInput_sources_kerberos_partial_update_input_slug", subgraph: "Authentik")
  enabled: Boolean
  """Flow to use when authenticating existing users."""
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow to use when enrolling new users."""
  enrollmentFlow: UUID @source(name: "enrollment_flow", type: "UUID", subgraph: "Authentik")
  userPropertyMappings: [UUID] @source(name: "user_property_mappings", type: "[UUID]", subgraph: "Authentik")
  groupPropertyMappings: [UUID] @source(name: "group_property_mappings", type: "[UUID]", subgraph: "Authentik")
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  userMatchingMode: UserMatchingModeEnum @source(name: "user_matching_mode", type: "UserMatchingModeEnum", subgraph: "Authentik")
  userPathTemplate: NonEmptyString @source(name: "user_path_template", type: "NonEmptyString", subgraph: "Authentik")
  groupMatchingMode: GroupMatchingModeEnum @source(name: "group_matching_mode", type: "GroupMatchingModeEnum", subgraph: "Authentik")
  """Kerberos realm"""
  realm: NonEmptyString
  """Custom krb5.conf to use. Uses the system one by default"""
  krb5Conf: String @source(name: "krb5_conf", type: "String", subgraph: "Authentik")
  """Sync users from Kerberos into authentik"""
  syncUsers: Boolean @source(name: "sync_users", type: "Boolean", subgraph: "Authentik")
  """When a user changes their password, sync it back to Kerberos"""
  syncUsersPassword: Boolean @source(name: "sync_users_password", type: "Boolean", subgraph: "Authentik")
  """Principal to authenticate to kadmin for sync."""
  syncPrincipal: String @source(name: "sync_principal", type: "String", subgraph: "Authentik")
  """Password to authenticate to kadmin for sync"""
  syncPassword: String @source(name: "sync_password", type: "String", subgraph: "Authentik")
  """
  Keytab to authenticate to kadmin for sync. Must be base64-encoded or in the form TYPE:residual
  """
  syncKeytab: String @source(name: "sync_keytab", type: "String", subgraph: "Authentik")
  """
  Credentials cache to authenticate to kadmin for sync. Must be in the form TYPE:residual
  """
  syncCcache: String @source(name: "sync_ccache", type: "String", subgraph: "Authentik")
  """
  Force the use of a specific server name for SPNEGO. Must be in the form HTTP@hostname
  """
  spnegoServerName: String @source(name: "spnego_server_name", type: "String", subgraph: "Authentik")
  """SPNEGO keytab base64-encoded or path to keytab in the form FILE:path"""
  spnegoKeytab: String @source(name: "spnego_keytab", type: "String", subgraph: "Authentik")
  """Credential cache to use for SPNEGO in form type:residual"""
  spnegoCcache: String @source(name: "spnego_ccache", type: "String", subgraph: "Authentik")
  """
  If enabled, the authentik-stored password will be updated upon login with the Kerberos password backend
  """
  passwordLoginUpdateInternalPassword: Boolean @source(name: "password_login_update_internal_password", type: "Boolean", subgraph: "Authentik")
}

"""LDAP Source Serializer"""
input LdapSourceRequestInput @source(name: "LDAPSourceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """Source's display Name."""
  name: NonEmptyString!
  slug: MutationInputSourcesLdapCreateInputSlug! @source(name: "slug", type: "mutationInput_sources_ldap_create_input_slug!", subgraph: "Authentik")
  enabled: Boolean
  """Flow to use when authenticating existing users."""
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow to use when enrolling new users."""
  enrollmentFlow: UUID @source(name: "enrollment_flow", type: "UUID", subgraph: "Authentik")
  userPropertyMappings: [UUID] @source(name: "user_property_mappings", type: "[UUID]", subgraph: "Authentik")
  groupPropertyMappings: [UUID] @source(name: "group_property_mappings", type: "[UUID]", subgraph: "Authentik")
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  userMatchingMode: UserMatchingModeEnum @source(name: "user_matching_mode", type: "UserMatchingModeEnum", subgraph: "Authentik")
  userPathTemplate: NonEmptyString @source(name: "user_path_template", type: "NonEmptyString", subgraph: "Authentik")
  serverUri: URL! @source(name: "server_uri", type: "URL!", subgraph: "Authentik")
  """
  Optionally verify the LDAP Server's Certificate against the CA Chain in this keypair.
  """
  peerCertificate: UUID @source(name: "peer_certificate", type: "UUID", subgraph: "Authentik")
  """
  Client certificate to authenticate against the LDAP Server's Certificate.
  """
  clientCertificate: UUID @source(name: "client_certificate", type: "UUID", subgraph: "Authentik")
  bindCn: String @source(name: "bind_cn", type: "String", subgraph: "Authentik")
  bindPassword: String @source(name: "bind_password", type: "String", subgraph: "Authentik")
  startTls: Boolean @source(name: "start_tls", type: "Boolean", subgraph: "Authentik")
  sni: Boolean
  baseDn: NonEmptyString! @source(name: "base_dn", type: "NonEmptyString!", subgraph: "Authentik")
  """Prepended to Base DN for User-queries."""
  additionalUserDn: String @source(name: "additional_user_dn", type: "String", subgraph: "Authentik")
  """Prepended to Base DN for Group-queries."""
  additionalGroupDn: String @source(name: "additional_group_dn", type: "String", subgraph: "Authentik")
  """Consider Objects matching this filter to be Users."""
  userObjectFilter: NonEmptyString @source(name: "user_object_filter", type: "NonEmptyString", subgraph: "Authentik")
  """Consider Objects matching this filter to be Groups."""
  groupObjectFilter: NonEmptyString @source(name: "group_object_filter", type: "NonEmptyString", subgraph: "Authentik")
  """Field which contains members of a group."""
  groupMembershipField: NonEmptyString @source(name: "group_membership_field", type: "NonEmptyString", subgraph: "Authentik")
  """Field which contains a unique Identifier."""
  objectUniquenessField: NonEmptyString @source(name: "object_uniqueness_field", type: "NonEmptyString", subgraph: "Authentik")
  """Update internal authentik password when login succeeds with LDAP"""
  passwordLoginUpdateInternalPassword: Boolean @source(name: "password_login_update_internal_password", type: "Boolean", subgraph: "Authentik")
  syncUsers: Boolean @source(name: "sync_users", type: "Boolean", subgraph: "Authentik")
  """
  When a user changes their password, sync it back to LDAP. This can only be enabled on a single LDAP source.
  """
  syncUsersPassword: Boolean @source(name: "sync_users_password", type: "Boolean", subgraph: "Authentik")
  syncGroups: Boolean @source(name: "sync_groups", type: "Boolean", subgraph: "Authentik")
  syncParentGroup: UUID @source(name: "sync_parent_group", type: "UUID", subgraph: "Authentik")
}

"""LDAP Source Serializer"""
input PatchedLdapSourceRequestInput @source(name: "PatchedLDAPSourceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """Source's display Name."""
  name: NonEmptyString
  slug: MutationInputSourcesLdapPartialUpdateInputSlug @source(name: "slug", type: "mutationInput_sources_ldap_partial_update_input_slug", subgraph: "Authentik")
  enabled: Boolean
  """Flow to use when authenticating existing users."""
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow to use when enrolling new users."""
  enrollmentFlow: UUID @source(name: "enrollment_flow", type: "UUID", subgraph: "Authentik")
  userPropertyMappings: [UUID] @source(name: "user_property_mappings", type: "[UUID]", subgraph: "Authentik")
  groupPropertyMappings: [UUID] @source(name: "group_property_mappings", type: "[UUID]", subgraph: "Authentik")
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  userMatchingMode: UserMatchingModeEnum @source(name: "user_matching_mode", type: "UserMatchingModeEnum", subgraph: "Authentik")
  userPathTemplate: NonEmptyString @source(name: "user_path_template", type: "NonEmptyString", subgraph: "Authentik")
  serverUri: URL @source(name: "server_uri", type: "URL", subgraph: "Authentik")
  """
  Optionally verify the LDAP Server's Certificate against the CA Chain in this keypair.
  """
  peerCertificate: UUID @source(name: "peer_certificate", type: "UUID", subgraph: "Authentik")
  """
  Client certificate to authenticate against the LDAP Server's Certificate.
  """
  clientCertificate: UUID @source(name: "client_certificate", type: "UUID", subgraph: "Authentik")
  bindCn: String @source(name: "bind_cn", type: "String", subgraph: "Authentik")
  bindPassword: String @source(name: "bind_password", type: "String", subgraph: "Authentik")
  startTls: Boolean @source(name: "start_tls", type: "Boolean", subgraph: "Authentik")
  sni: Boolean
  baseDn: NonEmptyString @source(name: "base_dn", type: "NonEmptyString", subgraph: "Authentik")
  """Prepended to Base DN for User-queries."""
  additionalUserDn: String @source(name: "additional_user_dn", type: "String", subgraph: "Authentik")
  """Prepended to Base DN for Group-queries."""
  additionalGroupDn: String @source(name: "additional_group_dn", type: "String", subgraph: "Authentik")
  """Consider Objects matching this filter to be Users."""
  userObjectFilter: NonEmptyString @source(name: "user_object_filter", type: "NonEmptyString", subgraph: "Authentik")
  """Consider Objects matching this filter to be Groups."""
  groupObjectFilter: NonEmptyString @source(name: "group_object_filter", type: "NonEmptyString", subgraph: "Authentik")
  """Field which contains members of a group."""
  groupMembershipField: NonEmptyString @source(name: "group_membership_field", type: "NonEmptyString", subgraph: "Authentik")
  """Field which contains a unique Identifier."""
  objectUniquenessField: NonEmptyString @source(name: "object_uniqueness_field", type: "NonEmptyString", subgraph: "Authentik")
  """Update internal authentik password when login succeeds with LDAP"""
  passwordLoginUpdateInternalPassword: Boolean @source(name: "password_login_update_internal_password", type: "Boolean", subgraph: "Authentik")
  syncUsers: Boolean @source(name: "sync_users", type: "Boolean", subgraph: "Authentik")
  """
  When a user changes their password, sync it back to LDAP. This can only be enabled on a single LDAP source.
  """
  syncUsersPassword: Boolean @source(name: "sync_users_password", type: "Boolean", subgraph: "Authentik")
  syncGroups: Boolean @source(name: "sync_groups", type: "Boolean", subgraph: "Authentik")
  syncParentGroup: UUID @source(name: "sync_parent_group", type: "UUID", subgraph: "Authentik")
}

"""OAuth Source Serializer"""
input OAuthSourceRequestInput @source(name: "OAuthSourceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """Source's display Name."""
  name: NonEmptyString!
  slug: MutationInputSourcesOauthCreateInputSlug! @source(name: "slug", type: "mutationInput_sources_oauth_create_input_slug!", subgraph: "Authentik")
  enabled: Boolean
  """Flow to use when authenticating existing users."""
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow to use when enrolling new users."""
  enrollmentFlow: UUID @source(name: "enrollment_flow", type: "UUID", subgraph: "Authentik")
  userPropertyMappings: [UUID] @source(name: "user_property_mappings", type: "[UUID]", subgraph: "Authentik")
  groupPropertyMappings: [UUID] @source(name: "group_property_mappings", type: "[UUID]", subgraph: "Authentik")
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  userMatchingMode: UserMatchingModeEnum @source(name: "user_matching_mode", type: "UserMatchingModeEnum", subgraph: "Authentik")
  userPathTemplate: NonEmptyString @source(name: "user_path_template", type: "NonEmptyString", subgraph: "Authentik")
  groupMatchingMode: GroupMatchingModeEnum @source(name: "group_matching_mode", type: "GroupMatchingModeEnum", subgraph: "Authentik")
  providerType: ProviderTypeEnum! @source(name: "provider_type", type: "ProviderTypeEnum!", subgraph: "Authentik")
  """
  URL used to request the initial token. This URL is only required for OAuth 1.
  """
  requestTokenUrl: MutationInputSourcesOauthCreateInputRequestTokenUrl @source(name: "request_token_url", type: "mutationInput_sources_oauth_create_input_request_token_url", subgraph: "Authentik")
  """URL the user is redirect to to conest the flow."""
  authorizationUrl: MutationInputSourcesOauthCreateInputAuthorizationUrl @source(name: "authorization_url", type: "mutationInput_sources_oauth_create_input_authorization_url", subgraph: "Authentik")
  """URL used by authentik to retrieve tokens."""
  accessTokenUrl: MutationInputSourcesOauthCreateInputAccessTokenUrl @source(name: "access_token_url", type: "mutationInput_sources_oauth_create_input_access_token_url", subgraph: "Authentik")
  """URL used by authentik to get user information."""
  profileUrl: MutationInputSourcesOauthCreateInputProfileUrl @source(name: "profile_url", type: "mutationInput_sources_oauth_create_input_profile_url", subgraph: "Authentik")
  consumerKey: NonEmptyString! @source(name: "consumer_key", type: "NonEmptyString!", subgraph: "Authentik")
  consumerSecret: NonEmptyString! @source(name: "consumer_secret", type: "NonEmptyString!", subgraph: "Authentik")
  additionalScopes: String @source(name: "additional_scopes", type: "String", subgraph: "Authentik")
  oidcWellKnownUrl: String @source(name: "oidc_well_known_url", type: "String", subgraph: "Authentik")
  oidcJwksUrl: String @source(name: "oidc_jwks_url", type: "String", subgraph: "Authentik")
  oidcJwks: JSON @source(name: "oidc_jwks", type: "JSON", subgraph: "Authentik")
}

"""OAuth Source Serializer"""
input PatchedOAuthSourceRequestInput @source(name: "PatchedOAuthSourceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """Source's display Name."""
  name: NonEmptyString
  slug: MutationInputSourcesOauthPartialUpdateInputSlug @source(name: "slug", type: "mutationInput_sources_oauth_partial_update_input_slug", subgraph: "Authentik")
  enabled: Boolean
  """Flow to use when authenticating existing users."""
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow to use when enrolling new users."""
  enrollmentFlow: UUID @source(name: "enrollment_flow", type: "UUID", subgraph: "Authentik")
  userPropertyMappings: [UUID] @source(name: "user_property_mappings", type: "[UUID]", subgraph: "Authentik")
  groupPropertyMappings: [UUID] @source(name: "group_property_mappings", type: "[UUID]", subgraph: "Authentik")
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  userMatchingMode: UserMatchingModeEnum @source(name: "user_matching_mode", type: "UserMatchingModeEnum", subgraph: "Authentik")
  userPathTemplate: NonEmptyString @source(name: "user_path_template", type: "NonEmptyString", subgraph: "Authentik")
  groupMatchingMode: GroupMatchingModeEnum @source(name: "group_matching_mode", type: "GroupMatchingModeEnum", subgraph: "Authentik")
  providerType: ProviderTypeEnum @source(name: "provider_type", type: "ProviderTypeEnum", subgraph: "Authentik")
  """
  URL used to request the initial token. This URL is only required for OAuth 1.
  """
  requestTokenUrl: MutationInputSourcesOauthPartialUpdateInputRequestTokenUrl @source(name: "request_token_url", type: "mutationInput_sources_oauth_partial_update_input_request_token_url", subgraph: "Authentik")
  """URL the user is redirect to to conest the flow."""
  authorizationUrl: MutationInputSourcesOauthPartialUpdateInputAuthorizationUrl @source(name: "authorization_url", type: "mutationInput_sources_oauth_partial_update_input_authorization_url", subgraph: "Authentik")
  """URL used by authentik to retrieve tokens."""
  accessTokenUrl: MutationInputSourcesOauthPartialUpdateInputAccessTokenUrl @source(name: "access_token_url", type: "mutationInput_sources_oauth_partial_update_input_access_token_url", subgraph: "Authentik")
  """URL used by authentik to get user information."""
  profileUrl: MutationInputSourcesOauthPartialUpdateInputProfileUrl @source(name: "profile_url", type: "mutationInput_sources_oauth_partial_update_input_profile_url", subgraph: "Authentik")
  consumerKey: NonEmptyString @source(name: "consumer_key", type: "NonEmptyString", subgraph: "Authentik")
  consumerSecret: NonEmptyString @source(name: "consumer_secret", type: "NonEmptyString", subgraph: "Authentik")
  additionalScopes: String @source(name: "additional_scopes", type: "String", subgraph: "Authentik")
  oidcWellKnownUrl: String @source(name: "oidc_well_known_url", type: "String", subgraph: "Authentik")
  oidcJwksUrl: String @source(name: "oidc_jwks_url", type: "String", subgraph: "Authentik")
  oidcJwks: JSON @source(name: "oidc_jwks", type: "JSON", subgraph: "Authentik")
}

"""Plex Source Serializer"""
input PlexSourceRequestInput @source(name: "PlexSourceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """Source's display Name."""
  name: NonEmptyString!
  slug: MutationInputSourcesPlexCreateInputSlug! @source(name: "slug", type: "mutationInput_sources_plex_create_input_slug!", subgraph: "Authentik")
  enabled: Boolean
  """Flow to use when authenticating existing users."""
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow to use when enrolling new users."""
  enrollmentFlow: UUID @source(name: "enrollment_flow", type: "UUID", subgraph: "Authentik")
  userPropertyMappings: [UUID] @source(name: "user_property_mappings", type: "[UUID]", subgraph: "Authentik")
  groupPropertyMappings: [UUID] @source(name: "group_property_mappings", type: "[UUID]", subgraph: "Authentik")
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  userMatchingMode: UserMatchingModeEnum @source(name: "user_matching_mode", type: "UserMatchingModeEnum", subgraph: "Authentik")
  userPathTemplate: NonEmptyString @source(name: "user_path_template", type: "NonEmptyString", subgraph: "Authentik")
  groupMatchingMode: GroupMatchingModeEnum @source(name: "group_matching_mode", type: "GroupMatchingModeEnum", subgraph: "Authentik")
  """Client identifier used to talk to Plex."""
  clientId: NonEmptyString @source(name: "client_id", type: "NonEmptyString", subgraph: "Authentik")
  """
  Which servers a user has to be a member of to be granted access. Empty list allows every server.
  """
  allowedServers: [NonEmptyString] @source(name: "allowed_servers", type: "[NonEmptyString]", subgraph: "Authentik")
  """Allow friends to authenticate, even if you don't share a server."""
  allowFriends: Boolean @source(name: "allow_friends", type: "Boolean", subgraph: "Authentik")
  """Plex token used to check friends"""
  plexToken: NonEmptyString! @source(name: "plex_token", type: "NonEmptyString!", subgraph: "Authentik")
}

"""Plex Source Serializer"""
input PatchedPlexSourceRequestInput @source(name: "PatchedPlexSourceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """Source's display Name."""
  name: NonEmptyString
  slug: MutationInputSourcesPlexPartialUpdateInputSlug @source(name: "slug", type: "mutationInput_sources_plex_partial_update_input_slug", subgraph: "Authentik")
  enabled: Boolean
  """Flow to use when authenticating existing users."""
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow to use when enrolling new users."""
  enrollmentFlow: UUID @source(name: "enrollment_flow", type: "UUID", subgraph: "Authentik")
  userPropertyMappings: [UUID] @source(name: "user_property_mappings", type: "[UUID]", subgraph: "Authentik")
  groupPropertyMappings: [UUID] @source(name: "group_property_mappings", type: "[UUID]", subgraph: "Authentik")
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  userMatchingMode: UserMatchingModeEnum @source(name: "user_matching_mode", type: "UserMatchingModeEnum", subgraph: "Authentik")
  userPathTemplate: NonEmptyString @source(name: "user_path_template", type: "NonEmptyString", subgraph: "Authentik")
  groupMatchingMode: GroupMatchingModeEnum @source(name: "group_matching_mode", type: "GroupMatchingModeEnum", subgraph: "Authentik")
  """Client identifier used to talk to Plex."""
  clientId: NonEmptyString @source(name: "client_id", type: "NonEmptyString", subgraph: "Authentik")
  """
  Which servers a user has to be a member of to be granted access. Empty list allows every server.
  """
  allowedServers: [NonEmptyString] @source(name: "allowed_servers", type: "[NonEmptyString]", subgraph: "Authentik")
  """Allow friends to authenticate, even if you don't share a server."""
  allowFriends: Boolean @source(name: "allow_friends", type: "Boolean", subgraph: "Authentik")
  """Plex token used to check friends"""
  plexToken: NonEmptyString @source(name: "plex_token", type: "NonEmptyString", subgraph: "Authentik")
}

"""Serializer to redeem a plex token"""
input PlexTokenRedeemRequestInput @source(name: "PlexTokenRedeemRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  plexToken: NonEmptyString! @source(name: "plex_token", type: "NonEmptyString!", subgraph: "Authentik")
}

"""SAMLSource Serializer"""
input SamlSourceRequestInput @source(name: "SAMLSourceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """Source's display Name."""
  name: NonEmptyString!
  slug: MutationInputSourcesSamlCreateInputSlug! @source(name: "slug", type: "mutationInput_sources_saml_create_input_slug!", subgraph: "Authentik")
  enabled: Boolean
  """Flow to use when authenticating existing users."""
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow to use when enrolling new users."""
  enrollmentFlow: UUID @source(name: "enrollment_flow", type: "UUID", subgraph: "Authentik")
  userPropertyMappings: [UUID] @source(name: "user_property_mappings", type: "[UUID]", subgraph: "Authentik")
  groupPropertyMappings: [UUID] @source(name: "group_property_mappings", type: "[UUID]", subgraph: "Authentik")
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  userMatchingMode: UserMatchingModeEnum @source(name: "user_matching_mode", type: "UserMatchingModeEnum", subgraph: "Authentik")
  userPathTemplate: NonEmptyString @source(name: "user_path_template", type: "NonEmptyString", subgraph: "Authentik")
  groupMatchingMode: GroupMatchingModeEnum @source(name: "group_matching_mode", type: "GroupMatchingModeEnum", subgraph: "Authentik")
  """Flow used before authentication."""
  preAuthenticationFlow: UUID! @source(name: "pre_authentication_flow", type: "UUID!", subgraph: "Authentik")
  """Also known as Entity ID. Defaults the Metadata URL."""
  issuer: String
  """URL that the initial Login request is sent to."""
  ssoUrl: URL! @source(name: "sso_url", type: "URL!", subgraph: "Authentik")
  """Optional URL if your IDP supports Single-Logout."""
  sloUrl: URL @source(name: "slo_url", type: "URL", subgraph: "Authentik")
  """
  Allows authentication flows initiated by the IdP. This can be a security risk, as no validation of the request ID is done.
  """
  allowIdpInitiated: Boolean @source(name: "allow_idp_initiated", type: "Boolean", subgraph: "Authentik")
  nameIdPolicy: NameIdPolicyEnum @source(name: "name_id_policy", type: "NameIdPolicyEnum", subgraph: "Authentik")
  bindingType: BindingTypeEnum @source(name: "binding_type", type: "BindingTypeEnum", subgraph: "Authentik")
  """
  When selected, incoming assertion's Signatures will be validated against this certificate. To allow unsigned Requests, leave on default.
  """
  verificationKp: UUID @source(name: "verification_kp", type: "UUID", subgraph: "Authentik")
  """
  Keypair used to sign outgoing Responses going to the Identity Provider.
  """
  signingKp: UUID @source(name: "signing_kp", type: "UUID", subgraph: "Authentik")
  digestAlgorithm: DigestAlgorithmEnum @source(name: "digest_algorithm", type: "DigestAlgorithmEnum", subgraph: "Authentik")
  signatureAlgorithm: SignatureAlgorithmEnum @source(name: "signature_algorithm", type: "SignatureAlgorithmEnum", subgraph: "Authentik")
  """
  Time offset when temporary users should be deleted. This only applies if your IDP uses the NameID Format 'transient', and the user doesn't log out manually. (Format: hours=1;minutes=2;seconds=3).
  """
  temporaryUserDeleteAfter: NonEmptyString @source(name: "temporary_user_delete_after", type: "NonEmptyString", subgraph: "Authentik")
  """
  When selected, incoming assertions are encrypted by the IdP using the public key of the encryption keypair. The assertion is decrypted by the SP using the the private key.
  """
  encryptionKp: UUID @source(name: "encryption_kp", type: "UUID", subgraph: "Authentik")
}

"""SAMLSource Serializer"""
input PatchedSamlSourceRequestInput @source(name: "PatchedSAMLSourceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """Source's display Name."""
  name: NonEmptyString
  slug: MutationInputSourcesSamlPartialUpdateInputSlug @source(name: "slug", type: "mutationInput_sources_saml_partial_update_input_slug", subgraph: "Authentik")
  enabled: Boolean
  """Flow to use when authenticating existing users."""
  authenticationFlow: UUID @source(name: "authentication_flow", type: "UUID", subgraph: "Authentik")
  """Flow to use when enrolling new users."""
  enrollmentFlow: UUID @source(name: "enrollment_flow", type: "UUID", subgraph: "Authentik")
  userPropertyMappings: [UUID] @source(name: "user_property_mappings", type: "[UUID]", subgraph: "Authentik")
  groupPropertyMappings: [UUID] @source(name: "group_property_mappings", type: "[UUID]", subgraph: "Authentik")
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  userMatchingMode: UserMatchingModeEnum @source(name: "user_matching_mode", type: "UserMatchingModeEnum", subgraph: "Authentik")
  userPathTemplate: NonEmptyString @source(name: "user_path_template", type: "NonEmptyString", subgraph: "Authentik")
  groupMatchingMode: GroupMatchingModeEnum @source(name: "group_matching_mode", type: "GroupMatchingModeEnum", subgraph: "Authentik")
  """Flow used before authentication."""
  preAuthenticationFlow: UUID @source(name: "pre_authentication_flow", type: "UUID", subgraph: "Authentik")
  """Also known as Entity ID. Defaults the Metadata URL."""
  issuer: String
  """URL that the initial Login request is sent to."""
  ssoUrl: URL @source(name: "sso_url", type: "URL", subgraph: "Authentik")
  """Optional URL if your IDP supports Single-Logout."""
  sloUrl: URL @source(name: "slo_url", type: "URL", subgraph: "Authentik")
  """
  Allows authentication flows initiated by the IdP. This can be a security risk, as no validation of the request ID is done.
  """
  allowIdpInitiated: Boolean @source(name: "allow_idp_initiated", type: "Boolean", subgraph: "Authentik")
  nameIdPolicy: NameIdPolicyEnum @source(name: "name_id_policy", type: "NameIdPolicyEnum", subgraph: "Authentik")
  bindingType: BindingTypeEnum @source(name: "binding_type", type: "BindingTypeEnum", subgraph: "Authentik")
  """
  When selected, incoming assertion's Signatures will be validated against this certificate. To allow unsigned Requests, leave on default.
  """
  verificationKp: UUID @source(name: "verification_kp", type: "UUID", subgraph: "Authentik")
  """
  Keypair used to sign outgoing Responses going to the Identity Provider.
  """
  signingKp: UUID @source(name: "signing_kp", type: "UUID", subgraph: "Authentik")
  digestAlgorithm: DigestAlgorithmEnum @source(name: "digest_algorithm", type: "DigestAlgorithmEnum", subgraph: "Authentik")
  signatureAlgorithm: SignatureAlgorithmEnum @source(name: "signature_algorithm", type: "SignatureAlgorithmEnum", subgraph: "Authentik")
  """
  Time offset when temporary users should be deleted. This only applies if your IDP uses the NameID Format 'transient', and the user doesn't log out manually. (Format: hours=1;minutes=2;seconds=3).
  """
  temporaryUserDeleteAfter: NonEmptyString @source(name: "temporary_user_delete_after", type: "NonEmptyString", subgraph: "Authentik")
  """
  When selected, incoming assertions are encrypted by the IdP using the public key of the encryption keypair. The assertion is decrypted by the SP using the the private key.
  """
  encryptionKp: UUID @source(name: "encryption_kp", type: "UUID", subgraph: "Authentik")
}

"""SCIMSource Serializer"""
input ScimSourceRequestInput @source(name: "SCIMSourceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """Source's display Name."""
  name: NonEmptyString!
  slug: MutationInputSourcesScimCreateInputSlug! @source(name: "slug", type: "mutationInput_sources_scim_create_input_slug!", subgraph: "Authentik")
  enabled: Boolean
  userPropertyMappings: [UUID] @source(name: "user_property_mappings", type: "[UUID]", subgraph: "Authentik")
  groupPropertyMappings: [UUID] @source(name: "group_property_mappings", type: "[UUID]", subgraph: "Authentik")
  userPathTemplate: NonEmptyString @source(name: "user_path_template", type: "NonEmptyString", subgraph: "Authentik")
}

"""SCIMSource Serializer"""
input PatchedScimSourceRequestInput @source(name: "PatchedSCIMSourceRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  """Source's display Name."""
  name: NonEmptyString
  slug: MutationInputSourcesScimPartialUpdateInputSlug @source(name: "slug", type: "mutationInput_sources_scim_partial_update_input_slug", subgraph: "Authentik")
  enabled: Boolean
  userPropertyMappings: [UUID] @source(name: "user_property_mappings", type: "[UUID]", subgraph: "Authentik")
  groupPropertyMappings: [UUID] @source(name: "group_property_mappings", type: "[UUID]", subgraph: "Authentik")
  userPathTemplate: NonEmptyString @source(name: "user_path_template", type: "NonEmptyString", subgraph: "Authentik")
}

"""SCIMSourceGroup Serializer"""
input ScimSourceGroupRequestInput @source(name: "SCIMSourceGroupRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  id: NonEmptyString!
  group: UUID!
  source: UUID!
  attributes: JSON
}

"""SCIMSourceGroup Serializer"""
input PatchedScimSourceGroupRequestInput @source(name: "PatchedSCIMSourceGroupRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  id: NonEmptyString
  group: UUID
  source: UUID
  attributes: JSON
}

"""SCIMSourceUser Serializer"""
input ScimSourceUserRequestInput @source(name: "SCIMSourceUserRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  id: NonEmptyString!
  user: Int!
  source: UUID!
  attributes: JSON
}

"""SCIMSourceUser Serializer"""
input PatchedScimSourceUserRequestInput @source(name: "PatchedSCIMSourceUserRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  id: NonEmptyString
  user: Int
  source: UUID
  attributes: JSON
}

"""Kerberos Source Serializer"""
input UserKerberosSourceConnectionRequestInput @source(name: "UserKerberosSourceConnectionRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  user: Int!
  identifier: NonEmptyString!
}

"""Kerberos Source Serializer"""
input PatchedUserKerberosSourceConnectionRequestInput @source(name: "PatchedUserKerberosSourceConnectionRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  user: Int
  identifier: NonEmptyString
}

"""OAuth Source Serializer"""
input UserOAuthSourceConnectionRequestInput @source(name: "UserOAuthSourceConnectionRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  identifier: MutationInputSourcesUserConnectionsOauthCreateInputIdentifier! @source(name: "identifier", type: "mutationInput_sources_user_connections_oauth_create_input_identifier!", subgraph: "Authentik")
  accessToken: String @source(name: "access_token", type: "String", subgraph: "Authentik")
}

"""OAuth Source Serializer"""
input PatchedUserOAuthSourceConnectionRequestInput @source(name: "PatchedUserOAuthSourceConnectionRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  identifier: MutationInputSourcesUserConnectionsOauthPartialUpdateInputIdentifier @source(name: "identifier", type: "mutationInput_sources_user_connections_oauth_partial_update_input_identifier", subgraph: "Authentik")
  accessToken: String @source(name: "access_token", type: "String", subgraph: "Authentik")
}

"""Plex Source connection Serializer"""
input UserPlexSourceConnectionRequestInput @source(name: "UserPlexSourceConnectionRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  identifier: NonEmptyString!
  plexToken: NonEmptyString! @source(name: "plex_token", type: "NonEmptyString!", subgraph: "Authentik")
}

"""Plex Source connection Serializer"""
input PatchedUserPlexSourceConnectionRequestInput @source(name: "PatchedUserPlexSourceConnectionRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  identifier: NonEmptyString
  plexToken: NonEmptyString @source(name: "plex_token", type: "NonEmptyString", subgraph: "Authentik")
}

"""SAML Source Serializer"""
input UserSamlSourceConnectionRequestInput @source(name: "UserSAMLSourceConnectionRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  identifier: NonEmptyString!
}

"""SAML Source Serializer"""
input PatchedUserSamlSourceConnectionRequestInput @source(name: "PatchedUserSAMLSourceConnectionRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  identifier: NonEmptyString
}

"""AuthenticatorDuoStage Serializer"""
input AuthenticatorDuoStageRequestInput @source(name: "AuthenticatorDuoStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  """
  Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
  """
  configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
  friendlyName: NonEmptyString @source(name: "friendly_name", type: "NonEmptyString", subgraph: "Authentik")
  clientId: NonEmptyString! @source(name: "client_id", type: "NonEmptyString!", subgraph: "Authentik")
  clientSecret: NonEmptyString! @source(name: "client_secret", type: "NonEmptyString!", subgraph: "Authentik")
  apiHostname: NonEmptyString! @source(name: "api_hostname", type: "NonEmptyString!", subgraph: "Authentik")
  adminIntegrationKey: String @source(name: "admin_integration_key", type: "String", subgraph: "Authentik")
  adminSecretKey: String @source(name: "admin_secret_key", type: "String", subgraph: "Authentik")
}

"""Stripped down flow serializer"""
input FlowSetRequestInput @source(name: "FlowSetRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  slug: MutationInputStagesAuthenticatorDuoCreateInputFlowSetItemsSlug! @source(name: "slug", type: "mutationInput_stages_authenticator_duo_create_input_flow_set_items_slug!", subgraph: "Authentik")
  """Shown as the Title in Flow pages."""
  title: NonEmptyString!
  designation: FlowDesignationEnum!
  policyEngineMode: PolicyEngineMode @source(name: "policy_engine_mode", type: "PolicyEngineMode", subgraph: "Authentik")
  """
  Enable compatibility mode, increases compatibility with password managers on mobile devices.
  """
  compatibilityMode: Boolean @source(name: "compatibility_mode", type: "Boolean", subgraph: "Authentik")
  layout: FlowLayoutEnum
  deniedAction: DeniedActionEnum @source(name: "denied_action", type: "DeniedActionEnum", subgraph: "Authentik")
}

"""AuthenticatorDuoStage Serializer"""
input PatchedAuthenticatorDuoStageRequestInput @source(name: "PatchedAuthenticatorDuoStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  """
  Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
  """
  configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
  friendlyName: NonEmptyString @source(name: "friendly_name", type: "NonEmptyString", subgraph: "Authentik")
  clientId: NonEmptyString @source(name: "client_id", type: "NonEmptyString", subgraph: "Authentik")
  clientSecret: NonEmptyString @source(name: "client_secret", type: "NonEmptyString", subgraph: "Authentik")
  apiHostname: NonEmptyString @source(name: "api_hostname", type: "NonEmptyString", subgraph: "Authentik")
  adminIntegrationKey: String @source(name: "admin_integration_key", type: "String", subgraph: "Authentik")
  adminSecretKey: String @source(name: "admin_secret_key", type: "String", subgraph: "Authentik")
}

input AuthenticatorDuoStageManualDeviceImportRequestInput @source(name: "AuthenticatorDuoStageManualDeviceImportRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  duoUserId: NonEmptyString! @source(name: "duo_user_id", type: "NonEmptyString!", subgraph: "Authentik")
  username: NonEmptyString!
}

"""AuthenticatorEndpointGDTCStage Serializer"""
input AuthenticatorEndpointGdtcStageRequestInput @source(name: "AuthenticatorEndpointGDTCStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  """
  Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
  """
  configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
  friendlyName: NonEmptyString @source(name: "friendly_name", type: "NonEmptyString", subgraph: "Authentik")
  credentials: JSON!
}

"""AuthenticatorEndpointGDTCStage Serializer"""
input PatchedAuthenticatorEndpointGdtcStageRequestInput @source(name: "PatchedAuthenticatorEndpointGDTCStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  """
  Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
  """
  configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
  friendlyName: NonEmptyString @source(name: "friendly_name", type: "NonEmptyString", subgraph: "Authentik")
  credentials: JSON
}

"""AuthenticatorSMSStage Serializer"""
input AuthenticatorSmsStageRequestInput @source(name: "AuthenticatorSMSStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  """
  Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
  """
  configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
  friendlyName: NonEmptyString @source(name: "friendly_name", type: "NonEmptyString", subgraph: "Authentik")
  provider: ProviderEnum!
  fromNumber: NonEmptyString! @source(name: "from_number", type: "NonEmptyString!", subgraph: "Authentik")
  accountSid: NonEmptyString! @source(name: "account_sid", type: "NonEmptyString!", subgraph: "Authentik")
  auth: NonEmptyString!
  authPassword: String @source(name: "auth_password", type: "String", subgraph: "Authentik")
  authType: AuthTypeEnum @source(name: "auth_type", type: "AuthTypeEnum", subgraph: "Authentik")
  """
  When enabled, the Phone number is only used during enrollment to verify the users authenticity. Only a hash of the phone number is saved to ensure it is not reused in the future.
  """
  verifyOnly: Boolean @source(name: "verify_only", type: "Boolean", subgraph: "Authentik")
  """Optionally modify the payload being sent to custom providers."""
  mapping: UUID
}

"""AuthenticatorSMSStage Serializer"""
input PatchedAuthenticatorSmsStageRequestInput @source(name: "PatchedAuthenticatorSMSStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  """
  Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
  """
  configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
  friendlyName: NonEmptyString @source(name: "friendly_name", type: "NonEmptyString", subgraph: "Authentik")
  provider: ProviderEnum
  fromNumber: NonEmptyString @source(name: "from_number", type: "NonEmptyString", subgraph: "Authentik")
  accountSid: NonEmptyString @source(name: "account_sid", type: "NonEmptyString", subgraph: "Authentik")
  auth: NonEmptyString
  authPassword: String @source(name: "auth_password", type: "String", subgraph: "Authentik")
  authType: AuthTypeEnum @source(name: "auth_type", type: "AuthTypeEnum", subgraph: "Authentik")
  """
  When enabled, the Phone number is only used during enrollment to verify the users authenticity. Only a hash of the phone number is saved to ensure it is not reused in the future.
  """
  verifyOnly: Boolean @source(name: "verify_only", type: "Boolean", subgraph: "Authentik")
  """Optionally modify the payload being sent to custom providers."""
  mapping: UUID
}

"""AuthenticatorStaticStage Serializer"""
input AuthenticatorStaticStageRequestInput @source(name: "AuthenticatorStaticStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  """
  Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
  """
  configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
  friendlyName: NonEmptyString @source(name: "friendly_name", type: "NonEmptyString", subgraph: "Authentik")
  tokenCount: NonNegativeInt @source(name: "token_count", type: "NonNegativeInt", subgraph: "Authentik")
  tokenLength: NonNegativeInt @source(name: "token_length", type: "NonNegativeInt", subgraph: "Authentik")
}

"""AuthenticatorStaticStage Serializer"""
input PatchedAuthenticatorStaticStageRequestInput @source(name: "PatchedAuthenticatorStaticStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  """
  Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
  """
  configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
  friendlyName: NonEmptyString @source(name: "friendly_name", type: "NonEmptyString", subgraph: "Authentik")
  tokenCount: NonNegativeInt @source(name: "token_count", type: "NonNegativeInt", subgraph: "Authentik")
  tokenLength: NonNegativeInt @source(name: "token_length", type: "NonNegativeInt", subgraph: "Authentik")
}

"""AuthenticatorTOTPStage Serializer"""
input AuthenticatorTotpStageRequestInput @source(name: "AuthenticatorTOTPStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  """
  Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
  """
  configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
  friendlyName: NonEmptyString @source(name: "friendly_name", type: "NonEmptyString", subgraph: "Authentik")
  digits: DigitsEnum!
}

"""AuthenticatorTOTPStage Serializer"""
input PatchedAuthenticatorTotpStageRequestInput @source(name: "PatchedAuthenticatorTOTPStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  """
  Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
  """
  configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
  friendlyName: NonEmptyString @source(name: "friendly_name", type: "NonEmptyString", subgraph: "Authentik")
  digits: DigitsEnum
}

"""AuthenticatorValidateStage Serializer"""
input AuthenticatorValidateStageRequestInput @source(name: "AuthenticatorValidateStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  notConfiguredAction: NotConfiguredActionEnum @source(name: "not_configured_action", type: "NotConfiguredActionEnum", subgraph: "Authentik")
  """Device classes which can be used to authenticate"""
  deviceClasses: [DeviceClassesEnum] @source(name: "device_classes", type: "[DeviceClassesEnum]", subgraph: "Authentik")
  """
  Stages used to configure Authenticator when user doesn't have any compatible devices. After this configuration Stage passes, the user is not prompted again.
  """
  configurationStages: [UUID] @source(name: "configuration_stages", type: "[UUID]", subgraph: "Authentik")
  """
  If any of the user's device has been used within this threshold, this stage will be skipped
  """
  lastAuthThreshold: NonEmptyString @source(name: "last_auth_threshold", type: "NonEmptyString", subgraph: "Authentik")
  webauthnUserVerification: UserVerificationEnum @source(name: "webauthn_user_verification", type: "UserVerificationEnum", subgraph: "Authentik")
  webauthnAllowedDeviceTypes: [UUID] @source(name: "webauthn_allowed_device_types", type: "[UUID]", subgraph: "Authentik")
}

"""AuthenticatorValidateStage Serializer"""
input PatchedAuthenticatorValidateStageRequestInput @source(name: "PatchedAuthenticatorValidateStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  notConfiguredAction: NotConfiguredActionEnum @source(name: "not_configured_action", type: "NotConfiguredActionEnum", subgraph: "Authentik")
  """Device classes which can be used to authenticate"""
  deviceClasses: [DeviceClassesEnum] @source(name: "device_classes", type: "[DeviceClassesEnum]", subgraph: "Authentik")
  """
  Stages used to configure Authenticator when user doesn't have any compatible devices. After this configuration Stage passes, the user is not prompted again.
  """
  configurationStages: [UUID] @source(name: "configuration_stages", type: "[UUID]", subgraph: "Authentik")
  """
  If any of the user's device has been used within this threshold, this stage will be skipped
  """
  lastAuthThreshold: NonEmptyString @source(name: "last_auth_threshold", type: "NonEmptyString", subgraph: "Authentik")
  webauthnUserVerification: UserVerificationEnum @source(name: "webauthn_user_verification", type: "UserVerificationEnum", subgraph: "Authentik")
  webauthnAllowedDeviceTypes: [UUID] @source(name: "webauthn_allowed_device_types", type: "[UUID]", subgraph: "Authentik")
}

"""AuthenticatorWebAuthnStage Serializer"""
input AuthenticatorWebAuthnStageRequestInput @source(name: "AuthenticatorWebAuthnStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  """
  Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
  """
  configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
  friendlyName: NonEmptyString @source(name: "friendly_name", type: "NonEmptyString", subgraph: "Authentik")
  userVerification: UserVerificationEnum @source(name: "user_verification", type: "UserVerificationEnum", subgraph: "Authentik")
  authenticatorAttachment: AuthenticatorAttachmentEnum @source(name: "authenticator_attachment", type: "AuthenticatorAttachmentEnum", subgraph: "Authentik")
  residentKeyRequirement: ResidentKeyRequirementEnum @source(name: "resident_key_requirement", type: "ResidentKeyRequirementEnum", subgraph: "Authentik")
  deviceTypeRestrictions: [UUID] @source(name: "device_type_restrictions", type: "[UUID]", subgraph: "Authentik")
}

"""AuthenticatorWebAuthnStage Serializer"""
input PatchedAuthenticatorWebAuthnStageRequestInput @source(name: "PatchedAuthenticatorWebAuthnStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  """
  Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
  """
  configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
  friendlyName: NonEmptyString @source(name: "friendly_name", type: "NonEmptyString", subgraph: "Authentik")
  userVerification: UserVerificationEnum @source(name: "user_verification", type: "UserVerificationEnum", subgraph: "Authentik")
  authenticatorAttachment: AuthenticatorAttachmentEnum @source(name: "authenticator_attachment", type: "AuthenticatorAttachmentEnum", subgraph: "Authentik")
  residentKeyRequirement: ResidentKeyRequirementEnum @source(name: "resident_key_requirement", type: "ResidentKeyRequirementEnum", subgraph: "Authentik")
  deviceTypeRestrictions: [UUID] @source(name: "device_type_restrictions", type: "[UUID]", subgraph: "Authentik")
}

"""CaptchaStage Serializer"""
input CaptchaStageRequestInput @source(name: "CaptchaStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  """Public key, acquired your captcha Provider."""
  publicKey: NonEmptyString! @source(name: "public_key", type: "NonEmptyString!", subgraph: "Authentik")
  """Private key, acquired your captcha Provider."""
  privateKey: NonEmptyString! @source(name: "private_key", type: "NonEmptyString!", subgraph: "Authentik")
  jsUrl: NonEmptyString @source(name: "js_url", type: "NonEmptyString", subgraph: "Authentik")
  apiUrl: NonEmptyString @source(name: "api_url", type: "NonEmptyString", subgraph: "Authentik")
  interactive: Boolean
  scoreMinThreshold: Float @source(name: "score_min_threshold", type: "Float", subgraph: "Authentik")
  scoreMaxThreshold: Float @source(name: "score_max_threshold", type: "Float", subgraph: "Authentik")
  """
  When enabled and the received captcha score is outside of the given threshold, the stage will show an error message. When not enabled, the flow will continue, but the data from the captcha will be available in the context for policy decisions
  """
  errorOnInvalidScore: Boolean @source(name: "error_on_invalid_score", type: "Boolean", subgraph: "Authentik")
}

"""CaptchaStage Serializer"""
input PatchedCaptchaStageRequestInput @source(name: "PatchedCaptchaStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  """Public key, acquired your captcha Provider."""
  publicKey: NonEmptyString @source(name: "public_key", type: "NonEmptyString", subgraph: "Authentik")
  """Private key, acquired your captcha Provider."""
  privateKey: NonEmptyString @source(name: "private_key", type: "NonEmptyString", subgraph: "Authentik")
  jsUrl: NonEmptyString @source(name: "js_url", type: "NonEmptyString", subgraph: "Authentik")
  apiUrl: NonEmptyString @source(name: "api_url", type: "NonEmptyString", subgraph: "Authentik")
  interactive: Boolean
  scoreMinThreshold: Float @source(name: "score_min_threshold", type: "Float", subgraph: "Authentik")
  scoreMaxThreshold: Float @source(name: "score_max_threshold", type: "Float", subgraph: "Authentik")
  """
  When enabled and the received captcha score is outside of the given threshold, the stage will show an error message. When not enabled, the flow will continue, but the data from the captcha will be available in the context for policy decisions
  """
  errorOnInvalidScore: Boolean @source(name: "error_on_invalid_score", type: "Boolean", subgraph: "Authentik")
}

"""ConsentStage Serializer"""
input ConsentStageRequestInput @source(name: "ConsentStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  mode: ConsentStageModeEnum
  """
  Offset after which consent expires. (Format: hours=1;minutes=2;seconds=3).
  """
  consentExpireIn: NonEmptyString @source(name: "consent_expire_in", type: "NonEmptyString", subgraph: "Authentik")
}

"""ConsentStage Serializer"""
input PatchedConsentStageRequestInput @source(name: "PatchedConsentStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  mode: ConsentStageModeEnum
  """
  Offset after which consent expires. (Format: hours=1;minutes=2;seconds=3).
  """
  consentExpireIn: NonEmptyString @source(name: "consent_expire_in", type: "NonEmptyString", subgraph: "Authentik")
}

"""DenyStage Serializer"""
input DenyStageRequestInput @source(name: "DenyStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  denyMessage: String @source(name: "deny_message", type: "String", subgraph: "Authentik")
}

"""DenyStage Serializer"""
input PatchedDenyStageRequestInput @source(name: "PatchedDenyStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  denyMessage: String @source(name: "deny_message", type: "String", subgraph: "Authentik")
}

"""DummyStage Serializer"""
input DummyStageRequestInput @source(name: "DummyStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  throwError: Boolean @source(name: "throw_error", type: "Boolean", subgraph: "Authentik")
}

"""DummyStage Serializer"""
input PatchedDummyStageRequestInput @source(name: "PatchedDummyStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  throwError: Boolean @source(name: "throw_error", type: "Boolean", subgraph: "Authentik")
}

"""EmailStage Serializer"""
input EmailStageRequestInput @source(name: "EmailStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  """
  When enabled, global Email connection settings will be used and connection settings below will be ignored.
  """
  useGlobalSettings: Boolean @source(name: "use_global_settings", type: "Boolean", subgraph: "Authentik")
  host: NonEmptyString
  port: Int
  username: String
  password: String
  useTls: Boolean @source(name: "use_tls", type: "Boolean", subgraph: "Authentik")
  useSsl: Boolean @source(name: "use_ssl", type: "Boolean", subgraph: "Authentik")
  timeout: Int
  fromAddress: EmailAddress @source(name: "from_address", type: "EmailAddress", subgraph: "Authentik")
  """Time in minutes the token sent is valid."""
  tokenExpiry: Int @source(name: "token_expiry", type: "Int", subgraph: "Authentik")
  subject: NonEmptyString
  template: NonEmptyString
  """Activate users upon completion of stage."""
  activateUserOnSuccess: Boolean @source(name: "activate_user_on_success", type: "Boolean", subgraph: "Authentik")
}

"""EmailStage Serializer"""
input PatchedEmailStageRequestInput @source(name: "PatchedEmailStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  """
  When enabled, global Email connection settings will be used and connection settings below will be ignored.
  """
  useGlobalSettings: Boolean @source(name: "use_global_settings", type: "Boolean", subgraph: "Authentik")
  host: NonEmptyString
  port: Int
  username: String
  password: String
  useTls: Boolean @source(name: "use_tls", type: "Boolean", subgraph: "Authentik")
  useSsl: Boolean @source(name: "use_ssl", type: "Boolean", subgraph: "Authentik")
  timeout: Int
  fromAddress: EmailAddress @source(name: "from_address", type: "EmailAddress", subgraph: "Authentik")
  """Time in minutes the token sent is valid."""
  tokenExpiry: Int @source(name: "token_expiry", type: "Int", subgraph: "Authentik")
  subject: NonEmptyString
  template: NonEmptyString
  """Activate users upon completion of stage."""
  activateUserOnSuccess: Boolean @source(name: "activate_user_on_success", type: "Boolean", subgraph: "Authentik")
}

"""IdentificationStage Serializer"""
input IdentificationStageRequestInput @source(name: "IdentificationStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  """
  Fields of the user object to match against. (Hold shift to select multiple options)
  """
  userFields: [UserFieldsEnum] @source(name: "user_fields", type: "[UserFieldsEnum]", subgraph: "Authentik")
  """
  When set, shows a password field, instead of showing the password field as separate step.
  """
  passwordStage: UUID @source(name: "password_stage", type: "UUID", subgraph: "Authentik")
  """
  When set, adds functionality exactly like a Captcha stage, but baked into the Identification stage.
  """
  captchaStage: UUID @source(name: "captcha_stage", type: "UUID", subgraph: "Authentik")
  """When enabled, user fields are matched regardless of their casing."""
  caseInsensitiveMatching: Boolean @source(name: "case_insensitive_matching", type: "Boolean", subgraph: "Authentik")
  """
  When a valid username/email has been entered, and this option is enabled, the user's username and avatar will be shown. Otherwise, the text that the user entered will be shown
  """
  showMatchedUser: Boolean @source(name: "show_matched_user", type: "Boolean", subgraph: "Authentik")
  """Optional enrollment flow, which is linked at the bottom of the page."""
  enrollmentFlow: UUID @source(name: "enrollment_flow", type: "UUID", subgraph: "Authentik")
  """Optional recovery flow, which is linked at the bottom of the page."""
  recoveryFlow: UUID @source(name: "recovery_flow", type: "UUID", subgraph: "Authentik")
  """Optional passwordless flow, which is linked at the bottom of the page."""
  passwordlessFlow: UUID @source(name: "passwordless_flow", type: "UUID", subgraph: "Authentik")
  """Specify which sources should be shown."""
  sources: [UUID]
  showSourceLabels: Boolean @source(name: "show_source_labels", type: "Boolean", subgraph: "Authentik")
  """
  When enabled, the stage will succeed and continue even when incorrect user info is entered.
  """
  pretendUserExists: Boolean @source(name: "pretend_user_exists", type: "Boolean", subgraph: "Authentik")
}

"""IdentificationStage Serializer"""
input PatchedIdentificationStageRequestInput @source(name: "PatchedIdentificationStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  """
  Fields of the user object to match against. (Hold shift to select multiple options)
  """
  userFields: [UserFieldsEnum] @source(name: "user_fields", type: "[UserFieldsEnum]", subgraph: "Authentik")
  """
  When set, shows a password field, instead of showing the password field as separate step.
  """
  passwordStage: UUID @source(name: "password_stage", type: "UUID", subgraph: "Authentik")
  """
  When set, adds functionality exactly like a Captcha stage, but baked into the Identification stage.
  """
  captchaStage: UUID @source(name: "captcha_stage", type: "UUID", subgraph: "Authentik")
  """When enabled, user fields are matched regardless of their casing."""
  caseInsensitiveMatching: Boolean @source(name: "case_insensitive_matching", type: "Boolean", subgraph: "Authentik")
  """
  When a valid username/email has been entered, and this option is enabled, the user's username and avatar will be shown. Otherwise, the text that the user entered will be shown
  """
  showMatchedUser: Boolean @source(name: "show_matched_user", type: "Boolean", subgraph: "Authentik")
  """Optional enrollment flow, which is linked at the bottom of the page."""
  enrollmentFlow: UUID @source(name: "enrollment_flow", type: "UUID", subgraph: "Authentik")
  """Optional recovery flow, which is linked at the bottom of the page."""
  recoveryFlow: UUID @source(name: "recovery_flow", type: "UUID", subgraph: "Authentik")
  """Optional passwordless flow, which is linked at the bottom of the page."""
  passwordlessFlow: UUID @source(name: "passwordless_flow", type: "UUID", subgraph: "Authentik")
  """Specify which sources should be shown."""
  sources: [UUID]
  showSourceLabels: Boolean @source(name: "show_source_labels", type: "Boolean", subgraph: "Authentik")
  """
  When enabled, the stage will succeed and continue even when incorrect user info is entered.
  """
  pretendUserExists: Boolean @source(name: "pretend_user_exists", type: "Boolean", subgraph: "Authentik")
}

"""Invitation Serializer"""
input InvitationRequestInput @source(name: "InvitationRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: MutationInputStagesInvitationInvitationsCreateInputName! @source(name: "name", type: "mutationInput_stages_invitation_invitations_create_input_name!", subgraph: "Authentik")
  expires: DateTime
  fixedData: JSON @source(name: "fixed_data", type: "JSON", subgraph: "Authentik")
  """When enabled, the invitation will be deleted after usage."""
  singleUse: Boolean @source(name: "single_use", type: "Boolean", subgraph: "Authentik")
  """When set, only the configured flow can use this invitation."""
  flow: UUID
}

"""Invitation Serializer"""
input PatchedInvitationRequestInput @source(name: "PatchedInvitationRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: MutationInputStagesInvitationInvitationsPartialUpdateInputName @source(name: "name", type: "mutationInput_stages_invitation_invitations_partial_update_input_name", subgraph: "Authentik")
  expires: DateTime
  fixedData: JSON @source(name: "fixed_data", type: "JSON", subgraph: "Authentik")
  """When enabled, the invitation will be deleted after usage."""
  singleUse: Boolean @source(name: "single_use", type: "Boolean", subgraph: "Authentik")
  """When set, only the configured flow can use this invitation."""
  flow: UUID
}

"""InvitationStage Serializer"""
input InvitationStageRequestInput @source(name: "InvitationStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  """
  If this flag is set, this Stage will jump to the next Stage when no Invitation is given. By default this Stage will cancel the Flow when no invitation is given.
  """
  continueFlowWithoutInvitation: Boolean @source(name: "continue_flow_without_invitation", type: "Boolean", subgraph: "Authentik")
}

"""InvitationStage Serializer"""
input PatchedInvitationStageRequestInput @source(name: "PatchedInvitationStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  """
  If this flag is set, this Stage will jump to the next Stage when no Invitation is given. By default this Stage will cancel the Flow when no invitation is given.
  """
  continueFlowWithoutInvitation: Boolean @source(name: "continue_flow_without_invitation", type: "Boolean", subgraph: "Authentik")
}

"""PasswordStage Serializer"""
input PasswordStageRequestInput @source(name: "PasswordStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  """Selection of backends to test the password against."""
  backends: [BackendsEnum]!
  """
  Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
  """
  configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
  """
  How many attempts a user has before the flow is canceled. To lock the user out, use a reputation policy and a user_write stage.
  """
  failedAttemptsBeforeCancel: Int @source(name: "failed_attempts_before_cancel", type: "Int", subgraph: "Authentik")
  """
  When enabled, provides a 'show password' button with the password input field.
  """
  allowShowPassword: Boolean @source(name: "allow_show_password", type: "Boolean", subgraph: "Authentik")
}

"""PasswordStage Serializer"""
input PatchedPasswordStageRequestInput @source(name: "PatchedPasswordStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  """Selection of backends to test the password against."""
  backends: [BackendsEnum]
  """
  Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
  """
  configureFlow: UUID @source(name: "configure_flow", type: "UUID", subgraph: "Authentik")
  """
  How many attempts a user has before the flow is canceled. To lock the user out, use a reputation policy and a user_write stage.
  """
  failedAttemptsBeforeCancel: Int @source(name: "failed_attempts_before_cancel", type: "Int", subgraph: "Authentik")
  """
  When enabled, provides a 'show password' button with the password input field.
  """
  allowShowPassword: Boolean @source(name: "allow_show_password", type: "Boolean", subgraph: "Authentik")
}

"""Prompt Serializer"""
input PromptRequestInput @source(name: "PromptRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  """Name of the form field, also used to store the value"""
  fieldKey: NonEmptyString! @source(name: "field_key", type: "NonEmptyString!", subgraph: "Authentik")
  label: NonEmptyString!
  type: PromptTypeEnum!
  required: Boolean
  """
  Optionally provide a short hint that describes the expected input value. When creating a fixed choice field, enable interpreting as expression and return a list to return multiple choices.
  """
  placeholder: String
  """
  Optionally pre-fill the input with an initial value. When creating a fixed choice field, enable interpreting as expression and return a list to return multiple default choices.
  """
  initialValue: String @source(name: "initial_value", type: "String", subgraph: "Authentik")
  order: Int
  promptstageSet: [StageRequestInput] @source(name: "promptstage_set", type: "[StageRequest_Input]", subgraph: "Authentik")
  subText: String @source(name: "sub_text", type: "String", subgraph: "Authentik")
  placeholderExpression: Boolean @source(name: "placeholder_expression", type: "Boolean", subgraph: "Authentik")
  initialValueExpression: Boolean @source(name: "initial_value_expression", type: "Boolean", subgraph: "Authentik")
}

"""Stage Serializer"""
input StageRequestInput @source(name: "StageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
}

"""Prompt Serializer"""
input PatchedPromptRequestInput @source(name: "PatchedPromptRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  """Name of the form field, also used to store the value"""
  fieldKey: NonEmptyString @source(name: "field_key", type: "NonEmptyString", subgraph: "Authentik")
  label: NonEmptyString
  type: PromptTypeEnum
  required: Boolean
  """
  Optionally provide a short hint that describes the expected input value. When creating a fixed choice field, enable interpreting as expression and return a list to return multiple choices.
  """
  placeholder: String
  """
  Optionally pre-fill the input with an initial value. When creating a fixed choice field, enable interpreting as expression and return a list to return multiple default choices.
  """
  initialValue: String @source(name: "initial_value", type: "String", subgraph: "Authentik")
  order: Int
  promptstageSet: [StageRequestInput] @source(name: "promptstage_set", type: "[StageRequest_Input]", subgraph: "Authentik")
  subText: String @source(name: "sub_text", type: "String", subgraph: "Authentik")
  placeholderExpression: Boolean @source(name: "placeholder_expression", type: "Boolean", subgraph: "Authentik")
  initialValueExpression: Boolean @source(name: "initial_value_expression", type: "Boolean", subgraph: "Authentik")
}

"""PromptStage Serializer"""
input PromptStageRequestInput @source(name: "PromptStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  fields: [UUID]!
  validationPolicies: [UUID] @source(name: "validation_policies", type: "[UUID]", subgraph: "Authentik")
}

"""PromptStage Serializer"""
input PatchedPromptStageRequestInput @source(name: "PatchedPromptStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  fields: [UUID]
  validationPolicies: [UUID] @source(name: "validation_policies", type: "[UUID]", subgraph: "Authentik")
}

"""SourceStage Serializer"""
input SourceStageRequestInput @source(name: "SourceStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  source: UUID!
  """
  Amount of time a user can take to return from the source to continue the flow (Format: hours=-1;minutes=-2;seconds=-3)
  """
  resumeTimeout: NonEmptyString @source(name: "resume_timeout", type: "NonEmptyString", subgraph: "Authentik")
}

"""SourceStage Serializer"""
input PatchedSourceStageRequestInput @source(name: "PatchedSourceStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  source: UUID
  """
  Amount of time a user can take to return from the source to continue the flow (Format: hours=-1;minutes=-2;seconds=-3)
  """
  resumeTimeout: NonEmptyString @source(name: "resume_timeout", type: "NonEmptyString", subgraph: "Authentik")
}

"""UserDeleteStage Serializer"""
input UserDeleteStageRequestInput @source(name: "UserDeleteStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
}

"""UserDeleteStage Serializer"""
input PatchedUserDeleteStageRequestInput @source(name: "PatchedUserDeleteStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
}

"""UserLoginStage Serializer"""
input UserLoginStageRequestInput @source(name: "UserLoginStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  """
  Determines how long a session lasts. Default of 0 means that the sessions lasts until the browser is closed. (Format: hours=-1;minutes=-2;seconds=-3)
  """
  sessionDuration: NonEmptyString @source(name: "session_duration", type: "NonEmptyString", subgraph: "Authentik")
  """Terminate all other sessions of the user logging in."""
  terminateOtherSessions: Boolean @source(name: "terminate_other_sessions", type: "Boolean", subgraph: "Authentik")
  """
  Offset the session will be extended by when the user picks the remember me option. Default of 0 means that the remember me option will not be shown. (Format: hours=-1;minutes=-2;seconds=-3)
  """
  rememberMeOffset: NonEmptyString @source(name: "remember_me_offset", type: "NonEmptyString", subgraph: "Authentik")
  networkBinding: NetworkBindingEnum @source(name: "network_binding", type: "NetworkBindingEnum", subgraph: "Authentik")
  geoipBinding: GeoipBindingEnum @source(name: "geoip_binding", type: "GeoipBindingEnum", subgraph: "Authentik")
}

"""UserLoginStage Serializer"""
input PatchedUserLoginStageRequestInput @source(name: "PatchedUserLoginStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  """
  Determines how long a session lasts. Default of 0 means that the sessions lasts until the browser is closed. (Format: hours=-1;minutes=-2;seconds=-3)
  """
  sessionDuration: NonEmptyString @source(name: "session_duration", type: "NonEmptyString", subgraph: "Authentik")
  """Terminate all other sessions of the user logging in."""
  terminateOtherSessions: Boolean @source(name: "terminate_other_sessions", type: "Boolean", subgraph: "Authentik")
  """
  Offset the session will be extended by when the user picks the remember me option. Default of 0 means that the remember me option will not be shown. (Format: hours=-1;minutes=-2;seconds=-3)
  """
  rememberMeOffset: NonEmptyString @source(name: "remember_me_offset", type: "NonEmptyString", subgraph: "Authentik")
  networkBinding: NetworkBindingEnum @source(name: "network_binding", type: "NetworkBindingEnum", subgraph: "Authentik")
  geoipBinding: GeoipBindingEnum @source(name: "geoip_binding", type: "GeoipBindingEnum", subgraph: "Authentik")
}

"""UserLogoutStage Serializer"""
input UserLogoutStageRequestInput @source(name: "UserLogoutStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
}

"""UserLogoutStage Serializer"""
input PatchedUserLogoutStageRequestInput @source(name: "PatchedUserLogoutStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
}

"""UserWriteStage Serializer"""
input UserWriteStageRequestInput @source(name: "UserWriteStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString!
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  userCreationMode: UserCreationModeEnum @source(name: "user_creation_mode", type: "UserCreationModeEnum", subgraph: "Authentik")
  """When set, newly created users are inactive and cannot login."""
  createUsersAsInactive: Boolean @source(name: "create_users_as_inactive", type: "Boolean", subgraph: "Authentik")
  """Optionally add newly created users to this group."""
  createUsersGroup: UUID @source(name: "create_users_group", type: "UUID", subgraph: "Authentik")
  userType: UserTypeEnum @source(name: "user_type", type: "UserTypeEnum", subgraph: "Authentik")
  userPathTemplate: String @source(name: "user_path_template", type: "String", subgraph: "Authentik")
}

"""UserWriteStage Serializer"""
input PatchedUserWriteStageRequestInput @source(name: "PatchedUserWriteStageRequest_Input", subgraph: "Authentik") @join__type(graph: AUTHENTIK) {
  name: NonEmptyString
  flowSet: [FlowSetRequestInput] @source(name: "flow_set", type: "[FlowSetRequest_Input]", subgraph: "Authentik")
  userCreationMode: UserCreationModeEnum @source(name: "user_creation_mode", type: "UserCreationModeEnum", subgraph: "Authentik")
  """When set, newly created users are inactive and cannot login."""
  createUsersAsInactive: Boolean @source(name: "create_users_as_inactive", type: "Boolean", subgraph: "Authentik")
  """Optionally add newly created users to this group."""
  createUsersGroup: UUID @source(name: "create_users_group", type: "UUID", subgraph: "Authentik")
  userType: UserTypeEnum @source(name: "user_type", type: "UserTypeEnum", subgraph: "Authentik")
  userPathTemplate: String @source(name: "user_path_template", type: "String", subgraph: "Authentik")
}

input ChurrosAnswerInput @source(name: "AnswerInput", subgraph: "Churros") @join__type(graph: CHURROS) {
  """
  Réponse à la question. Pour les questions à une seule réponse, ne mettre qu'un seul élément.
      
  - Pour les questions de type `Date`, utiliser le format `YYYY-mm-dd`
  - Pour les questions de type `Time`, utiliser le format `HH:MM:ss`
  - Pour les questions de type `Scale`, utiliser simplement le nombre répondu par l'utilisateur·ice
  - Pour les questions de type `FileUpload`, utiliser la mutation [`answerFileQuestion`](#mutation/answerFileQuestion)
  """
  answer: [String!]!
  """ID de la question à laquelle répondre"""
  question: ID!
}

"""Un intervalle valide de dates"""
input ChurrosDateRangeInput @source(name: "DateRangeInput", subgraph: "Churros") @join__type(graph: CHURROS) {
  """Date de fin de l'intervalle"""
  end: ChurrosDateTime! @source(name: "end", type: "DateTime!", subgraph: "Churros")
  """Date de début de l'intervalle"""
  start: ChurrosDateTime! @source(name: "start", type: "DateTime!", subgraph: "Churros")
}

input ChurrosGroupMemberInput @source(name: "GroupMemberInput", subgraph: "Churros") @join__type(graph: CHURROS) {
  canEditArticles: Boolean
  canEditMembers: Boolean
  canScanEvents: Boolean
  createdAt: ChurrosDateTime @source(name: "createdAt", type: "DateTime", subgraph: "Churros")
  president: Boolean
  secretary: Boolean
  title: String
  treasurer: Boolean
  vicePresident: Boolean
}

"""Les champs du profil d'un groupe"""
input ChurrosGroupProfileInput @source(name: "GroupProfileInput", subgraph: "Churros") @join__type(graph: CHURROS) {
  color: ChurrosColor @source(name: "color", type: "Color", subgraph: "Churros")
  email: ChurrosEmail @source(name: "email", type: "Email", subgraph: "Churros")
  longDescription: ChurrosMarkdown @source(name: "longDescription", type: "Markdown", subgraph: "Churros")
  name: String
  relatedGroups: [ChurrosUID!] @source(name: "relatedGroups", type: "[UID!]", subgraph: "Churros")
  room: String
  shortDescription: String
  """Supprimer la couleur du groupe"""
  unsetColor: Boolean
  """Supprimer l’adresse email du groupe"""
  unsetEmail: Boolean
}

input ChurrosLinkInput @source(name: "LinkInput", subgraph: "Churros") @join__type(graph: CHURROS) {
  """Texte à afficher pour le lien"""
  text: String!
  url: ChurrosLooseURL! @source(name: "url", type: "LooseURL!", subgraph: "Churros")
}

input ChurrosManagerOfEventInput @source(name: "ManagerOfEventInput", subgraph: "Churros") @join__type(graph: CHURROS) {
  canEdit: Boolean!
  canEditPermissions: Boolean!
  canVerifyRegistrations: Boolean!
  userUid: String!
}

input ChurrosMutationUpsertFormInput @source(name: "MutationUpsertFormInput", subgraph: "Churros") @join__type(graph: CHURROS) {
  closesAt: ChurrosDateTime @source(name: "closesAt", type: "DateTime", subgraph: "Churros")
  description: String! = ""
  """Identifiant de l'événement à associer au formulaire"""
  eventId: ID
  """UID du groupe auquel le formulaire est associé."""
  group: String
  """
  Identifiant du formulaire à mettre à jour. Si non fourni, un nouveau formulaire sera créé.
  """
  id: ID
  opensAt: ChurrosDateTime @source(name: "opensAt", type: "DateTime", subgraph: "Churros")
  title: String!
  visibility: ChurrosVisibility! = Unlisted @source(name: "visibility", type: "Visibility!", subgraph: "Churros")
}

input ChurrosMutationUpsertFormSectionInput @source(name: "MutationUpsertFormSectionInput", subgraph: "Churros") @join__type(graph: CHURROS) {
  description: String! = ""
  """
  Identifiant du formulaire auquel associer la section. Il n'es pas possible de changer le formulaire auquel une section est associée, si id est fourni, ce paramètre est ignoré. L'ID peut être local
  """
  formId: String!
  """
  Identifiant de la section à mettre à jour. Si non fourni, une nouvelle section sera créée.
  """
  id: ID
  """
  Position de la section dans le formulaire. Si non spécifié, la section est ajoutée à la fin du formulaire
  """
  order: Int
  title: String!
}

input ChurrosMutationUpsertQuestionInput @source(name: "MutationUpsertQuestionInput", subgraph: "Churros") @join__type(graph: CHURROS) {
  """
  Indique si la question doit avoir une option "Autre"
  """
  allowOptionOther: Boolean! = false
  """Types de fichiers autorisés pour les questions de type `FileUpload`"""
  allowedFiletypes: [String!]
  """Indique si les réponses à la question sont anonymes"""
  anonymous: Boolean!
  """
  Valeur par défaut de la question. Voir `AnswerInput.answer` pour le format.
  """
  default: [String!]! = []
  description: String! = ""
  """
  Identifiant du formulaire auquel associer la question. Il n'es pas possible de changer le formulaire auquel une question est associée, si id est fourni, ce paramètre est ignoré.
  """
  formId: ID
  """
  Identifiant de la question à mettre à jour. Si non fourni, une nouvelle question sera créée.
  """
  id: ID
  """Indique si la question est obligatoire"""
  mandatory: Boolean!
  options: [ChurrosQuestionOptionInput!] @source(name: "options", type: "[QuestionOptionInput!]", subgraph: "Churros")
  """
  Position de la question dans la section. Si non spécifié, rajoute la question à la fin de la section.
  """
  order: Int
  scale: ChurrosQuestionScaleInput @source(name: "scale", type: "QuestionScaleInput", subgraph: "Churros")
  """
  Identifiant de la section de formulaire à laquelle associer la question. Si non fourni, la question est rajoutée à une section à titre vide, qui est créée au besoin. Pratique pour les formulaires plus simples sans section.
  """
  sectionId: ID
  title: String!
  type: ChurrosQuestionKind! @source(name: "type", type: "QuestionKind!", subgraph: "Churros")
}

input ChurrosNotificationSubscriptionKeysInput @source(name: "NotificationSubscriptionKeysInput", subgraph: "Churros") @join__type(graph: CHURROS) {
  auth: String!
  p256dh: String!
}

input ChurrosPostInput @source(name: "PostInput", subgraph: "Churros") @join__type(graph: CHURROS) {
  body: String
  event: ChurrosLocalID @source(name: "event", type: "LocalID", subgraph: "Churros")
  publishedAt: ChurrosDateTime @source(name: "publishedAt", type: "DateTime", subgraph: "Churros")
  title: String
  visibility: ChurrosVisibility @source(name: "visibility", type: "Visibility", subgraph: "Churros")
}

"""Choix pour les questions de type `SelectOne` ou `SelectMultiple`"""
input ChurrosQuestionOptionInput @source(name: "QuestionOptionInput", subgraph: "Churros") @join__type(graph: CHURROS) {
  """ID de la question vers laquelle sauter si ce choix est sélectionné"""
  jump: ID
  """Choix"""
  value: String!
}

"""Options supplémentaires pour les questions de type `Scale`"""
input ChurrosQuestionScaleInput @source(name: "QuestionScaleInput", subgraph: "Churros") @join__type(graph: CHURROS) {
  """Valeur maximale"""
  maximum: Int!
  """Label de la valeur maximale"""
  maximumLabel: String
  """Valeur minimale"""
  minimum: Int!
  """Label de la valeur minimale"""
  minimumLabel: String
}

input ChurrosSchoolInput @source(name: "SchoolInput", subgraph: "Churros") @join__type(graph: CHURROS) {
  color: String!
  id: ID
  name: String!
}

input ChurrosServiceInput @source(name: "ServiceInput", subgraph: "Churros") @join__type(graph: CHURROS) {
  description: String
  group: ChurrosUID @source(name: "group", type: "UID", subgraph: "Churros")
  """
  Masquer le service. Vaut par défaut `true` lorsque l'on crée un nouveau service sans lui donner de nom, sinon `false`.
  """
  hide: Boolean
  iconURL: ChurrosLooseURL @source(name: "iconURL", type: "LooseURL", subgraph: "Churros")
  importance: Int
  name: String
  removeIcon: Boolean
  school: ChurrosUID @source(name: "school", type: "UID", subgraph: "Churros")
  studentAssociation: ChurrosUID @source(name: "studentAssociation", type: "UID", subgraph: "Churros")
  unlinkGroup: Boolean
  unlinkSchool: Boolean
  unlinkStudentAssociation: Boolean
  url: ChurrosLooseURL @source(name: "url", type: "LooseURL", subgraph: "Churros")
}

"""Contraintes d'un billet"""
input ChurrosTicketConstraintsInput @source(name: "TicketConstraintsInput", subgraph: "Churros") @join__type(graph: CHURROS) {
  """Ancien·ne·s étudiant·e·s"""
  alumni: ChurrosBooleanConstraint @source(name: "alumni", type: "BooleanConstraint", subgraph: "Churros")
  """Apprenti·e·s (FISAs)"""
  apprentices: ChurrosBooleanConstraint @source(name: "apprentices", type: "BooleanConstraint", subgraph: "Churros")
  """
  Personnes sans compte Churros ou avec un compte exté (c'est à dire non relié à une école)
  """
  external: ChurrosBooleanConstraint @source(name: "external", type: "BooleanConstraint", subgraph: "Churros")
  """Membres d'au moins un des groupes spécifiés"""
  groupMembers: [ChurrosUID!] @source(name: "groupMembers", type: "[UID!]", subgraph: "Churros")
  """Étudiant·e·s de certaines filières"""
  majors: [ChurrosUID!] @source(name: "majors", type: "[UID!]", subgraph: "Churros")
  """Réservable par les gestionnaires de l'évènement seulement"""
  managersOnly: Boolean
  """Étudiant·e·s de certaines promos (année)"""
  promotions: [Int!]
  """Cotisant·e·s de l'AE du groupe organisateur de l'évènement"""
  studentAssociationContributors: ChurrosBooleanConstraint @source(name: "studentAssociationContributors", type: "BooleanConstraint", subgraph: "Churros")
}

input ChurrosTicketGroupInput @source(name: "TicketGroupInput", subgraph: "Churros") @join__type(graph: CHURROS) {
  capacity: Int!
  id: ID
  name: String!
}

input ChurrosUpsertGroupInput @source(name: "UpsertGroupInput", subgraph: "Churros") @join__type(graph: CHURROS) {
  address: String!
  color: String
  description: String!
  email: String
  longDescription: String!
  mailingList: String
  name: String!
  parent: ChurrosUID @source(name: "parent", type: "UID", subgraph: "Churros")
  related: [String!]!
  selfJoinable: Boolean!
  studentAssociation: ChurrosUID @source(name: "studentAssociation", type: "UID", subgraph: "Churros")
  type: ChurrosGroupType! @source(name: "type", type: "GroupType!", subgraph: "Churros")
  """
  Ne sert qu'à la création du groupe. Il est impossible de modifier un uid existant
  """
  uid: ChurrosUID @source(name: "uid", type: "UID", subgraph: "Churros")
  website: String!
}

"""Champs constituant le profil d'un·e utilisateur·ice"""
input ChurrosUserProfileInput @source(name: "UserProfileInput", subgraph: "Churros") @join__type(graph: CHURROS) {
  """Pour effacer: `""`"""
  address: String
  """
  Date d'anniversaire. Pour supprimer une date existante, utiliser unsetBirthday
  """
  birthday: ChurrosDateTime @source(name: "birthday", type: "DateTime", subgraph: "Churros")
  description: ChurrosMarkdown @source(name: "description", type: "Markdown", subgraph: "Churros")
  firstName: String
  lastName: String
  """Pour effacer: `""`"""
  nickname: String
  otherEmails: [ChurrosEmail!] @source(name: "otherEmails", type: "[Email!]", subgraph: "Churros")
  """Pour effacer, mettre unsetPhone à `true`"""
  phone: ChurrosPhoneNumber @source(name: "phone", type: "PhoneNumber", subgraph: "Churros")
  """Supprimer une date d'anniversaire existante"""
  unsetBirthday: Boolean
  """Supprimer le numéro de téléphone"""
  unsetPhone: Boolean
}
 scalar ResolveToSourceArgs
          directive @resolveTo(
            requiredSelectionSet: String
            sourceName: String
            sourceTypeName: String
            sourceFieldName: String
            sourceSelectionSet: String
            sourceArgs: ResolveToSourceArgs
            keyField: String
            keysArg: String
            pubsubTopic: String
            filterBy: String
            additionalArgs: ResolveToSourceArgs
            result: String
            resultType: String
          ) on FIELD_DEFINITION
